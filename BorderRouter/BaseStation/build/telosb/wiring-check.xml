<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="84:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd210198bc0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd21036ad58"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd21036ad58"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd2101ba680"/></to>
    </wire>
    <wire loc="86:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7fd210191e70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd20fded790"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd20fded790"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd20fdbfb90"/></to>
    </wire>
    <wire loc="87:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fd210191300"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd20effe748"/></to>
    </wire>
    <wire loc="61:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd20effe748"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd20ef96728"/></to>
    </wire>
    <wire loc="89:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7fd210145a68"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd20effb798"/></to>
    </wire>
    <wire loc="63:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd20effb798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd20eff2460"/></to>
    </wire>
    <wire loc="90:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x7fd210143690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd20effa928"/></to>
    </wire>
    <wire loc="64:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd20effa928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd20ef9e180"/></to>
    </wire>
    <wire loc="91:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7fd210138ac0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd20eff9020"/></to>
    </wire>
    <wire loc="65:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd20eff9020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd20ef9dd20"/></to>
    </wire>
    <wire loc="92:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7fd210128270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd20eff9c30"/></to>
    </wire>
    <wire loc="66:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd20eff9c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd20ef9e738"/></to>
    </wire>
    <wire loc="94:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fd210147e58"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd20fdeb798"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd20fdeb798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd20fdbec30"/></to>
    </wire>
    <wire loc="95:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fd2101261c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd20fdea928"/></to>
    </wire>
    <wire loc="81:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd20fdea928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd20fdbddc0"/></to>
    </wire>
    <wire loc="96:BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x7fd210126d40"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd20fde9498"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd20fde9498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd20fdbb968"/></to>
    </wire>
    <wire loc="97:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fd210125410"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd20fde9a70"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd20fde9a70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd20fdb95b8"/></to>
    </wire>
    <wire loc="98:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x7fd210124148"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd20fde8758"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd20fde8758"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd20fdba020"/></to>
    </wire>
    <wire loc="100:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd210122020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd2100ca7d0"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd2100ca7d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd2100c2020"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2103651b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20e370498"/></to>
    </wire>
    <wire loc="59:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2103651b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20ef96110"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2103651b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20f0cbc28"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2103651b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20f14f020"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2103651b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20f16ee80"/></to>
    </wire>
    <wire loc="52:../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2103651b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20f18fb20"/></to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2103651b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20f2bf080"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2103651b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20f3b9de8"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2103651b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20f49fb28"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2103651b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20fc453c0"/></to>
    </wire>
    <wire loc="103:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2103651b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20e6498e0"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2103651b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20f931438"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2103651b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20fcf8dc8"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd2101bacb8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd2107e1390"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd2107e1390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd2103a6940"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fd2101ae728"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd2103640c0"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd2103640c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd2103611f8"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2101aedf0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2103651b0"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fd2103618c8"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fd2103628d8"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fd2103628d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd210343720"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fd210360020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd21035a080"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fd2103606c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd21009c020"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd210343720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd21032a020"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd21033a980"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd21032a690"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd210419cc0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd2103297f8"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fd2102e8710"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd21022c820"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fd2102d7710"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd210225820"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fd2102df0c0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd210232780"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fd2102c4868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd21020c780"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fd2102e6868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd210233aa0"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fd2102cbe40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd21020daa0"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fd2102c1868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd2101f6780"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fd2102d2898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd210207820"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fd2102e9da8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd21027f7a0"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fd2102c6868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd21021b780"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fd2102cc3d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd21021caa0"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fd2102d6ba8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd21021d820"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fd2102de020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd21022a780"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fd2102c3868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd210205780"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fd2102d4060"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd210216820"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fd2102e56e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd21022baa0"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fd2102f0930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd21028c020"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fd2102cab90"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd210206aa0"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fd2102ee218"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd210234820"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fd2102d0d30"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd210200820"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fd2102d91b0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd210239780"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fd2102c5868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd210214780"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fd2102e1a88"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd21023aa90"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fd2102cb120"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd210215aa0"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fd2102c2868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd2101fd780"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fd2102d3400"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd21020e820"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fd2102d8020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd210285a60"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fd2102c99f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd2101feaa0"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fd2102c7868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd210223780"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fd2102c8868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd2101f7aa0"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fd2102cd558"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd210224aa0"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fd2102ce120"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd2101f8820"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fd21028bd50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd21028b718"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd21028a3a0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fd2101ef0e8"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd21028a9b8"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fd2101ef830"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd2102385f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd21028c020"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd210237c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd21028b718"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd2102315f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd21028c020"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd210230c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd21028b718"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd2102295f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd21028c020"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd210228c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd21028b718"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fd210283858"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd210283220"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd210283e70"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fd2101ed020"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd2102824b0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fd2101ed768"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd2102225f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd210285a60"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd210221c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd210283220"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd21021a5f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd210285a60"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd210219c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd210283220"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd2102135f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd210285a60"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd210212c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd210283220"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd21020b5f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd210285a60"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd21020ac18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd210283220"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd2102045f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd210285a60"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd210203c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd210283220"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd2101fc5f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd210285a60"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd2101fbc18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd210283220"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd2101f55f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd210285a60"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd2101f4c18"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd210283220"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2103a57f8"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fd2103a0b48"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fd2107e3df8"/></to>
    </wire>
    <wire loc="98:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x7fd210112100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x7fd210110020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd21009c020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd2100c69b0"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd2100ba348"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fd2100c4a88"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd2100c4a88"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fe21c30"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd2100c04c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fd21009fca8"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd21009fca8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fe03448"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd2100bf648"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fd21009ee30"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd21009ee30"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fdffcd0"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fe17da0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fd210046568"/></to>
    </wire>
    <wire loc="486:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fd210046568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fea9ca0"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fe025f8"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7fd210044568"/></to>
    </wire>
    <wire loc="487:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fd210044568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fea43d8"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fdfde20"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fd210042568"/></to>
    </wire>
    <wire loc="488:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fd210042568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fea0ca0"/></to>
    </wire>
    <wire loc="442:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fd210087568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff3eca0"/></to>
    </wire>
    <wire loc="455:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fd210073568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff0fca0"/></to>
    </wire>
    <wire loc="531:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fd2100297d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff013d8"/></to>
    </wire>
    <wire loc="551:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fd210005558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe7bca0"/></to>
    </wire>
    <wire loc="532:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fd210027660"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fefdca0"/></to>
    </wire>
    <wire loc="460:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fd21006f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff06ca0"/></to>
    </wire>
    <wire loc="473:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fd21005a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fed8ca0"/></to>
    </wire>
    <wire loc="497:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fd210036568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe84ca0"/></to>
    </wire>
    <wire loc="535:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fd210021560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fef4ca0"/></to>
    </wire>
    <wire loc="545:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fd210011558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe97ca0"/></to>
    </wire>
    <wire loc="557:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fd20fffc560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe763d8"/></to>
    </wire>
    <wire loc="445:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fd210081568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff2f3d8"/></to>
    </wire>
    <wire loc="536:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fd21001f560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20feee3d8"/></to>
    </wire>
    <wire loc="450:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fd21007d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff263d8"/></to>
    </wire>
    <wire loc="463:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fd210069568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fef83d8"/></to>
    </wire>
    <wire loc="476:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fd210054568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fec93d8"/></to>
    </wire>
    <wire loc="489:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fd210040568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe9b3d8"/></to>
    </wire>
    <wire loc="500:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fd21002f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe763d8"/></to>
    </wire>
    <wire loc="440:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fd21008b668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff47ca0"/></to>
    </wire>
    <wire loc="453:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fd210077568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff19d08"/></to>
    </wire>
    <wire loc="466:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fd210063568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20feeaca0"/></to>
    </wire>
    <wire loc="530:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fd21002b970"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff013d8"/></to>
    </wire>
    <wire loc="548:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fd21000b558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe893d8"/></to>
    </wire>
    <wire loc="555:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fd20fffe558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe763d8"/></to>
    </wire>
    <wire loc="541:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fd210017560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20feae3d8"/></to>
    </wire>
    <wire loc="471:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fd21005e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fee1dd8"/></to>
    </wire>
    <wire loc="484:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fd21004a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20feb3ca0"/></to>
    </wire>
    <wire loc="495:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fd21003a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe8eca0"/></to>
    </wire>
    <wire loc="549:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fd210009558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe84ca0"/></to>
    </wire>
    <wire loc="538:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fd21001d558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20febcca0"/></to>
    </wire>
    <wire loc="443:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fd210085568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff393d8"/></to>
    </wire>
    <wire loc="456:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fd210071568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff0a3d8"/></to>
    </wire>
    <wire loc="493:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fd21003e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe97ca0"/></to>
    </wire>
    <wire loc="461:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fd21006d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff013d8"/></to>
    </wire>
    <wire loc="474:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fd210058568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fed33d8"/></to>
    </wire>
    <wire loc="498:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fd210034568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe7f3d8"/></to>
    </wire>
    <wire loc="540:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fd210019560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20feb3ca0"/></to>
    </wire>
    <wire loc="438:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fd21008e8d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fff6e18"/></to>
    </wire>
    <wire loc="451:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fd21007b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff22ca0"/></to>
    </wire>
    <wire loc="464:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fd210067568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fef4ca0"/></to>
    </wire>
    <wire loc="477:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fd210052568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fec5ca0"/></to>
    </wire>
    <wire loc="542:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fd210015560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20feeaca0"/></to>
    </wire>
    <wire loc="546:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fd21000f558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe923d8"/></to>
    </wire>
    <wire loc="552:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fd210003558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe763d8"/></to>
    </wire>
    <wire loc="482:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fd21004e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20febcca0"/></to>
    </wire>
    <wire loc="543:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fd210013560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fee53d8"/></to>
    </wire>
    <wire loc="441:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fd210089568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff423d8"/></to>
    </wire>
    <wire loc="454:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fd210075568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff133d8"/></to>
    </wire>
    <wire loc="467:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fd210061568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fee53d8"/></to>
    </wire>
    <wire loc="539:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fd21001b560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20feb73d8"/></to>
    </wire>
    <wire loc="550:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fd210007558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe7f3d8"/></to>
    </wire>
    <wire loc="472:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fd21005c668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fedc478"/></to>
    </wire>
    <wire loc="485:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fd210048568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20feae3d8"/></to>
    </wire>
    <wire loc="496:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fd210038568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe893d8"/></to>
    </wire>
    <wire loc="444:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fd210083568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff34ca0"/></to>
    </wire>
    <wire loc="494:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fd21003c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe923d8"/></to>
    </wire>
    <wire loc="449:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fd21007f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff2bca0"/></to>
    </wire>
    <wire loc="462:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fd21006b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fefdca0"/></to>
    </wire>
    <wire loc="475:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fd210056568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fecfca0"/></to>
    </wire>
    <wire loc="499:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fd210032568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe7bca0"/></to>
    </wire>
    <wire loc="439:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fd2100967f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff4b478"/></to>
    </wire>
    <wire loc="452:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fd210079568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff1d3d8"/></to>
    </wire>
    <wire loc="465:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fd210065568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20feee3d8"/></to>
    </wire>
    <wire loc="478:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fd210050568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fec03d8"/></to>
    </wire>
    <wire loc="534:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fd210023548"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fef83d8"/></to>
    </wire>
    <wire loc="547:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fd21000d558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe8eca0"/></to>
    </wire>
    <wire loc="533:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fd210025560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fef83d8"/></to>
    </wire>
    <wire loc="483:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fd21004c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20feb73d8"/></to>
    </wire>
    <wire loc="554:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fd210000558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe7bca0"/></to>
    </wire>
    <wire loc="558:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fd20fffa568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20fe9b3d8"/></to>
    </wire>
    <wire loc="529:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fd21002d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd20ff06ca0"/></to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd20fdbfb90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd20fd99860"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd20fdbec30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd20f091938"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd20fdbb968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd20f08f628"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd20fdb95b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd20f08d2a8"/></to>
    </wire>
    <wire loc="89:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd20fdd65e8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd20f337130"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd20f337130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd20f328060"/></to>
    </wire>
    <wire loc="86:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd20fdd0080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd20fdae170"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd20fdae170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd20fd83e18"/></to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd20fdbddc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd20f090ab0"/></to>
    </wire>
    <wire loc="85:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd20fde0998"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd20fdb7348"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd20fdb7348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd20fd84e40"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd20fdba020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd20f08fc18"/></to>
    </wire>
    <wire loc="90:../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd20fdd5478"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd20f333020"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd20f333020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd20f324020"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd20fd99860"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd20f0c0dc8"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fd20fdb62e0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd20f08a020"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fd20fd98b50"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fd20f08c400"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20fdb03b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20fd84020"/></to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20fd84020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f33c498"/></to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd20fd83e18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd20f0c0318"/></to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd20fd84e40"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fd20f3393b8"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd20fda4020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd20fd828f0"/></to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd20fd828f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd20f0ac2d0"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd20fdab398"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd20fd837d0"/></to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd20fd837d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd20f3386b0"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fd20f083698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20fd90b38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd20f089020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fd20fd8eb38"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fd20fd8eb38"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fd20f124db8"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd20f089cc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fd20fd87998"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fd20fd87998"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fd20f123ae8"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd20f0858d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd20f54c690"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f088368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f33c498"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f33c498"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f32c2e8"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f087188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f339d08"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f339d08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f32bb60"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fd20f087ab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fd20fcfbaf8"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fd20fcfbaf8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fd20fcf1140"/></to>
    </wire>
    <wire loc="106:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fd20f0846a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd20fd7dde0"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fd20fd7dde0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd20fd77140"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd20f0822a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd2100ca7d0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd20f0c0dc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fd20f0bcd28"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd20f3386b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd20f32a630"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd20f0ac2d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd20f0aa530"/></to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fd20f124db8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fd20f11a490"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd20f0c0318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd20f0b8170"/></to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fd20fd8f7f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd20f124748"/></to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd20f124748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fd20f11bdc8"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fd20f3393b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fd20f32b210"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20fd90b38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f155e10"/></to>
    </wire>
    <wire loc="96:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20f155e10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f11c428"/></to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fd20fd86a70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd20f126a40"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd20f126a40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fd20f11b118"/></to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fd20fd8fe78"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fd20f1221a8"/></to>
    </wire>
    <wire loc="93:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fd20f1221a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fd20f118808"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fd20f123ae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fd20f118188"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd20f0bcd28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd20fd7e020"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd20fd7e020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd20fd7b868"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd20f121670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd20f175a60"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd20f175a60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd20f16e298"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd20f172838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd20f0af5b8"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd20f0af5b8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd20f0ab020"/></to>
    </wire>
    <wire loc="103:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd20f0ab020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd20f0c1080"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd20f0c1080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd20f0bd838"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd20f0bd838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd20fd7eac0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd20fd7eac0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd20fd78460"/></to>
    </wire>
    <wire loc="107:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd20f121020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd20f0c1c80"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd20f0c1c80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd20f0bc668"/></to>
    </wire>
    <wire loc="108:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd20f0bc668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd20f154080"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd20f154080"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd20f1502b0"/></to>
    </wire>
    <wire loc="109:../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd20f154e50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd20fd7d788"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd20fd7d788"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd20f3ba168"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd20f3ba168"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd20f3b5600"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20fd76020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20fd0cdf8"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20fd0cdf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20fcf2450"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fd20fd6e320"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fd20fd068b0"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fd20fd068b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fd20fcef020"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd20fd6bca0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd20f4adc40"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd20fd6bca0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd20f3bc020"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fd20f3bc020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd20f3b6460"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fd20f4adc40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd20f49e198"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd20fd644b8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd20f4aa480"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd20f4aa480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd20f49e9f8"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fd20fd6d208"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd20f4a9140"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fd20f4a9140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd20f49c7c0"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20fd62328"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f33c498"/></to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20fd595f0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f339d08"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd20fd614a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd20f192690"/></to>
    </wire>
    <wire loc="56:../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd20f192690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd20f18b4c8"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fd20fd54838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd20f194bb0"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd20f194bb0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd20f935790"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd20fd61c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd2100ca7d0"/></to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fd20fd4f020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fd20fd51120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fd20fd52298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fd20fcf5b00"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fd20fcee308"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fd20fceb020"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd20fc45d38"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd20fc45d38"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd20fb53060"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd20fce0020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fd20fb4ce20"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd20fb4ce20"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fb3e020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fd20fcdf1b0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fd20fb48378"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fd20fb48378"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fb31720"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fd20fcde378"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fd20fb46688"/></to>
    </wire>
    <wire loc="77:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fd20fb46688"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fb27720"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fd20fcd99b8"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fd20fb13bd8"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fd20fb13bd8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fd20f9fddf8"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd20fcc7e58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f5d67d0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20f5d67d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f9b2e78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd20fcc8098"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fd20f5d3020"/></to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd20f5d3020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd20fcc8770"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fd20f5d12e8"/></to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd20f5d12e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd20fcc7778"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fd20f5d43a0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd20f5d43a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd20fcc8e60"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd20f5d1900"/></to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd20f5d1900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd20fccdcd8"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fd20f5c9e10"/></to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd20f5c9e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd20fccf5c0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fd20f5c7d60"/></to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd20f5c7d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd20fccfe30"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fd20f5c6528"/></to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd20f5c6528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd20fcce6e0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd20f5cd470"/></to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd20f5cd470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20fccb020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20f5cdc10"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20f5cdc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd20fcd77d0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fd20f5b77c0"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd20f5b77c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd20fcd0e08"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fd20f5b7020"/></to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd20f5b7020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd20fccb898"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fd20f5c9470"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd20f5c9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd20fcca130"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fd20f5cb470"/></to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd20f5cb470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd20fcca9a0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fd20f5ca470"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd20f5ca470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fd20fcc59e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f5a6e60"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20f5a6e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f9b2e78"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fd20fcc6ba8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f579558"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20f579558"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f9b2e78"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd20fcdb020"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd20f54c690"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd20fce95b0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd20f54ecc0"/></to>
    </wire>
    <wire loc="23:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd20f54ecc0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd20f533190"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fd20fcb90c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fd20fcba290"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd20fc453c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20fc3e7d8"/></to>
    </wire>
    <wire loc="51:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd20fc3e7d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20e7d4060"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd20fb53060"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd20e7d4848"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd20e7d4060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20e7cfb88"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd20e7d4848"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd20e7b32d0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd20e7cfb88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20e79e020"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fd20e7ad688"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd20e7b94b8"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd20e7b94b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd20e79e848"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd20e7af410"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd20fbcb630"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd20fbcb630"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd20fbb0878"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20e79b8c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20e7a4020"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20e7a4020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20fc24b90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20e798020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20e7a25b8"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20e7a25b8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20fc20850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20e7972a8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20e7a18c8"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20e7a18c8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20fc1d1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20fc24b90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd2102d8020"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20fc20850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fd2102d7710"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20fc1d1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fd2102cd558"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20fc24b90"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd2102d8020"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20fc20850"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fd2102d4060"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20fc1d1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fd2102cb120"/></to>
    </wire>
    <wire loc="70:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20fc24b90"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd2102d8020"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20fc20850"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fd2102d3400"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20fc1d1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fd2102cbe40"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20fc24b90"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd2102d8020"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20fc20850"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fd2102d2898"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20fc1d1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fd2102cab90"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20fc24b90"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd2102d8020"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20fc20850"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fd2102d0d30"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20fc1d1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fd2102c99f0"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20fc24b90"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd2102d8020"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20fc20850"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fd2102ce120"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20fc1d1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fd2102c8868"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fd20fb94b10"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fd20fbc83e0"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fd20fbc83e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd20fbc4980"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20fbb5928"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd2102d8020"/></to>
    </wire>
    <wire loc="73:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fd20fb4a020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fb3a720"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fd20fb491b8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fb35020"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fd20fc46c10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fb447d0"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fd20fb474f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fb2c020"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fb43908"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fd210087568"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fb3d120"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fd21005a568"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fb39908"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fd210089568"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fb34120"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fd21008e8d8"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fb30908"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7fd210052568"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fb2b120"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fd21005c668"/></to>
    </wire>
    <wire loc="69:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fb26908"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7fd210054568"/></to>
    </wire>
    <wire loc="63:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fd20fb13020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd20fb0a020"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd20fb12898"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fd20f9eebb8"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20fb0aa90"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fd2102d6ba8"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fd20faf7d60"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7fd2102c6868"/></to>
    </wire>
    <wire loc="55:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fd20faf6b48"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fd21005c668"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fd20f9fc8d0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fd20fae7568"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fd20fae7568"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fd20fad2020"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fd20f9ed780"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fd20fae9690"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fd20fae9690"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fd20fad6020"/></to>
    </wire>
    <wire loc="82:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fd20fadc568"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fd20fac8020"/></to>
    </wire>
    <wire loc="73:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fd20fae4568"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fd20facf020"/></to>
    </wire>
    <wire loc="77:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fd20fae2568"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fd20facd020"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fd20faed568"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fd20fad4020"/></to>
    </wire>
    <wire loc="80:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fd20fade568"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fd20faca020"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fd20fae6568"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fd20fad1020"/></to>
    </wire>
    <wire loc="83:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fd20fadb568"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fd20fac7020"/></to>
    </wire>
    <wire loc="78:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fd20fae1568"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fd20facc020"/></to>
    </wire>
    <wire loc="69:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fd20fae8568"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fd20fad3020"/></to>
    </wire>
    <wire loc="81:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fd20fadd568"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fd20fac9020"/></to>
    </wire>
    <wire loc="72:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fd20fae5568"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fd20fad0020"/></to>
    </wire>
    <wire loc="76:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fd20fae3568"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fd20face020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fd20faee578"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fd20fad5020"/></to>
    </wire>
    <wire loc="79:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fd20fadf568"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fd20facb020"/></to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd20f5d49b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f5c8d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fd20f5c0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd20f5c75c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd20f5b27c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd20f5b47c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd20f5d3c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fd20f5bac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd20f5b67c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fd20f5c2c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd20f5c3470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f5d5430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f9afb38"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f9afb38"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f9a9de0"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd20f5d0638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd20f5d0c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd20f5b8060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd20f5cf3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd20f5b4020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fd20f5ba470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd20f5cbc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fd20f5bd470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fd20f5c0c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fd20f5bdc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd20f5b2020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd20f5b3020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd20f5c3c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fd20f5be470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd20f5b6020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd20f5c6cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd20f5b1020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd20f9aeb80"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd20f5d5d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd20f5cec50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd20f5cac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fd20f5c1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fd20f5c1c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f5c85f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd20f5cf9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd20f5ce638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd20f5d0020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd20f5b8800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd20f5b37c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd20f5c2470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fd20f5bec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd20f5d3638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd20f5c44f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd20f5ce020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd20f5c4c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fd20f5b9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd20f5b1c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd20f9aeb80"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fd20f9aeb80"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd20f9a5e50"/></to>
    </wire>
    <wire loc="53:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9a3040"/></to>
    </wire>
    <wire loc="54:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9a3d40"/></to>
    </wire>
    <wire loc="51:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20f9b2e78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f9a6c10"/></to>
    </wire>
    <wire loc="55:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9a1a98"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fd20f99d838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd20f93a978"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd20f93a978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd20f935790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd20f9a01e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f919cf0"/></to>
    </wire>
    <wire loc="52:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20f919cf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20e6c67d0"/></to>
    </wire>
    <wire loc="63:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd20f99fcf8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd20f918948"/></to>
    </wire>
    <wire loc="53:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd20f918948"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd20e6c5b90"/></to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd20f99d020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd20f5fa020"/></to>
    </wire>
    <wire loc="54:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd20f5fa020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd20e6c4d18"/></to>
    </wire>
    <wire loc="67:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd20f99c730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd2100ca7d0"/></to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fd20f9915d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd20f935790"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd20f92f020"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd20e6c4d18"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd20f8b67f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd20e6c5b90"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd20f8b7128"/></to>
    </wire>
    <wire loc="105:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20e6c67d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f8b8020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20e6c5430"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20e6bb8c8"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20e6bb8c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20f74f660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd20f8b7128"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd20f83e020"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fd20e6c42a8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fd20f8b7770"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fd20f8b7770"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fd20f83e5f8"/></to>
    </wire>
    <wire loc="111:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd20f8b1850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd20e6c24b0"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20e6ae8c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20f8b4940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fd20f8b25d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20e6bcb38"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20e6bcb38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f750498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd20f8ac688"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd20e6b5020"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd20e6b5020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fd20f754a38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20f8b4940"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20f83f860"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd20f8b67f8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd20f83c1e0"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20f8b8020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f840ae8"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd20f83b860"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd20f8b1850"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fd20f83cac0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fd20f8b25d8"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd20f836780"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd20f8ac688"/></to>
    </wire>
    <wire loc="98:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fd20f83a020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd20f82fbc0"/></to>
    </wire>
    <wire loc="85:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd20f82fbc0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fd20f822020"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd20f835020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd2100ca7d0"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fd20f8345f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fd20f825948"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd20f81d268"/></to>
    </wire>
    <wire loc="86:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd20f828528"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fd20f81e8e0"/></to>
    </wire>
    <wire loc="90:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fd20f7f16e0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fd21002b970"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fd20f7ef658"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7fd210027660"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fd20f7ed558"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fd210025560"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fd20f7eb558"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7fd21001f560"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fd20f7e9558"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7fd210021560"/></to>
    </wire>
    <wire loc="14:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fd20f7f6a48"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fd20f6b0b18"/></to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fd20e6b5780"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd20f751940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fd20e6b5d58"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fd20f6b7250"/></to>
    </wire>
    <wire loc="11:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fd20f6b7250"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fd20f6b0b18"/></to>
    </wire>
    <wire loc="71:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd20e6ba7c0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd20f82fbc0"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20e6ba060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20f74fe30"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20f74fe30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20f6c00e0"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20f74db58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20e6ae8c8"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20f74f660"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20f6c2d18"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20f6c2d18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20e646d58"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fd20f754a38"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fd20f748480"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20f750498"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f6c2020"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20f6c2020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20e646060"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd20f751940"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd20f748d60"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20f6c00e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20e6440e0"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20f6c0960"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20f74db58"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20f7362a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20f6c00e0"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fd20f738438"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd20f828528"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fd20f738bd8"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fd20f825948"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd20f6c14a8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd20e6454c0"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20e644980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20f6c0960"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd20e642130"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd20e648020"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd20e6402e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fd20f6a76e0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fd20f822020"/></to>
    </wire>
    <wire loc="18:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fd20f6a1060"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fd21002b970"/></to>
    </wire>
    <wire loc="19:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fd20f6a0e00"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fd210025560"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd20f599a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd20f5a2100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd20f59ca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f596470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fd20f58fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd20f596c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd20f5822e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd20f5852e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd20f5a13a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fd20f58b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd20f5862e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd20f59ba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd20f59aa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fd20f590470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd20f593c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd20f595470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f5a5a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f9afb38"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd20f5a0c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd20f59f2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd20f589a38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd20f59fa00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd20f586a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd20f5a0020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fd20f58cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd20f59a2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20f59b2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd20f5a3a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fd20f58dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fd20f58e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fd20f58c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd20f584a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd20f585a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd20f592470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fd20f58ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd20f587a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd20f594470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd20f582a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd20f9aeb80"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd20f5a3470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd20f59c2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd20f5992e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fd20f590c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd20f595c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fd20f58f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd20f597470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd20f5a2718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f597c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd20f59d060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd20f59dc90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd20f5872e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd20f588a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd20f5a0638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd20f5882e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd20f5842e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd20f592c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fd20f58d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd20f5a2d30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd20f5a19b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd20f594c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd20f59d678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd20f593470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fd20f58bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd20f581780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd20f9aeb80"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd20f56c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd20f577900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd20f570470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f56bd98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fd20f563470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd20f56a5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd20f5577c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd20f5597c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd20f576c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fd20f55fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd20f55a7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd20f56e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd20f56d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fd20f565c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd20f566470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd20f56ad60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f5782a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f9afb38"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd20f573638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd20f573c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd20f55d060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd20f5723a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd20f559020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd20f574900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fd20f55f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd20f56ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20f570c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd20f5772e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fd20f560470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fd20f563c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fd20f560c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd20f557020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd20f558020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd20f566c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fd20f561470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd20f55a020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd20f568cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd20f556020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd20f9aeb80"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd20f578bd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd20f571c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd20f56dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fd20f564470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd20f568528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fd20f564c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd20f56ce10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd20f576020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f56b5f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd20f5729b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd20f571638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd20f55c7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd20f55c020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd20f573020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd20f55d800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd20f5587c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd20f565470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fd20f561c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd20f576638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd20f5742e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd20f5674f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd20f571020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd20f567c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fd20f55e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd20f556c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd20f9aeb80"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fd20f530608"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fd20f536ab8"/></to>
    </wire>
    <wire loc="20:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fd20f536ab8"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fd20f521a58"/></to>
    </wire>
    <wire loc="16:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fd20f51b360"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fd20f524b88"/></to>
    </wire>
    <wire loc="21:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fd20f524b88"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fd20f508108"/></to>
    </wire>
    <wire loc="17:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7fd20f51bba8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd20f4b7020"/></to>
    </wire>
    <wire loc="18:../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fd20f50c530"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7fd20f50d360"/></to>
    </wire>
    <wire loc="11:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7fd20f50d360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd20f4bf4e0"/></to>
    </wire>
    <wire loc="18:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fd20f503748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fd20f50ab60"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fd20f50ab60"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fd20f4e1bc8"/></to>
    </wire>
    <wire loc="19:../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fd20f508968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7fd20f50c530"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd20f4d2020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fd20f4cb3a8"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fd20f4cb3a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd20f4c8980"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20f4c5928"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fd2102f0930"/></to>
    </wire>
    <wire loc="9:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20f4bd5f8"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fd210077568"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd20f4a8ca8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd20f49b738"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fd20f4a73d8"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fd20f49be80"/></to>
    </wire>
    <wire loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fd20f49a820"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd20fc45d38"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fd20f48d880"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fd20fc46c10"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd20f48bb10"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fd20fb4ce20"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fd20f485c98"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fd20fb474f0"/></to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fd20f486cf8"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fd20fb13020"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd20f484e68"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f3ed7d0"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20f3ed7d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f9b2e78"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f483b28"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f3ec430"/></to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f3ec430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f9afb38"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd20f480520"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fd20f3ecd58"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd20f3ecd58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd20f480bf0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fd20f3ea638"/></to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd20f3ea638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd20f47f3c0"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fd20f3eac50"/></to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd20f3eac50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd20f47fab0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd20f3e7638"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd20f3e7638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd20f481c20"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fd20f3e1470"/></to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd20f3e1470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd20f482528"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fd20f3cac58"/></to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd20f3cac58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd20f9aeb80"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd20f4813b0"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd20f3ce7c0"/></to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd20f3ce7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20f47e1e8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20f3e4c10"/></to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20f3e4c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f47d3d0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f3df5f8"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f3df5f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f47dc58"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f3dfd98"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f3dfd98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd20f47ec48"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fd20f3e5020"/></to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd20f3e5020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd20f47b5d0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fd20f3cb020"/></to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd20f3cb020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd20f47c500"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fd20f3cd7c0"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd20f3cd7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd20f47cd30"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fd20f3cc020"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd20f3cc020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fd20f4755f0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fd20f3bc808"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fd20f3bc808"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fd20f3b6c48"/></to>
    </wire>
    <wire loc="98:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f497940"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f33c498"/></to>
    </wire>
    <wire loc="99:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f4957e8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f339d08"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd20f492460"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd20f337130"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd20f486170"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd20f330ac8"/></to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd20f330ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd20f322ac8"/></to>
    </wire>
    <wire loc="104:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd20f479020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd2100ca7d0"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd20f3e0470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd20f3eb9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd20f3e4470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fd20f3d7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd20f3de5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd20f3cb7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fd20f3d3c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd20f3e2470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fd20f3d9c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd20f3da470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd20f3ded60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd20f3e7c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd20f3d1060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd20f3e63a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd20f3cd020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd20f3e8900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fd20f3d3470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd20f3e2c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd20f3eb3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fd20f3d4470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fd20f3d7c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fd20f3d4c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd20f3dac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fd20f3d5470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd20f3ce020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd20f3dccc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd20f3ca020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd20f9aeb80"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd20f3e5c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd20f3e1c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fd20f3d8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd20f3dc528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fd20f3d8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd20f3e0e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd20f3ea020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd20f3e69b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd20f3e5638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd20f3d07c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd20f3d0020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd20f3e7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd20f3d1800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd20f3cc7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd20f3d9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fd20f3d5c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd20f3e82e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd20f3db4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd20f3dbc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fd20f3d2470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fd20f3ba8c0"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fd20f3b5d58"/></to>
    </wire>
    <wire loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd20f3a1a18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd2100ca7d0"/></to>
    </wire>
    <wire loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd20f3b4420"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fd20fb4ce20"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fd20f3b3688"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fd20fb4a020"/></to>
    </wire>
    <wire loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fd20f3b2818"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fd20fb491b8"/></to>
    </wire>
    <wire loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd20f3b1a30"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd20fb12898"/></to>
    </wire>
    <wire loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd20f3b06c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f1dda10"/></to>
    </wire>
    <wire loc="126:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20f1dda10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20f9b2e78"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd20f3af518"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fd20f1baa88"/></to>
    </wire>
    <wire loc="195:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd20f1baa88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd20f9aeb80"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd20f3aea88"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd20f1d72e8"/></to>
    </wire>
    <wire loc="137:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd20f1d72e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd20f3ae398"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fd20f1d6020"/></to>
    </wire>
    <wire loc="139:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd20f1d6020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f3ad328"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f33c498"/></to>
    </wire>
    <wire loc="77:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f3ac188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f339d08"/></to>
    </wire>
    <wire loc="78:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd20f3aab80"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd20f337130"/></to>
    </wire>
    <wire loc="79:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fd20f3acaf0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fd20fcfbaf8"/></to>
    </wire>
    <wire loc="81:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f3a6dc8"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f1cfa88"/></to>
    </wire>
    <wire loc="155:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f1cfa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f3a56a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f1cd2e8"/></to>
    </wire>
    <wire loc="156:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f1cd2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd20f3a66c8"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fd20f1d6d50"/></to>
    </wire>
    <wire loc="141:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd20f1d6d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd20f3a2108"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fd20f1ba2e8"/></to>
    </wire>
    <wire loc="192:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd20f1ba2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd20f3a3020"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fd20f1bc2e8"/></to>
    </wire>
    <wire loc="188:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd20f1bc2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd20f3a3850"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fd20f1bca88"/></to>
    </wire>
    <wire loc="189:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd20f1bca88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd20f3a2970"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd20f1bda88"/></to>
    </wire>
    <wire loc="187:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd20f1bda88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd20f3a1210"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fd20f1db0a0"/></to>
    </wire>
    <wire loc="129:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd20f1db0a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fd20f396e38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd20f2ce720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd20fbcb630"/></to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fd20f31c8b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd20f2cf528"/></to>
    </wire>
    <wire loc="69:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fd20f31eb20"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd20f2b05e0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fd20f2b05e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd20f1ffc38"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fd20f2be1c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd20f20d0c8"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd20f2bf080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20f2aca80"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd20f2aca80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20e546520"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fd20f2075a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd20f259290"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd20f254648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd20f2832d0"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd20f2832d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd20e541c78"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd20f1fee48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd20f29e108"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd20f29e108"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd20f299878"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd20e546520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20e52ca18"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fd20e5391e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd20e546d08"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd20e546d08"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd20e52b270"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd20e53c020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd20f29e108"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20e504200"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20e531a08"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20e531a08"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20fc24b90"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20e503750"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20e52f0c0"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20e52f0c0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20fc20850"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20e502a50"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20e52e430"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20e52e430"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20fc1d1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fd20f297b10"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fd20fbc83e0"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fd20f2505e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fd20f202618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd20f1f5e28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd20f1efe18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fd20f1efe18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd20f2be1c8"/></to>
    </wire>
    <wire loc="153:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd20f1d07c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd20f1dbcd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd20f1d37c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fd20f1c6a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd20f1cda88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd20f1d8020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fd20f1c22e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd20f1bd2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd20f1d27c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd20f1d17c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fd20f1c82e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd20f1caa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd20f1cc2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f1dc740"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f9afb38"/></to>
    </wire>
    <wire loc="138:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd20f1d7900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd20f1c1a38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd20f1d6738"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd20f1d8c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fd20f1c3a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd20f1d1020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20f1d2020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd20f1db6b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fd20f1c4a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fd20f1c52e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fd20f1c32e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd20f1bba88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd20f1c92e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fd20f1c5a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd20f1bea88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd20f1cb2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd20f1d3020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd20f1d0020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fd20f1c8a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd20f1cca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fd20f1c62e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd20f1cf2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd20f1d9368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd20f1d59b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd20f1be2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd20f1bfa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd20f1bf2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd20f1bb2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd20f1c9a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fd20f1c42e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd20f1d9980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd20f1d8638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd20f1cba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd20f1d53a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd20f1ca2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fd20f1c2a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd20f1b8780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd20f9aeb80"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fd20f190668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fd20f18c3a0"/></to>
    </wire>
    <wire loc="54:../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd20f1968b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20f18fb20"/></to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd20f16c578"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd20f172838"/></to>
    </wire>
    <wire loc="60:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd20f16b2a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd20f16f468"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd20f16f468"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd20f935790"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd20f16a080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd20f192690"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f16a848"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f339d08"/></to>
    </wire>
    <wire loc="57:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd20f154748"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd20f150978"/></to>
    </wire>
    <wire loc="58:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd20f14f728"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd20f154e50"/></to>
    </wire>
    <wire loc="62:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f14fd68"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f339d08"/></to>
    </wire>
    <wire loc="94:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd20f117528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd20f121670"/></to>
    </wire>
    <wire loc="95:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd20f116358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd20f121020"/></to>
    </wire>
    <wire loc="100:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f116970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f33c498"/></to>
    </wire>
    <wire loc="101:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f1157a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f339d08"/></to>
    </wire>
    <wire loc="102:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd20f1141c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd20f0ca2a8"/></to>
    </wire>
    <wire loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fd20f0eaac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fd20f0be928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd20f0bad50"/></to>
    </wire>
    <wire loc="74:../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd20f0bad50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd20f935790"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd20f0a73c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd20fd84e40"/></to>
    </wire>
    <wire loc="67:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd20ef96728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd20ef8cce8"/></to>
    </wire>
    <wire loc="67:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd20eff7348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd20ef9c908"/></to>
    </wire>
    <wire loc="69:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd20ef96110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd20ef8c6d0"/></to>
    </wire>
    <wire loc="60:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd20ef918f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd20eff7c80"/></to>
    </wire>
    <wire loc="69:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd20ef9b308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd20ef94208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd20ef9a020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd20ef95760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fd20ef91020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7fd20eca0020"/></to>
    </wire>
    <wire loc="64:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd20ef94208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd20ee64020"/></to>
    </wire>
    <wire loc="65:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd20ef95760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd20ee65868"/></to>
    </wire>
    <wire loc="66:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7fd20ee64db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fd20ef91020"/></to>
    </wire>
    <wire loc="70:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd20ef83bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd20ef918f8"/></to>
    </wire>
    <wire loc="71:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd20ee62a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd20ef918f8"/></to>
    </wire>
    <wire loc="72:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd20ee59420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd20ef918f8"/></to>
    </wire>
    <wire loc="74:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fd20ee636c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fd20ef80b48"/></to>
    </wire>
    <wire loc="75:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7fd20ee62020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7fd20ef84898"/></to>
    </wire>
    <wire loc="77:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7fd20ef7ab38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7fd20ee5eb20"/></to>
    </wire>
    <wire loc="78:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fd20ef79398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd20ee5c7d0"/></to>
    </wire>
    <wire loc="17:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fd20ee5c7d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd20ecb7800"/></to>
    </wire>
    <wire loc="80:../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fd20ee4d448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fd20ee31020"/></to>
    </wire>
    <wire loc="13:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fd20ee31020"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fd20ecba2a8"/></to>
    </wire>
    <wire loc="332:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7fd20ef27830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7fd20ef5ed70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7fd20ef2a020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fd20ef24918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7fd20ee60100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7fd20ee608a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fd20ee2b210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fd20ecb92a8"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fd20ecb92a8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fd20ee1e498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fd20ecba2a8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fd20ee1f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd20ecb9a08"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd20ecb4080"/></to>
    </wire>
    <wire loc="19:../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20ecb46b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20ecbce40"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20ecbce40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20ee22020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20ecbba68"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20e3dc5b8"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20e3dc5b8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20ecf74d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd20ee1c498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd20ecb9a08"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20e3d6430"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20ee21208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fd20ee1d270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20e3dd928"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20e3dd928"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20ecf8300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd20ee1a1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd20e3d7bd8"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd20e3d7bd8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fd20ecfa618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20ee21208"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20edb9e00"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fd20ee1e498"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fd20edb6860"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fd20ee1f020"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fd20edb76d8"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20ee22020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20edb90c8"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd20edb4020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd20ee1c498"/></to>
    </wire>
    <wire loc="60:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fd20edb5180"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fd20ee1d270"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd20edaf020"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd20ee1a1c8"/></to>
    </wire>
    <wire loc="64:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fd20edb4658"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd20eda0c38"/></to>
    </wire>
    <wire loc="88:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd20eda0c38"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fd20ed99060"/></to>
    </wire>
    <wire loc="67:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd20edaf9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd20ed10020"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd20ed10020"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fd20fbc83e0"/></to>
    </wire>
    <wire loc="70:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd20edad928"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd2100ca7d0"/></to>
    </wire>
    <wire loc="89:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd20ed9d528"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fd20ed958e0"/></to>
    </wire>
    <wire loc="87:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd20eda0448"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd20ed9c7c0"/></to>
    </wire>
    <wire loc="91:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fd20ed941e8"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7fd21001b560"/></to>
    </wire>
    <wire loc="92:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fd20ed92020"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7fd210019560"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fd20ed91e00"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7fd210017560"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fd20ed8fc78"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7fd210013560"/></to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fd20ed8daf0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7fd210015560"/></to>
    </wire>
    <wire loc="66:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd20e3db4b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd20eda0c38"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20e3dcd18"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20ecf7ca0"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20ecf7ca0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20eced9d8"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20ecf69d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20e3d6430"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20ecf74d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20ecee698"/></to>
    </wire>
    <wire loc="106:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20ecee698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20e36d9a8"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fd20ecfa618"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fd20ecf4140"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20ecf8300"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20ecef908"/></to>
    </wire>
    <wire loc="105:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd20ecef908"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd20e36ebb8"/></to>
    </wire>
    <wire loc="108:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20eced9d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20e36ce20"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fd20ecf30a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd20ed9d528"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20ecec3c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20ecf69d0"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20ecf3e18"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20eced9d8"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd20ece8d18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd20eceedd8"/></to>
    </wire>
    <wire loc="107:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd20eceedd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd20e36c268"/></to>
    </wire>
    <wire loc="65:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd20ece8060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd20eda0448"/></to>
    </wire>
    <wire loc="109:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20e36a6f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20ecec3c8"/></to>
    </wire>
    <wire loc="111:../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd20e36ae78"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd20e370a70"/></to>
    </wire>
    <wire loc="75:../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd20e367020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd20e33be50"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd20ece8060"/></to>
    </wire>
    <wire loc="82:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd20e3395b8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd20ece8780"/></to>
    </wire>
    <wire loc="84:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd20e339b50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd20ece8d18"/></to>
    </wire>
    <wire loc="85:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20e337888"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20ecd2908"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="45:../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BaseStationP" loc="60:BaseStationP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../tos/platforms/telosa/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../tos/system/StateImplC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fded020"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd20fded378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fded020"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd20fded378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../tos/system/RandomC.nc">
      <documentation loc="33:../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../tos/system/StateC.nc">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fd2102bc1a0" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fd2102bc518" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fd2102bc8a0" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fd2102bcbf8" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fd2102bb020" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fd2102bb370" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fd2102bb6d8" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fd2102bba40" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fd2102bbdf0" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fd21027e108" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fd21027e4b8" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fd20fff5998" loc="40:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fd20fff5d20" loc="41:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fd20fff4108" loc="42:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fd20fff4490" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fd20fff47e0" loc="44:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fd20fc017c0" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fd20fc017c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fd20fbc2370" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fd20fbc2370"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fd20fbc9ce8" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fd20fbc9ce8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fd20fbaf4a0" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fd20fbaf4a0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fd20fbaf868" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fd20fbaf868"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fd20fbad020" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fd20fbad020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fd20fbad3c8" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fd20fbadb58" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fd20fbadb58"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fd20fbd1ae8" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fd20fbd1ae8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fd20fb8d278" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fd20fb8d278"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fd20fb8d640" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fd20fb8d640"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fd20fb8ddb8" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fd20fb8ddb8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fd20fb8c1a0" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fd20f734988" loc="89:../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fd20f726510" loc="42:../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fd20f70da78" loc="52:../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd20f4e2c30" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd20f4e2c30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd20f4df380" loc="52:../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20f4df380"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd20f2cd110" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd20f2cd110"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd20f27c400" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd20f27c400"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd20f24eb40" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd20f24eb40"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fd20f24ee50" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fd2103651b0" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2103651b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd210365500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd21036ad58" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fd21036ad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd2103690d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd2103640c0" loc="42:../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd2103640c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd210364410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fd210360020" loc="6:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fd210360020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd210360370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd2103611f8" loc="4:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd2103611f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd210361548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fd2103618c8" loc="5:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fd2103618c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd210361c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fd2103606c0" loc="7:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fd2103606c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd210360a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd21035a080" loc="2:../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd21035a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd21035a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fd2103628d8" loc="39:../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fd2103628d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd210362c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fd21033a980" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd21033a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fd2103407c8"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fd21033ae58"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fd210340020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fd2103401a8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fd21033acd0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fd210340330"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fd2103404b8"/>
        <function-ref name="initClocks" scoped="" ref="0x7fd210340640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd210343720" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd210343720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd210343a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fd21032a690" loc="46:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd21032a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fd2103294c8"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fd21032ab68"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fd21032acf0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fd21032ae78"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fd21032a9e0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fd210329030"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fd2103291b8"/>
        <function-ref name="initClocks" scoped="" ref="0x7fd210329340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fd2103297f8" loc="47:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd2103297f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd210329b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd21032a020" loc="45:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd21032a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd21032a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fd2102e8710" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fd2102e8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd2102e8a60"/>
        <function-ref name="getControl" scoped="" ref="0x7fd2102e8be8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2102e8d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd2102e7020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2102e71a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2102e7330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2102e74b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd2102e7640"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2102e77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fd2102d7710" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fd2102d7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd2102d7a60"/>
        <function-ref name="getControl" scoped="" ref="0x7fd2102d7be8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2102d7d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd2102d6020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2102d61a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2102d6330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2102d64b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd2102d6640"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2102d67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fd2102df0c0" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fd2102df0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102df410"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd2102df598"/>
        <function-ref name="captured" scoped="" ref="0x7fd2102df720"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102df8a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102dfa30"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd2102dfbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fd2102c4868" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fd2102c4868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102c4bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd2102c4d40"/>
        <function-ref name="captured" scoped="" ref="0x7fd2102c3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102c31a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102c3330"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd2102c34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fd2102e6868" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fd2102e6868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102e6bb8"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd2102e6d40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2102e5020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd2102e51a8"/>
        <function-ref name="fired" scoped="" ref="0x7fd2102e5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fd2102cbe40" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fd2102cbe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102ca1c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd2102ca348"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2102ca4d0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd2102ca658"/>
        <function-ref name="fired" scoped="" ref="0x7fd2102ca7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fd2102c1868" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fd2102c1868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102c1bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd2102c1d40"/>
        <function-ref name="captured" scoped="" ref="0x7fd2102c0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102c01a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102c0330"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd2102c04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fd2102d2898" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fd2102d2898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd2102d2be8"/>
        <function-ref name="getControl" scoped="" ref="0x7fd2102d2d70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2102d0020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd2102d01a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2102d0330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2102d04b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2102d0640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd2102d07c8"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2102d0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fd2102e9da8" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fd2102e9da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd2102ef170"/>
        <function-ref name="getControl" scoped="" ref="0x7fd2102ef2f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2102ef480"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd2102ef608"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2102ef790"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2102ef918"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2102efaa0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd2102efc28"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2102efdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fd2102c6868" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fd2102c6868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102c6bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd2102c6d40"/>
        <function-ref name="captured" scoped="" ref="0x7fd2102c5020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102c51a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102c5330"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd2102c54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fd2102cc3d0" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fd2102cc3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102cc720"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd2102cc8a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2102cca30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd2102ccbb8"/>
        <function-ref name="fired" scoped="" ref="0x7fd2102ccd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fd2102d6ba8" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fd2102d6ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd2102d5020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd2102d51a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2102d5330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd2102d54b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2102d5640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2102d57c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2102d5950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd2102d5ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2102d5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fd2102de020" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fd2102de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102de370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd2102de4f8"/>
        <function-ref name="captured" scoped="" ref="0x7fd2102de680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102de808"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102de990"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd2102deb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fd2102c3868" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fd2102c3868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102c3bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd2102c3d40"/>
        <function-ref name="captured" scoped="" ref="0x7fd2102c2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102c21a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102c2330"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd2102c24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fd2102d4060" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fd2102d4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd2102d43b0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd2102d4538"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2102d46c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd2102d4848"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2102d49d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2102d4b58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2102d4ce0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd2102d4e68"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2102d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fd2102e56e0" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fd2102e56e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102e5a30"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd2102e5bb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2102e5d40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd2102e0020"/>
        <function-ref name="fired" scoped="" ref="0x7fd2102e01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fd2102f0930" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fd2102f0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2102f0c80"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd2102f0e08"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2102f8020"/>
        <function-ref name="get" scoped="" ref="0x7fd2102f81a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2102f8330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102f84b8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd2102f8640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102f87c8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd2102f8950"/>
        <function-ref name="setMode" scoped="" ref="0x7fd2102f8ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd2102f8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fd2102cab90" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fd2102cab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102c9020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd2102c91a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2102c9330"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd2102c94b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd2102c9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fd2102ee218" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fd2102ee218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd2102ee568"/>
        <function-ref name="getControl" scoped="" ref="0x7fd2102ee6f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2102ee878"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd2102eea00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2102eeb88"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2102eed10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2102e8020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd2102e81a8"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2102e8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fd2102d0d30" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fd2102d0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd2102cf0d8"/>
        <function-ref name="getControl" scoped="" ref="0x7fd2102cf260"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2102cf3e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd2102cf570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2102cf6f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2102cf880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2102cfa08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd2102cfb90"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2102cfd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fd2102d91b0" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fd2102d91b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102d9500"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd2102d9688"/>
        <function-ref name="captured" scoped="" ref="0x7fd2102d9810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102d9998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102d9b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd2102d9ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fd2102c5868" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fd2102c5868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102c5bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd2102c5d40"/>
        <function-ref name="captured" scoped="" ref="0x7fd2102c4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102c41a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102c4330"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd2102c44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fd2102e1a88" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fd2102e1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102e1dd8"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd2102e6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2102e61a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd2102e6330"/>
        <function-ref name="fired" scoped="" ref="0x7fd2102e64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fd2102cb120" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fd2102cb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102cb470"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd2102cb5f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2102cb780"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd2102cb908"/>
        <function-ref name="fired" scoped="" ref="0x7fd2102cba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fd2102c2868" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fd2102c2868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102c2bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd2102c2d40"/>
        <function-ref name="captured" scoped="" ref="0x7fd2102c1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102c11a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102c1330"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd2102c14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fd2102d3400" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fd2102d3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd2102d3750"/>
        <function-ref name="getControl" scoped="" ref="0x7fd2102d38d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2102d3a60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd2102d3be8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2102d3d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2102d2020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2102d21a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd2102d2330"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2102d24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fd2102d8020" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fd2102d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2102d8370"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd2102d84f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2102d8680"/>
        <function-ref name="get" scoped="" ref="0x7fd2102d8808"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2102d8990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102d8b18"/>
        <function-ref name="getMode" scoped="" ref="0x7fd2102d8ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102d8e28"/>
        <function-ref name="overflow" scoped="" ref="0x7fd2102d7020"/>
        <function-ref name="setMode" scoped="" ref="0x7fd2102d71a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd2102d7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fd2102c99f0" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fd2102c99f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102c9d40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd2102c8020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2102c81a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd2102c8330"/>
        <function-ref name="fired" scoped="" ref="0x7fd2102c84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fd2102c7868" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fd2102c7868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102c7bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd2102c7d40"/>
        <function-ref name="captured" scoped="" ref="0x7fd2102c6020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102c61a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102c6330"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd2102c64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fd2102c8868" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fd2102c8868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102c8db8"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd2102c7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2102c71a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd2102c7330"/>
        <function-ref name="fired" scoped="" ref="0x7fd2102c74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fd2102cd558" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fd2102cd558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2102cd8a8"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd2102cda30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2102cdbb8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd2102cdd40"/>
        <function-ref name="fired" scoped="" ref="0x7fd2102cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fd2102ce120" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fd2102ce120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd2102ce470"/>
        <function-ref name="getControl" scoped="" ref="0x7fd2102ce5f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2102ce780"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd2102ce908"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2102cea90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2102cec18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2102ceda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd2102cd020"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2102cd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fd21028a3a0" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd21028a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd21028a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fd21028bd50" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fd21028bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd21028a0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fd21028a9b8" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd21028a9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd21028ad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fd21028b718" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd21028b718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd21028ba88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd21028c020" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd21028c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd21028c370"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd21028c4f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd21028c680"/>
        <function-ref name="get" scoped="" ref="0x7fd21028c808"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd21028c990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd21028cb18"/>
        <function-ref name="getMode" scoped="" ref="0x7fd21028cca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd21028ce28"/>
        <function-ref name="overflow" scoped="" ref="0x7fd21028b020"/>
        <function-ref name="setMode" scoped="" ref="0x7fd21028b1a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd21028b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fd210283e70" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd210283e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd2102821e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fd210283858" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fd210283858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd210283ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fd2102824b0" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd2102824b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd210282800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fd210283220" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd210283220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd210283590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd210285a60" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd210285a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd210285db0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd210284020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2102841a8"/>
        <function-ref name="get" scoped="" ref="0x7fd210284330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2102844b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd210284640"/>
        <function-ref name="getMode" scoped="" ref="0x7fd2102847c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd210284950"/>
        <function-ref name="overflow" scoped="" ref="0x7fd210284ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7fd210284c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd210284de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd210239780" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd210239780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd210239ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd210239c58"/>
        <function-ref name="captured" scoped="" ref="0x7fd210239de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd210238020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102381a8"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd210238330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd21027f7a0" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd21027f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd21027faf0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd21027fc78"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd21027fe00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd21023a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd21023a1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd21023a330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd21023a4b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd21023a640"/>
        <function-ref name="setControl" scoped="" ref="0x7fd21023a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd210237c18" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd210237c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd210236020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd21023aa90" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd21023aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd21023ade0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd210239020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2102391a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd210239330"/>
        <function-ref name="fired" scoped="" ref="0x7fd2102394b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd2102385f8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd2102385f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd210238948"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd210238ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd210238c58"/>
        <function-ref name="get" scoped="" ref="0x7fd210238de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd210237020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102371a8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd210237330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102374b8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd210237640"/>
        <function-ref name="setMode" scoped="" ref="0x7fd2102377c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd210237950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd210232780" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd210232780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd210232ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd210232c58"/>
        <function-ref name="captured" scoped="" ref="0x7fd210232de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd210231020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102311a8"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd210231330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd210234820" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd210234820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd210234b70"/>
        <function-ref name="getControl" scoped="" ref="0x7fd210234cf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd210234e80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd210233030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2102331b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd210233340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2102334c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd210233650"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2102337d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd210230c18" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd210230c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd21022e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd210233aa0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd210233aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd210233df0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd210232020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2102321a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd210232330"/>
        <function-ref name="fired" scoped="" ref="0x7fd2102324b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd2102315f8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd2102315f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd210231948"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd210231ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd210231c58"/>
        <function-ref name="get" scoped="" ref="0x7fd210231de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd210230020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102301a8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd210230330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102304b8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd210230640"/>
        <function-ref name="setMode" scoped="" ref="0x7fd2102307c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd210230950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd21022a780" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd21022a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd21022aad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd21022ac58"/>
        <function-ref name="captured" scoped="" ref="0x7fd21022ade0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd210229020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102291a8"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd210229330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd21022c820" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd21022c820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd21022cb70"/>
        <function-ref name="getControl" scoped="" ref="0x7fd21022ccf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd21022ce80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd21022b030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd21022b1b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd21022b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd21022b4c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd21022b650"/>
        <function-ref name="setControl" scoped="" ref="0x7fd21022b7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd210228c18" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd210228c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd210227020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd21022baa0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd21022baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd21022bdf0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd21022a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd21022a1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd21022a330"/>
        <function-ref name="fired" scoped="" ref="0x7fd21022a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd2102295f8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd2102295f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd210229948"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd210229ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd210229c58"/>
        <function-ref name="get" scoped="" ref="0x7fd210229de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd210228020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102281a8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd210228330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102284b8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd210228640"/>
        <function-ref name="setMode" scoped="" ref="0x7fd2102287c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd210228950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd210223780" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd210223780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd210223ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd210223c58"/>
        <function-ref name="captured" scoped="" ref="0x7fd210223de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd210222020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102221a8"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd210222330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd210225820" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd210225820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd210225b70"/>
        <function-ref name="getControl" scoped="" ref="0x7fd210225cf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd210225e80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd210224030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2102241b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd210224340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2102244c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd210224650"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2102247d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd210221c18" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd210221c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd21021f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd210224aa0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd210224aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd210224df0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd210223020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2102231a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd210223330"/>
        <function-ref name="fired" scoped="" ref="0x7fd2102234b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd2102225f8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd2102225f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd210222948"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd210222ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd210222c58"/>
        <function-ref name="get" scoped="" ref="0x7fd210222de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd210221020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102211a8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd210221330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102214b8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd210221640"/>
        <function-ref name="setMode" scoped="" ref="0x7fd2102217c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd210221950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd21021b780" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd21021b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd21021bad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd21021bc58"/>
        <function-ref name="captured" scoped="" ref="0x7fd21021bde0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd21021a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd21021a1a8"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd21021a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd21021d820" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd21021d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd21021db70"/>
        <function-ref name="getControl" scoped="" ref="0x7fd21021dcf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd21021de80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd21021c030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd21021c1b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd21021c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd21021c4c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd21021c650"/>
        <function-ref name="setControl" scoped="" ref="0x7fd21021c7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd210219c18" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd210219c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd210218020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd21021caa0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd21021caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd21021cdf0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd21021b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd21021b1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd21021b330"/>
        <function-ref name="fired" scoped="" ref="0x7fd21021b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd21021a5f8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd21021a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd21021a948"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd21021aad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd21021ac58"/>
        <function-ref name="get" scoped="" ref="0x7fd21021ade0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd210219020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102191a8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd210219330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102194b8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd210219640"/>
        <function-ref name="setMode" scoped="" ref="0x7fd2102197c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd210219950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd210214780" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd210214780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd210214ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd210214c58"/>
        <function-ref name="captured" scoped="" ref="0x7fd210214de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd210213020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102131a8"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd210213330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd210216820" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd210216820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd210216b70"/>
        <function-ref name="getControl" scoped="" ref="0x7fd210216cf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd210216e80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd210215030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2102151b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd210215340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2102154c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd210215650"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2102157d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd210212c18" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd210212c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd210211020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd210215aa0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd210215aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd210215df0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd210214020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2102141a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd210214330"/>
        <function-ref name="fired" scoped="" ref="0x7fd2102144b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd2102135f8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd2102135f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd210213948"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd210213ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd210213c58"/>
        <function-ref name="get" scoped="" ref="0x7fd210213de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd210212020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102121a8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd210212330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102124b8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd210212640"/>
        <function-ref name="setMode" scoped="" ref="0x7fd2102127c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd210212950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd21020c780" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd21020c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd21020cad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd21020cc58"/>
        <function-ref name="captured" scoped="" ref="0x7fd21020cde0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd21020b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd21020b1a8"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd21020b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd21020e820" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd21020e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd21020eb70"/>
        <function-ref name="getControl" scoped="" ref="0x7fd21020ecf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd21020ee80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd21020d030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd21020d1b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd21020d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd21020d4c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd21020d650"/>
        <function-ref name="setControl" scoped="" ref="0x7fd21020d7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd21020ac18" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd21020ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd210209020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd21020daa0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd21020daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd21020ddf0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd21020c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd21020c1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd21020c330"/>
        <function-ref name="fired" scoped="" ref="0x7fd21020c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd21020b5f8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd21020b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd21020b948"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd21020bad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd21020bc58"/>
        <function-ref name="get" scoped="" ref="0x7fd21020bde0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd21020a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd21020a1a8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd21020a330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd21020a4b8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd21020a640"/>
        <function-ref name="setMode" scoped="" ref="0x7fd21020a7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd21020a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd210205780" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd210205780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd210205ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd210205c58"/>
        <function-ref name="captured" scoped="" ref="0x7fd210205de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd210204020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102041a8"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd210204330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd210207820" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd210207820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd210207b70"/>
        <function-ref name="getControl" scoped="" ref="0x7fd210207cf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd210207e80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd210206030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2102061b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd210206340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2102064c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd210206650"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2102067d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd210203c18" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd210203c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd210202020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd210206aa0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd210206aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd210206df0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd210205020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2102051a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd210205330"/>
        <function-ref name="fired" scoped="" ref="0x7fd2102054b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd2102045f8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd2102045f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd210204948"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd210204ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd210204c58"/>
        <function-ref name="get" scoped="" ref="0x7fd210204de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd210203020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2102031a8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd210203330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2102034b8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd210203640"/>
        <function-ref name="setMode" scoped="" ref="0x7fd2102037c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd210203950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd2101fd780" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd2101fd780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2101fdad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd2101fdc58"/>
        <function-ref name="captured" scoped="" ref="0x7fd2101fdde0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2101fc020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2101fc1a8"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd2101fc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd210200820" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd210200820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd210200b70"/>
        <function-ref name="getControl" scoped="" ref="0x7fd210200cf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd210200e80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd2101fe030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2101fe1b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2101fe340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2101fe4c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd2101fe650"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2101fe7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd2101fbc18" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd2101fbc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd2101fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd2101feaa0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd2101feaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2101fedf0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd2101fd020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2101fd1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd2101fd330"/>
        <function-ref name="fired" scoped="" ref="0x7fd2101fd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd2101fc5f8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd2101fc5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2101fc948"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd2101fcad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2101fcc58"/>
        <function-ref name="get" scoped="" ref="0x7fd2101fcde0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2101fb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2101fb1a8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd2101fb330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2101fb4b8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd2101fb640"/>
        <function-ref name="setMode" scoped="" ref="0x7fd2101fb7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd2101fb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd2101f6780" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd2101f6780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2101f6ad0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd2101f6c58"/>
        <function-ref name="captured" scoped="" ref="0x7fd2101f6de0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2101f5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2101f51a8"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd2101f5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd2101f8820" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd2101f8820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd2101f8b70"/>
        <function-ref name="getControl" scoped="" ref="0x7fd2101f8cf8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2101f8e80"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd2101f7030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd2101f71b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2101f7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd2101f74c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd2101f7650"/>
        <function-ref name="setControl" scoped="" ref="0x7fd2101f77d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd2101f4c18" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd2101f4c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd2101f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd2101f7aa0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd2101f7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd2101f7df0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd2101f6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd2101f61a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd2101f6330"/>
        <function-ref name="fired" scoped="" ref="0x7fd2101f64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd2101f55f8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd2101f55f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2101f5948"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd2101f5ad0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd2101f5c58"/>
        <function-ref name="get" scoped="" ref="0x7fd2101f5de0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd2101f4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2101f41a8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd2101f4330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2101f44b8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd2101f4640"/>
        <function-ref name="setMode" scoped="" ref="0x7fd2101f47c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd2101f4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fd2101ed768" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fd2101ed768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd2101edab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fd2101ef0e8" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fd2101ef0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd2101ef438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fd2101ef830" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fd2101ef830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd2101efb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fd2101ed020" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fd2101ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd2101ed370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fd210419cc0" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd210419cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd2106850a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fd2107e3df8" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fd2107e3df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fd21075f170"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fd21075f2f8"/>
        <function-ref name="sleep" scoped="" ref="0x7fd21075f480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fd2104e9580" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fd2104e9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fd2104e98d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7fd210341320" loc="39:../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd210341320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fd2101b91a8"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fd2103417f8"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fd210341980"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fd210341b08"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fd210341670"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fd210341c90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fd210341e18"/>
        <function-ref name="initClocks" scoped="" ref="0x7fd2101b9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fd2101aedf0" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2101aedf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd2101ad170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd2101ba680" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fd2101ba680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd2101ba9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fd2101ae728" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fd2101ae728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd2101aea78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fd2101bacb8" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fd2101bacb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd2101ae0a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd2101ae228"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd2101ae3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd2107d6ca0" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fd2107d6ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd210816020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd2108161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd2107e1390" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fd2107e1390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd2107e16e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd2107e1868"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd2107e19f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd2103a57f8" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fd2103a57f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd2103a5b48"/>
        <function-ref name="runTask" scoped="" ref="0x7fd2103a5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fd2103a0b48" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fd2103a0b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fd2103a2020"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fd2103a21a8"/>
        <function-ref name="sleep" scoped="" ref="0x7fd2103a2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd2103a6940" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fd2103a6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd2103a6c90"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd2103a6e18"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd2103a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fd210198bc0" loc="62:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fd210198bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd210196020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fd210191300" loc="63:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fd210191300"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd210191650"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd2101917d8"/>
        <function-ref name="start" scoped="" ref="0x7fd210191960"/>
        <function-ref name="stop" scoped="" ref="0x7fd210191ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x7fd210143690" loc="67:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartReceive" scoped="" ref="0x7fd210143690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2101439e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x7fd210124148" loc="75:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAMPacket" scoped="" ref="0x7fd210124148"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd210124498"/>
        <function-ref name="source" scoped="" ref="0x7fd210124620"/>
        <function-ref name="address" scoped="" ref="0x7fd2101247a8"/>
        <function-ref name="destination" scoped="" ref="0x7fd210124930"/>
        <function-ref name="setSource" scoped="" ref="0x7fd210124ab8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd210124c40"/>
        <function-ref name="type" scoped="" ref="0x7fd210124dc8"/>
        <function-ref name="setType" scoped="" ref="0x7fd210123020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd2101231a8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd210123330"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd2101234b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x7fd210112100" loc="98:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="uartSendTask" scoped="" ref="0x7fd210112100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd210112450"/>
        <function-ref name="runTask" scoped="" ref="0x7fd2101125d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7fd210191e70" loc="64:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7fd210191e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd2101951e8"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd210195370"/>
        <function-ref name="start" scoped="" ref="0x7fd2101954f8"/>
        <function-ref name="stop" scoped="" ref="0x7fd210195680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7fd210125410" loc="74:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7fd210125410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd210125760"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2101258e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd210125a70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd210125bf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd210125d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7fd2101261c8" loc="72:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7fd2101261c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd210126518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x7fd210110020" loc="99:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="radioSendTask" scoped="" ref="0x7fd210110020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd210110370"/>
        <function-ref name="runTask" scoped="" ref="0x7fd2101104f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd210122020" loc="77:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd210122020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd210122470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd2101225f8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd210122780"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd210122908"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd210122a90"/>
        <function-ref name="get" scoped="" ref="0x7fd210122c18"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd210122da0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd2101214b8"/>
        <function-ref name="set" scoped="" ref="0x7fd210121020"/>
        <function-ref name="led0On" scoped="" ref="0x7fd2101211a8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd210121330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7fd210138ac0" loc="68:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartPacket" scoped="" ref="0x7fd210138ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd210138e10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd21018f020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd21018f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd21018f330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd21018f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7fd210147e58" loc="71:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7fd210147e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2101391e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd210139370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2101394f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd210139680"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd210139808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7fd210145a68" loc="66:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartSend" scoped="" ref="0x7fd210145a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd210145db8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd210194020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2101941a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd210194330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2101944b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7fd210128270" loc="69:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartAMPacket" scoped="" ref="0x7fd210128270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd2101285c0"/>
        <function-ref name="source" scoped="" ref="0x7fd210128748"/>
        <function-ref name="address" scoped="" ref="0x7fd2101288d0"/>
        <function-ref name="destination" scoped="" ref="0x7fd210128a58"/>
        <function-ref name="setSource" scoped="" ref="0x7fd210128be0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd210128d68"/>
        <function-ref name="type" scoped="" ref="0x7fd210147020"/>
        <function-ref name="setType" scoped="" ref="0x7fd2101471a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd210147330"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd2101474b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd210147640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x7fd210126d40" loc="73:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSnoop" scoped="" ref="0x7fd210126d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2101250d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd2100ca7d0" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd2100ca7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd2100cab20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd2100caca8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd2100cae30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd2100c7020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd2100c71a8"/>
        <function-ref name="get" scoped="" ref="0x7fd2100c7330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd2100c74b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd2100c7ad8"/>
        <function-ref name="set" scoped="" ref="0x7fd2100c7640"/>
        <function-ref name="led0On" scoped="" ref="0x7fd2100c77c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd2100c7950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fd2100ba348" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fd2100ba348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100ba698"/>
        <function-ref name="isInput" scoped="" ref="0x7fd2100ba820"/>
        <function-ref name="toggle" scoped="" ref="0x7fd2100ba9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd2100bab30"/>
        <function-ref name="get" scoped="" ref="0x7fd2100bacb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd2100bae40"/>
        <function-ref name="set" scoped="" ref="0x7fd2100c0020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100c01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd2100c69b0" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd2100c69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd2100c6d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fd2100c04c0" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fd2100c04c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100c0810"/>
        <function-ref name="isInput" scoped="" ref="0x7fd2100c0998"/>
        <function-ref name="toggle" scoped="" ref="0x7fd2100c0b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd2100c0ca8"/>
        <function-ref name="get" scoped="" ref="0x7fd2100c0e30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd2100bf020"/>
        <function-ref name="set" scoped="" ref="0x7fd2100bf1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100bf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd2100c2020" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd2100c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd2100c2370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd2100c24f8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd2100c2680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd2100c2808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd2100c2990"/>
        <function-ref name="get" scoped="" ref="0x7fd2100c2b18"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd2100c2ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd2100c1330"/>
        <function-ref name="set" scoped="" ref="0x7fd2100c2e28"/>
        <function-ref name="led0On" scoped="" ref="0x7fd2100c1020"/>
        <function-ref name="led2On" scoped="" ref="0x7fd2100c11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fd2100bf648" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fd2100bf648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100bf998"/>
        <function-ref name="isInput" scoped="" ref="0x7fd2100bfb20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd2100bfca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd2100bfe30"/>
        <function-ref name="get" scoped="" ref="0x7fd2100b9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd2100b91a8"/>
        <function-ref name="set" scoped="" ref="0x7fd2100b9330"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100b94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fd2100c4a88" loc="41:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fd2100c4a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100c4dd8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21009f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21009f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21009f330"/>
        <function-ref name="get" scoped="" ref="0x7fd21009f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21009f640"/>
        <function-ref name="set" scoped="" ref="0x7fd21009f7c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd21009f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fd21009fca8" loc="42:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fd21009fca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21009e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21009e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21009e330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21009e4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd21009e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21009e7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21009e950"/>
        <function-ref name="clr" scoped="" ref="0x7fd21009ead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fd21009c020" loc="44:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd21009c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd21009c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fd21009ee30" loc="43:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fd21009ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21009d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21009d330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21009d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21009d640"/>
        <function-ref name="get" scoped="" ref="0x7fd21009d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21009d950"/>
        <function-ref name="set" scoped="" ref="0x7fd21009dad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd21009dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fd210087568" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fd210087568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100878b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210087a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210087bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210087d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210086020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100861a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210086330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100864b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210086640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100867c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210086950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210086ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210086c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210085020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fd210073568" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fd210073568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100738b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210073a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210073bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210073d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210072020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210072330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100724b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210072640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100727c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210072950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210072ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210072c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210071020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fd2100297d0" loc="145:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fd2100297d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd210029b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210029ca8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210029e30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210028020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd2100281a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd210028330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd2100284b8"/>
        <function-ref name="get" scoped="" ref="0x7fd210028640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd2100287c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd210028950"/>
        <function-ref name="set" scoped="" ref="0x7fd210028ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210028c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210028de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210027120"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100272a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fd210005558" loc="165:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fd210005558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100058a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210005a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210005bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210005d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210004020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100041a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210004330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100044b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210004640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100047c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210004950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210004ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210004c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210003020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fd210027660" loc="146:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fd210027660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100279b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210027b38"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210027cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210027e48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210026020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100261a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210026330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100264b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210026640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100267c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210026950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210026ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210026c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210025020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fd21006f568" loc="71:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fd21006f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21006f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21006fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21006fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21006fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21006e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21006e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21006e330"/>
        <function-ref name="get" scoped="" ref="0x7fd21006e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21006e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21006e7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21006e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21006ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21006ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21006d020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21006d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fd21005a568" loc="84:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fd21005a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21005a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21005aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21005abc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21005ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210059020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100591a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210059330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100594b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210059640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100597c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210059950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210059ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210059c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210058020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100581a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fd210046568" loc="97:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fd210046568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100468b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210046a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210046bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210046d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210045020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100451a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210045330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100454b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210045640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100457c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210045950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210045ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210045c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210044020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100441a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fd210036568" loc="108:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fd210036568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100368b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210036a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210036bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210036d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210035020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100351a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210035330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100354b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210035640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100357c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210035950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210035ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210035c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210034020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fd210021560" loc="149:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fd210021560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100218b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210021a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210021bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210021d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210020020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100201a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210020330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100204b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210020640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100207c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210020950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210020ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210020c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21001f020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21001f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fd210011558" loc="159:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fd210011558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100118a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210011a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210011bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210011d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210010020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100101a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210010330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100104b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210010640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100107c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210010950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210010ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210010c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21000f020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21000f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fd20fffc560" loc="171:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fd20fffc560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fffc8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fffca38"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fffcbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fffcd48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fffb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fffb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fffb330"/>
        <function-ref name="get" scoped="" ref="0x7fd20fffb4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fffb640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fffb7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fffb950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fffbad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fffbc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fffa020"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fffa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fd210081568" loc="56:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fd210081568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100818b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210081a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210081bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210081d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210080020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100801a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210080330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100804b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210080640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100807c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210080950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210080ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210080c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21007f020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21007f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fd21001f560" loc="150:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fd21001f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21001f8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21001fa38"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21001fbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21001fd48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21001e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21001e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21001e330"/>
        <function-ref name="get" scoped="" ref="0x7fd21001e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21001e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21001e7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21001e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21001ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21001ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21001d020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21001d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fd21007d568" loc="61:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fd21007d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21007d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21007da40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21007dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21007dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21007c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21007c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21007c330"/>
        <function-ref name="get" scoped="" ref="0x7fd21007c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21007c640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21007c7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21007c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21007cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21007cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21007b020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21007b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fd210069568" loc="74:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fd210069568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100698b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210069a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210069bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210069d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210068020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210068330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100684b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210068640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100687c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210068950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210068ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210068c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210067020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fd210054568" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fd210054568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100548b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210054a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210054bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210054d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210053020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210053330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100534b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210053640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100537c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210053950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210053ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210053c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210052020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fd210040568" loc="100:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fd210040568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100408b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210040a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210040bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210040d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21003f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21003f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21003f330"/>
        <function-ref name="get" scoped="" ref="0x7fd21003f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21003f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21003f7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21003f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21003fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21003fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21003e020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21003e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fd21002f568" loc="111:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fd21002f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21002f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21002fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21002fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21002fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21002e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21002e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21002e330"/>
        <function-ref name="get" scoped="" ref="0x7fd21002e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21002e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21002e7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21002e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21002ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21002ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21002d020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21002d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fd21008b668" loc="51:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fd21008b668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21008b9b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21008bb40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21008bcc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21008be50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21008a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21008a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21008a330"/>
        <function-ref name="get" scoped="" ref="0x7fd21008a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21008a640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21008a7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21008a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21008aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21008ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210089020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fd210077568" loc="64:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fd210077568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100779b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210077b40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210077cc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210077e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210076020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100761a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210076330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100764b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210076640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100767c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210076950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210076ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210076c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210075020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fd210063568" loc="77:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fd210063568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100638b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210063a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210063bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210063d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210062020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100621a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210062330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100624b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210062640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100627c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210062950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210062ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210062c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210061020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fd21002b970" loc="144:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fd21002b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21002bcc0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21002be48"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21002a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21002a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21002a330"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21002a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21002a640"/>
        <function-ref name="get" scoped="" ref="0x7fd21002a7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21002a950"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21002aad8"/>
        <function-ref name="set" scoped="" ref="0x7fd21002ac60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21002ade8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210029020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd2100292a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd210029430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fd21000b558" loc="162:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fd21000b558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21000b8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21000ba30"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21000bbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21000bd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21000a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21000a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21000a330"/>
        <function-ref name="get" scoped="" ref="0x7fd21000a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21000a640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21000a7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21000a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21000aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21000ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210009020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fd20fffe558" loc="169:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fd20fffe558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fffe8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fffea30"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fffebb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fffed40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fffd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fffd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fffd330"/>
        <function-ref name="get" scoped="" ref="0x7fd20fffd4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fffd640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fffd7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fffd950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fffdad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fffdc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fffc020"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fffc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fd210017560" loc="155:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fd210017560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100178b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210017a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210017bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210017d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210016020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100161a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210016330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100164b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210016640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100167c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210016950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210016ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210016c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210015020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fd21005e568" loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fd21005e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21005eab8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21005ec40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21005edc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21005d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21005d1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21005d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21005d4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd21005d640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21005d7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21005d950"/>
        <function-ref name="set" scoped="" ref="0x7fd21005dad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21005dc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21005dde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21005c120"/>
        <function-ref name="clr" scoped="" ref="0x7fd21005c2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fd21004a568" loc="95:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fd21004a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21004a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21004aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21004abc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21004ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210049020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100491a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210049330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100494b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210049640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100497c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210049950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210049ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210049c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210048020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fd21003a568" loc="106:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fd21003a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21003a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21003aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21003abc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21003ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210039020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210039330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100394b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210039640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100397c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210039950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210039ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210039c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210038020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100381a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fd210009558" loc="163:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fd210009558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100098a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210009a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210009bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210009d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210008020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210008330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100084b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210008640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100087c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210008950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210008ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210008c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210007020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fd21001d558" loc="152:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fd21001d558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21001d8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21001da30"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21001dbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21001dd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21001c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21001c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21001c330"/>
        <function-ref name="get" scoped="" ref="0x7fd21001c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21001c640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21001c7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21001c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21001cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21001cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21001b020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21001b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fd210085568" loc="54:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fd210085568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100858b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210085a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210085bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210085d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210084020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210084330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100844b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210084640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100847c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210084950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210084ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210084c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210083020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fd210071568" loc="67:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fd210071568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100718b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210071a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210071bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210071d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210070020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100701a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210070330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100704b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210070640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100707c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210070950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210070ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210070c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21006f020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21006f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fd21003e568" loc="104:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fd21003e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21003e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21003ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21003ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21003ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21003d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21003d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21003d330"/>
        <function-ref name="get" scoped="" ref="0x7fd21003d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21003d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21003d7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21003d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21003dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21003dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21003c020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21003c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fd21006d568" loc="72:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fd21006d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21006d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21006da40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21006dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21006dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21006c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21006c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21006c330"/>
        <function-ref name="get" scoped="" ref="0x7fd21006c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21006c640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21006c7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21006c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21006cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21006cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21006b020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21006b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fd210058568" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fd210058568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100588b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210058a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210058bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210058d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210057020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100571a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210057330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100574b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210057640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100577c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210057950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210057ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210057c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210056020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100561a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fd210044568" loc="98:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fd210044568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100448b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210044a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210044bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210044d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210043020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100431a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210043330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100434b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210043640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100437c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210043950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210043ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210043c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210042020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100421a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fd210034568" loc="109:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fd210034568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100348b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210034a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210034bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210034d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210033020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100331a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210033330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100334b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210033640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100337c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210033950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210033ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210033c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210032020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fd210019560" loc="154:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fd210019560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100198b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210019a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210019bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210019d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210018020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100181a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210018330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100184b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210018640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100187c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210018950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210018ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210018c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210017020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fd21008e8d8" loc="49:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fd21008e8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21008ec28"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21008edb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210097020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd2100971a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210097330"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100974b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210097640"/>
        <function-ref name="get" scoped="" ref="0x7fd2100977c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210097950"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd210097ad8"/>
        <function-ref name="set" scoped="" ref="0x7fd210097c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210097de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210096020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd2100962a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd210096430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fd21007b568" loc="62:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fd21007b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21007b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21007ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21007bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21007bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21007a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21007a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21007a330"/>
        <function-ref name="get" scoped="" ref="0x7fd21007a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21007a640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21007a7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21007a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21007aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21007ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210079020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fd210067568" loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fd210067568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100678b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210067a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210067bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210067d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210066020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210066330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100664b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210066640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100667c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210066950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210066ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210066c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210065020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fd210052568" loc="88:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fd210052568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100528b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210052a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210052bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210052d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210051020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100511a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210051330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100514b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210051640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100517c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210051950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210051ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210051c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210050020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fd210015560" loc="156:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fd210015560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100158b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210015a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210015bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210015d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210014020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100141a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210014330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100144b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210014640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100147c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210014950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210014ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210014c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210013020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100131a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fd21000f558" loc="160:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fd21000f558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21000f8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21000fa30"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21000fbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21000fd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21000e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21000e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21000e330"/>
        <function-ref name="get" scoped="" ref="0x7fd21000e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21000e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21000e7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21000e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21000ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21000ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21000d020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21000d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fd210003558" loc="166:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fd210003558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100038a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210003a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210003bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210003d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210001020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100011a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210001330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100014b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210001640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100017c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210001950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210001ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210001c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210000020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fd21004e568" loc="93:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fd21004e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21004e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21004ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21004ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21004ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21004d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21004d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21004d330"/>
        <function-ref name="get" scoped="" ref="0x7fd21004d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21004d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21004d7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21004d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21004dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21004dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21004c020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21004c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fd210013560" loc="157:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fd210013560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100138b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210013a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210013bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210013d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210012020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100121a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210012330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100124b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210012640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100127c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210012950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210012ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210012c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210011020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fd210089568" loc="52:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fd210089568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100898b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210089a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210089bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210089d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210088020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100881a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210088330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100884b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210088640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100887c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210088950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210088ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210088c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210087020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fd210075568" loc="65:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fd210075568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100758b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210075a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210075bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210075d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210074020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210074330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100744b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210074640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100747c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210074950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210074ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210074c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210073020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fd210061568" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fd210061568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100618b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210061a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210061bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210061d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21005f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21005f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21005f330"/>
        <function-ref name="get" scoped="" ref="0x7fd21005f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21005f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21005f7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21005f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21005fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21005fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21005e020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21005e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fd21001b560" loc="153:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fd21001b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21001b8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21001ba38"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21001bbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21001bd48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21001a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21001a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21001a330"/>
        <function-ref name="get" scoped="" ref="0x7fd21001a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21001a640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21001a7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21001a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21001aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21001ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210019020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fd210007558" loc="164:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fd210007558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100078a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210007a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210007bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210007d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210006020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100061a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210006330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100064b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210006640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100067c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210006950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210006ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210006c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210005020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fd21005c668" loc="83:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fd21005c668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21005c9b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21005cb40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21005ccc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21005ce50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21005b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21005b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21005b330"/>
        <function-ref name="get" scoped="" ref="0x7fd21005b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21005b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21005b7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21005b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21005bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21005bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21005a020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21005a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fd210048568" loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fd210048568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100488b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210048a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210048bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210048d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210047020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100471a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210047330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100474b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210047640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100477c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210047950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210047ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210047c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210046020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fd210038568" loc="107:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fd210038568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100388b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210038a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210038bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210038d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210037020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100371a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210037330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100374b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210037640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100377c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210037950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210037ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210037c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210036020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fd210083568" loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fd210083568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100838b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210083a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210083bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210083d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210082020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100821a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210082330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100824b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210082640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100827c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210082950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210082ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210082c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210081020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fd21003c568" loc="105:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fd21003c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21003c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21003ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21003cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21003cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21003b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21003b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21003b330"/>
        <function-ref name="get" scoped="" ref="0x7fd21003b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21003b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21003b7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21003b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21003bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21003bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21003a020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21003a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fd21007f568" loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fd21007f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21007f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21007fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21007fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21007fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21007e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21007e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21007e330"/>
        <function-ref name="get" scoped="" ref="0x7fd21007e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21007e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21007e7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21007e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21007ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21007ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21007d020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21007d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fd21006b568" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fd21006b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21006b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21006ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21006bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21006bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21006a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21006a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21006a330"/>
        <function-ref name="get" scoped="" ref="0x7fd21006a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21006a640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21006a7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21006a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21006aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21006ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210069020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fd210056568" loc="86:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fd210056568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100568b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210056a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210056bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210056d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210055020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100551a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210055330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100554b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210055640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100557c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210055950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210055ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210055c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210054020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fd210042568" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fd210042568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100428b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210042a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210042bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210042d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210041020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210041330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100414b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210041640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100417c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210041950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210041ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210041c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210040020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fd210032568" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fd210032568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100328b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210032a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210032bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210032d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210030020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100301a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210030330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100304b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210030640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100307c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210030950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210030ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210030c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21002f020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21002f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fd2100967f0" loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fd2100967f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd210096b40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210096cc8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210096e50"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21008c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21008c1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21008c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21008c4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd21008c640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21008c7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21008c950"/>
        <function-ref name="set" scoped="" ref="0x7fd21008cad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21008cc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21008cde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21008b120"/>
        <function-ref name="clr" scoped="" ref="0x7fd21008b2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fd210079568" loc="63:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fd210079568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100798b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210079a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210079bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210079d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210078020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210078330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100784b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210078640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100787c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210078950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210078ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210078c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210077020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fd210065568" loc="76:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fd210065568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100658b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210065a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210065bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210065d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210064020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210064330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100644b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210064640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100647c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210064950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210064ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210064c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210063020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fd210050568" loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fd210050568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100508b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210050a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210050bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210050d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21004f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21004f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21004f330"/>
        <function-ref name="get" scoped="" ref="0x7fd21004f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21004f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21004f7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21004f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21004fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21004fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21004e020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21004e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fd210023548" loc="148:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fd210023548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd210023898"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210023a20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210023ba8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210023d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210022020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100221a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210022330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100224b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210022640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100227c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210022950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210022ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210022c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210021020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100211a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fd21000d558" loc="161:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fd21000d558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21000d8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21000da30"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21000dbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21000dd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21000c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21000c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21000c330"/>
        <function-ref name="get" scoped="" ref="0x7fd21000c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21000c640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21000c7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21000c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21000cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21000cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21000b020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21000b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fd210025560" loc="147:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fd210025560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100258b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210025a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210025bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210025d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd210024020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd2100241a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd210024330"/>
        <function-ref name="get" scoped="" ref="0x7fd2100244b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd210024640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd2100247c8"/>
        <function-ref name="set" scoped="" ref="0x7fd210024950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd210024ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd210024c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd210023020"/>
        <function-ref name="clr" scoped="" ref="0x7fd2100231a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fd21004c568" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fd21004c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21004c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21004ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21004cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21004cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21004b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21004b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21004b330"/>
        <function-ref name="get" scoped="" ref="0x7fd21004b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21004b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21004b7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd21004b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21004bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21004bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21004a020"/>
        <function-ref name="clr" scoped="" ref="0x7fd21004a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fd210000558" loc="168:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fd210000558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2100008a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd210000a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd210000bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd210000d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ffff020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ffff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ffff330"/>
        <function-ref name="get" scoped="" ref="0x7fd20ffff4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ffff640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ffff7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd20ffff950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ffffad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ffffc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fffe020"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fffe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fd20fffa568" loc="172:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fd20fffa568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fffa8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fffaa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fffabc8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fffad50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fff9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fff91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fff9330"/>
        <function-ref name="get" scoped="" ref="0x7fd20fff94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fff9640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fff97c8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fff9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fff9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fff9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fff8020"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fff81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fd21002d5b8" loc="143:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fd21002d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd21002dd08"/>
        <function-ref name="isInput" scoped="" ref="0x7fd21002c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd21002c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd21002c330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd21002c4b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd21002c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd21002c7c8"/>
        <function-ref name="get" scoped="" ref="0x7fd21002c950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd21002cad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd21002cc60"/>
        <function-ref name="set" scoped="" ref="0x7fd21002cde8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd21002b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd21002b1a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd21002b430"/>
        <function-ref name="clr" scoped="" ref="0x7fd21002b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fff6e18" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fff6e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff4f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff4f330"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff4f4b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff4f640"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff4f7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff4f950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff4fad8"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff4fc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff4fde8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff4e020"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff4e1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff4e330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff4e4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff4e740"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff4e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff4b478" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff4b478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff4b7c8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff4b950"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff4bad8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff4bc60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff4bde8"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff4a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff4a1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff4a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff4a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff4a640"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff4a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff4a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff4aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff4ad60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff47ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff47ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff46020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff461a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff46330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff464b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff46640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff467c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff46950"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff46ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff46c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff46de8"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff45020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff451a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff45330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff455b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff45740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff423d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff423d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff42728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff428b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff42a38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff42bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff42d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff41020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff411a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff41330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff414b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff41640"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff417c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff41950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff41ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff41d60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff3eca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff3eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff3d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff3d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff3d330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff3d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff3d640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff3d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff3d950"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff3dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff3dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff3dde8"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff3c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff3c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff3c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff3c5b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff3c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff393d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff393d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff39728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff398b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff39a38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff39bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff39d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff37020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff371a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff37330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff374b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff37640"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff377c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff37950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff37ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff37d60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff34ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff34ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff33020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff331a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff33330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff334b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff33640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff337c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff33950"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff33ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff33c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff33de8"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff32020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff321a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff32330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff325b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff32740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff2f3d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff2f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff2f728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff2f8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff2fa38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff2fbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff2fd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff2e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff2e1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff2e330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff2e4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff2e640"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff2e7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff2e950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff2ead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff2ed60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff2bca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff2bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff2a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff2a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff2a330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff2a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff2a640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff2a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff2a950"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff2aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff2ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff2ade8"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff29020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff291a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff29330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff295b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff29740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff263d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff263d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff26728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff268b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff26a38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff26bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff26d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff25020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff251a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff25330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff254b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff25640"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff257c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff25950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff25ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff25d60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff22ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff22ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff21020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff211a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff21330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff214b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff21640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff217c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff21950"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff21ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff21c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff21de8"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff20020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff201a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff20330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff205b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff20740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff1d3d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff1d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff1d728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff1d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff1da38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff1dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff1dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff1c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff1c1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff1c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff1c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff1c640"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff1c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff1c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff1cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff1cd60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff19d08" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff19d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff180a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff18228"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff183b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff18538"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff186c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff18848"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff189d0"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff18b58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff18ce0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff18e68"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff17020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff171a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff17330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff175b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff17740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff133d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff133d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff13728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff138b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff13a38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff13bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff13d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff12020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff121a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff12330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff124b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff12640"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff127c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff12950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff12ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff12d60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff0fca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff0fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff0e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff0e1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff0e330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff0e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff0e640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff0e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff0e950"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff0ead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff0ec60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff0ede8"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff0d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff0d1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff0d330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff0d5b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff0d740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff0a3d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff0a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff0a728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff0a8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff0aa38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff0abc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff0ad48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff09020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff091a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff09330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff094b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff09640"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff097c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff09950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff09ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff09d60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff06ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff06ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff05020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff051a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff05330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff054b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff05640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff057c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff05950"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff05ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff05c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff05de8"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff04020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff041a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff04330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff045b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ff04740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20ff013d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20ff013d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ff01728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ff018b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ff01a38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ff01bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ff01d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ff00020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ff001a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20ff00330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ff004b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ff00640"/>
        <function-ref name="set" scoped="" ref="0x7fd20ff007c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ff00950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ff00ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ff00d60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20feff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fefdca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fefdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fefc020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fefc1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fefc330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fefc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fefc640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fefc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fefc950"/>
        <function-ref name="get" scoped="" ref="0x7fd20fefcad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fefcc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fefcde8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fefb020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fefb1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fefb330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fefb5b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fefb740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fef83d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fef83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fef8728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fef88b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fef8a38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fef8bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fef8d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fef7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fef71a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fef7330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fef74b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fef7640"/>
        <function-ref name="set" scoped="" ref="0x7fd20fef77c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fef7950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fef7ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fef7d60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fef6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fef4ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fef4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fef2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fef21a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fef2330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fef24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fef2640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fef27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fef2950"/>
        <function-ref name="get" scoped="" ref="0x7fd20fef2ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fef2c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fef2de8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fef1020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fef11a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fef1330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fef15b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fef1740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20feee3d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20feee3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20feee728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20feee8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20feeea38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20feeebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20feeed48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20feed020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20feed1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20feed330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20feed4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20feed640"/>
        <function-ref name="set" scoped="" ref="0x7fd20feed7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20feed950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20feedad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20feedd60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20feec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20feeaca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20feeaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fee9020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fee91a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fee9330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fee94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fee9640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fee97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fee9950"/>
        <function-ref name="get" scoped="" ref="0x7fd20fee9ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fee9c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fee9de8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fee8020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fee81a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fee8330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fee85b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fee8740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fee53d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fee53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fee5728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fee58b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fee5a38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fee5bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fee5d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fee4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fee41a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fee4330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fee44b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fee4640"/>
        <function-ref name="set" scoped="" ref="0x7fd20fee47c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fee4950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fee4ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fee4d60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fee3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fee1dd8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fee1dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fee0170"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fee02f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fee0480"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fee0608"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fee0790"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fee0918"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fee0aa0"/>
        <function-ref name="get" scoped="" ref="0x7fd20fee0c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fee0db0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fedf020"/>
        <function-ref name="set" scoped="" ref="0x7fd20fedf1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fedf330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fedf4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fedf740"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fedf8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fedc478" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fedc478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fedc7c8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fedc950"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fedcad8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fedcc60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fedcde8"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fedb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fedb1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fedb330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fedb4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fedb640"/>
        <function-ref name="set" scoped="" ref="0x7fd20fedb7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fedb950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fedbad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fedbd60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20feda020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fed8ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fed8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fed7020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fed71a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fed7330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fed74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fed7640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fed77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fed7950"/>
        <function-ref name="get" scoped="" ref="0x7fd20fed7ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fed7c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fed7de8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fed6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fed61a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fed6330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fed65b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fed6740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fed33d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fed33d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fed3728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fed38b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fed3a38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fed3bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fed3d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fed2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fed21a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fed2330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fed24b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fed2640"/>
        <function-ref name="set" scoped="" ref="0x7fd20fed27c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fed2950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fed2ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fed2d60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fed1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fecfca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fecfca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fecd020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fecd1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fecd330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fecd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fecd640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fecd7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fecd950"/>
        <function-ref name="get" scoped="" ref="0x7fd20fecdad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fecdc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fecdde8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fecc020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fecc1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fecc330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fecc5b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fecc740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fec93d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fec93d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fec9728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fec98b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fec9a38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fec9bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fec9d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fec8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fec81a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fec8330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fec84b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fec8640"/>
        <function-ref name="set" scoped="" ref="0x7fd20fec87c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fec8950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fec8ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fec8d60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fec7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fec5ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fec5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fec4020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fec41a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fec4330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fec44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fec4640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fec47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fec4950"/>
        <function-ref name="get" scoped="" ref="0x7fd20fec4ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fec4c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fec4de8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fec3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fec31a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fec3330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fec35b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fec3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fec03d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fec03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fec0728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fec08b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fec0a38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fec0bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fec0d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20febf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20febf1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20febf330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20febf4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20febf640"/>
        <function-ref name="set" scoped="" ref="0x7fd20febf7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20febf950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20febfad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20febfd60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20febe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20febcca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20febcca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20febb020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20febb1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20febb330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20febb4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20febb640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20febb7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20febb950"/>
        <function-ref name="get" scoped="" ref="0x7fd20febbad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20febbc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20febbde8"/>
        <function-ref name="set" scoped="" ref="0x7fd20feba020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20feba1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20feba330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20feba5b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20feba740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20feb73d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20feb73d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20feb7728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20feb78b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20feb7a38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20feb7bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20feb7d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20feb6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20feb61a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20feb6330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20feb64b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20feb6640"/>
        <function-ref name="set" scoped="" ref="0x7fd20feb67c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20feb6950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20feb6ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20feb6d60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20feb5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20feb3ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20feb3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20feb2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20feb21a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20feb2330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20feb24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20feb2640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20feb27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20feb2950"/>
        <function-ref name="get" scoped="" ref="0x7fd20feb2ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20feb2c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20feb2de8"/>
        <function-ref name="set" scoped="" ref="0x7fd20feb1020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20feb11a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20feb1330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20feb15b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20feb1740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20feae3d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20feae3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20feae728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20feae8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20feaea38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20feaebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20feaed48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fead020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fead1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fead330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fead4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fead640"/>
        <function-ref name="set" scoped="" ref="0x7fd20fead7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fead950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20feadad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20feadd60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20feac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fea9ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fea9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fea8020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fea81a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fea8330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fea84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fea8640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fea87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fea8950"/>
        <function-ref name="get" scoped="" ref="0x7fd20fea8ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fea8c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fea8de8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fea7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fea71a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fea7330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fea75b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fea7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fea43d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fea43d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fea4728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fea48b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fea4a38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fea4bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fea4d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fea3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fea31a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fea3330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fea34b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fea3640"/>
        <function-ref name="set" scoped="" ref="0x7fd20fea37c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fea3950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fea3ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fea3d60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fea2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fea0ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fea0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fe9f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fe9f1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fe9f330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fe9f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fe9f640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fe9f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fe9f950"/>
        <function-ref name="get" scoped="" ref="0x7fd20fe9fad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fe9fc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fe9fde8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fe9e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fe9e1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fe9e330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fe9e5b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fe9e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fe9b3d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fe9b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fe9b728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fe9b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fe9ba38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fe9bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fe9bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fe9a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fe9a1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fe9a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fe9a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fe9a640"/>
        <function-ref name="set" scoped="" ref="0x7fd20fe9a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fe9a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fe9aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fe9ad60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fe99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fe97ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fe97ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fe96020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fe961a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fe96330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fe964b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fe96640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fe967c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fe96950"/>
        <function-ref name="get" scoped="" ref="0x7fd20fe96ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fe96c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fe96de8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fe95020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fe951a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fe95330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fe955b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fe95740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fe923d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fe923d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fe92728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fe928b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fe92a38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fe92bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fe92d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fe91020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fe911a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fe91330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fe914b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fe91640"/>
        <function-ref name="set" scoped="" ref="0x7fd20fe917c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fe91950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fe91ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fe91d60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fe90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fe8eca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fe8eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fe8d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fe8d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fe8d330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fe8d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fe8d640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fe8d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fe8d950"/>
        <function-ref name="get" scoped="" ref="0x7fd20fe8dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fe8dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fe8dde8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fe8c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fe8c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fe8c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fe8c5b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fe8c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fe893d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fe893d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fe89728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fe898b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fe89a38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fe89bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fe89d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fe87020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fe871a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fe87330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fe874b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fe87640"/>
        <function-ref name="set" scoped="" ref="0x7fd20fe877c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fe87950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fe87ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fe87d60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fe86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fe84ca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fe84ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fe83020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fe831a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fe83330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fe834b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fe83640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fe837c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fe83950"/>
        <function-ref name="get" scoped="" ref="0x7fd20fe83ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fe83c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fe83de8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fe82020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fe821a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fe82330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fe825b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fe82740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fe7f3d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fe7f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fe7f728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fe7f8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fe7fa38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fe7fbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fe7fd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fe7e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fe7e1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fe7e330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fe7e4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fe7e640"/>
        <function-ref name="set" scoped="" ref="0x7fd20fe7e7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fe7e950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fe7ead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fe7ed60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fe7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fe7bca0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fe7bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fe7a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fe7a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fe7a330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fe7a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fe7a640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fe7a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fe7a950"/>
        <function-ref name="get" scoped="" ref="0x7fd20fe7aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fe7ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fe7ade8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fe79020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fe791a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fe79330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fe795b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fe79740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd20fe763d8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd20fe763d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fe76728"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fe768b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fe76a38"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fe76bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fe76d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fe75020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fe751a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fe75330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fe754b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fe75640"/>
        <function-ref name="set" scoped="" ref="0x7fd20fe757c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fe75950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fe75ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fe75d60"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fe74020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd20fe17da0" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fe17da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fe06170"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fe062f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fe06480"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fe06608"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fe06790"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fe06918"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fe06aa0"/>
        <function-ref name="get" scoped="" ref="0x7fd20fe06c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fe06db0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fe05020"/>
        <function-ref name="set" scoped="" ref="0x7fd20fe051a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fe05330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fe054b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fe05740"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fe058c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd20fe21c30" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fe21c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fe17020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fe171a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fe17330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fe174b8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fe17640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fe177c8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fe17950"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fe17ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd20fe025f8" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fe025f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fe02948"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fe02ad0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fe02c58"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fe02de0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fe01020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fe011a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fe01330"/>
        <function-ref name="get" scoped="" ref="0x7fd20fe014b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fe01640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fe017c8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fe01950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fe01ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fe01c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fe00020"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fe001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd20fe03448" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fe03448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fe03798"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fe03920"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fe03aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fe03c30"/>
        <function-ref name="get" scoped="" ref="0x7fd20fe03db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fe02020"/>
        <function-ref name="set" scoped="" ref="0x7fd20fe021a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fe02330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd20fdfde20" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fdfde20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fdfc1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fdfc330"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fdfc4b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fdfc640"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fdfc7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fdfc950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fdfcad8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fdfcc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fdfcde8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fdfb020"/>
        <function-ref name="set" scoped="" ref="0x7fd20fdfb1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fdfb330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fdfb4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fdfb740"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fdfb8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd20fdffcd0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fdffcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fdfd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fdfd228"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fdfd3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fdfd538"/>
        <function-ref name="get" scoped="" ref="0x7fd20fdfd6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fdfd848"/>
        <function-ref name="set" scoped="" ref="0x7fd20fdfd9d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fdfdb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd20fded790" loc="61:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd20fded790"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd20fdedae0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd20fdedc68"/>
        <function-ref name="start" scoped="" ref="0x7fd20fdeddf0"/>
        <function-ref name="stop" scoped="" ref="0x7fd20fdeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd20fdeb798" loc="63:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd20fdeb798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20fdebae8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20fdebc70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20fdebdf8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20fdea020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20fdea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd20fde9498" loc="65:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fd20fde9498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20fde97e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd20fde9a70" loc="67:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd20fde9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fde9dc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd20fde8020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20fde81a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20fde8330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd20fde84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd20fdd65e8" loc="70:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd20fdd65e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd20fde4a88"/>
        <function-ref name="clear" scoped="" ref="0x7fd20fdd7190"/>
        <function-ref name="isValid" scoped="" ref="0x7fd20fde43a8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fdd7870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd20fdd0080" loc="72:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd20fdd0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd20fdd03d0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd20fdd0558"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd20fdd06e0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd20fdd0868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd20fdea928" loc="64:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd20fdea928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20fdeac78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd20fde0998" loc="69:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd20fde0998"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd20fde0ce8"/>
        <function-ref name="noAck" scoped="" ref="0x7fd20fde0e70"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd20fde5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd20fde8758" loc="68:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd20fde8758"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd20fde8aa8"/>
        <function-ref name="source" scoped="" ref="0x7fd20fde8c30"/>
        <function-ref name="address" scoped="" ref="0x7fd20fde8db8"/>
        <function-ref name="destination" scoped="" ref="0x7fd20fde7020"/>
        <function-ref name="setSource" scoped="" ref="0x7fd20fde71a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd20fde7330"/>
        <function-ref name="type" scoped="" ref="0x7fd20fde74b8"/>
        <function-ref name="setType" scoped="" ref="0x7fd20fde7640"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd20fde77c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd20fde7950"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd20fde7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd20fdd5478" loc="71:../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd20fdd5478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd20fdd4900"/>
        <function-ref name="clear" scoped="" ref="0x7fd20fdd2020"/>
        <function-ref name="isValid" scoped="" ref="0x7fd20fdd4220"/>
        <function-ref name="set" scoped="" ref="0x7fd20fdd2700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd20fdbfb90" loc="55:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd20fdbfb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd20fdbe020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd20fdbe1a8"/>
        <function-ref name="start" scoped="" ref="0x7fd20fdbe330"/>
        <function-ref name="stop" scoped="" ref="0x7fd20fdbe4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd20fdb62e0" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd20fdb62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd20fdb6630"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd20fdb67b8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd20fdb6940"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd20fdb6ac8"/>
        <function-ref name="setCca" scoped="" ref="0x7fd20fdb6c50"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd20fdb6dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd20fd98b50" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fd20fd98b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd20fda3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd20fdb95b8" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd20fdb95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fdb9908"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd20fdb9a90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20fdb9c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20fdb9da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd20fdb8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd20fdbec30" loc="56:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd20fdbec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20fdbd020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20fdbd1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20fdbd330"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20fdbd4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20fdbd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd20fdbb968" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fd20fdbb968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20fdbbcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd20fdb03b0" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20fdb03b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd20fdb0700"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd20fdb0888"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd20fdb0a10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd20fdb0b98"/>
        <function-ref name="getPower" scoped="" ref="0x7fd20fdb0d20"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd20fdb7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd20fdae170" loc="65:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd20fdae170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd20fdae4c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd20fdae648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd20fdae7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd20fdae958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd20fdbddc0" loc="57:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd20fdbddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20fdbb170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd20fdb7348" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd20fdb7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd20fdb7698"/>
        <function-ref name="noAck" scoped="" ref="0x7fd20fdb7820"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd20fdb79a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd20fda4020" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fd20fda4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd20fda4370"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd20fda44f8"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd20fda4680"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd20fda4808"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd20fda4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd20fdba020" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd20fdba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd20fdba370"/>
        <function-ref name="source" scoped="" ref="0x7fd20fdba4f8"/>
        <function-ref name="address" scoped="" ref="0x7fd20fdba680"/>
        <function-ref name="destination" scoped="" ref="0x7fd20fdba808"/>
        <function-ref name="setSource" scoped="" ref="0x7fd20fdba990"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd20fdbab18"/>
        <function-ref name="type" scoped="" ref="0x7fd20fdbaca0"/>
        <function-ref name="setType" scoped="" ref="0x7fd20fdbae28"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd20fdb9020"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd20fdb91a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd20fdb9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd20fdab398" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd20fdab398"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd20fdab6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd20fd99860" loc="43:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd20fd99860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd20fd99bb0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd20fd99d38"/>
        <function-ref name="start" scoped="" ref="0x7fd20fd95020"/>
        <function-ref name="stop" scoped="" ref="0x7fd20fd951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd20fd837d0" loc="55:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd20fd837d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd20fd83b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd20fd828f0" loc="57:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fd20fd828f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd20fd82c40"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd20fd82dc8"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd20fd81020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd20fd811a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd20fd81330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd20fd84020" loc="53:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20fd84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd20fd84370"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd20fd844f8"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd20fd84680"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd20fd84808"/>
        <function-ref name="getPower" scoped="" ref="0x7fd20fd84990"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd20fd84b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fd20fd8eb38" loc="50:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fd20fd8eb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20fd87020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20fd871a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20fd87330"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20fd874b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20fd87640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd20fd83e18" loc="56:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd20fd83e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd20fd821a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd20fd82330"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd20fd824b8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd20fd82640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fd20fd8f7f8" loc="47:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fd20fd8f7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20fd8fb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd20fd84e40" loc="54:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd20fd84e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd20fd831c0"/>
        <function-ref name="noAck" scoped="" ref="0x7fd20fd83348"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd20fd834d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20fd90b38" loc="45:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20fd90b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20fd94020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20fd941a8"/>
        <function-ref name="request" scoped="" ref="0x7fd20fd94330"/>
        <function-ref name="granted" scoped="" ref="0x7fd20fd944b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20fd94640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fd20fd86a70" loc="46:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fd20fd86a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20fd86dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20fd8f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20fd8f1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20fd8f330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20fd8f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fd20fd8fe78" loc="48:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fd20fd8fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fd8e1f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd20fd8e380"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20fd8e508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20fd8e690"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd20fd8e818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fd20fd87998" loc="51:../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fd20fd87998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20fd87ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd20fd7e020" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd20fd7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd20fd7e370"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd20fd7e4f8"/>
        <function-ref name="start" scoped="" ref="0x7fd20fd7e680"/>
        <function-ref name="stop" scoped="" ref="0x7fd20fd7e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd20fd7dde0" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd20fd7dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd20fd7c170"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd20fd7c2f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd20fd7c480"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd20fd7c608"/>
        <function-ref name="setCca" scoped="" ref="0x7fd20fd7c790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd20fd7c918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd20fd7eac0" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd20fd7eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20fd7ee10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20fd7d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20fd7d1a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20fd7d330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20fd7d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd20fd7d788" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd20fd7d788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20fd7dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd20fd7b868" loc="39:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd20fd7b868"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd20fd7bbb8"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd20fd7bd40"/>
        <function-ref name="start" scoped="" ref="0x7fd20fd78020"/>
        <function-ref name="stop" scoped="" ref="0x7fd20fd781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd20fd77140" loc="41:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd20fd77140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd20fd77490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd20fd77618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd20fd777a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd20fd77928"/>
        <function-ref name="setCca" scoped="" ref="0x7fd20fd77ab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd20fd77c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fd20fd6d208" loc="47:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fd20fd6d208"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd20fd6d558"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd20fd6d6e0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd20fd6d868"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd20fd6d9f0"/>
        <function-ref name="setCca" scoped="" ref="0x7fd20fd6db78"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd20fd6dd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd20fd62328" loc="50:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20fd62328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd20fd62678"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd20fd62800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd20fd62988"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd20fd62b10"/>
        <function-ref name="getPower" scoped="" ref="0x7fd20fd62c98"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd20fd62e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fd20fd644b8" loc="46:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd20fd644b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20fd64808"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20fd64990"/>
        <function-ref name="modify" scoped="" ref="0x7fd20fd64b18"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20fd64ca0"/>
        <function-ref name="resend" scoped="" ref="0x7fd20fd64e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd20fd78460" loc="40:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd20fd78460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20fd787b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20fd78938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20fd78ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20fd78c48"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20fd78dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fd20fd614a8" loc="48:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fd20fd614a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd20fd617f8"/>
        <function-ref name="rand32" scoped="" ref="0x7fd20fd61980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fd20fd6bca0" loc="45:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fd20fd6bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd20fd74020"/>
        <function-ref name="stop" scoped="" ref="0x7fd20fd741a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd20fd595f0" loc="51:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20fd595f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd20fd59940"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd20fd59ac8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd20fd59c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fd20fd6e320" loc="44:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fd20fd6e320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fd20fd6e670"/>
        <function-ref name="rfOff" scoped="" ref="0x7fd20fd6e7f8"/>
        <function-ref name="rxOn" scoped="" ref="0x7fd20fd6e980"/>
        <function-ref name="startVReg" scoped="" ref="0x7fd20fd6eb08"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fd20fd6ec90"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fd20fd6ee18"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fd20fd75020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fd20fd751a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd20fd61c38" loc="49:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd20fd61c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd20fd63020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd20fd631a8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd20fd63330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd20fd634b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd20fd63640"/>
        <function-ref name="get" scoped="" ref="0x7fd20fd637c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd20fd63950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd20fd62020"/>
        <function-ref name="set" scoped="" ref="0x7fd20fd63ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd20fd63c60"/>
        <function-ref name="led2On" scoped="" ref="0x7fd20fd63de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd20fd76020" loc="43:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20fd76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20fd76370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20fd764f8"/>
        <function-ref name="request" scoped="" ref="0x7fd20fd76680"/>
        <function-ref name="granted" scoped="" ref="0x7fd20fd76808"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20fd76990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fd20fd54838" loc="52:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fd20fd54838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd20fd54c88"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd20fd54e10"/>
        <function-ref name="isState" scoped="" ref="0x7fd20fd5d020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd20fd5d1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7fd20fd5d330"/>
        <function-ref name="forceState" scoped="" ref="0x7fd20fd5d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fd20fd4f020" loc="76:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fd20fd4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20fd4f370"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20fd4f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fd20fd51120" loc="75:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fd20fd51120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20fd51470"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20fd515f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fd20fd52298" loc="74:../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fd20fd52298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20fd525e8"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20fd52770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fd20fcfbaf8" loc="45:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fd20fcfbaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd20fcfbe48"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd20fd07020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd20fd071a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd20fd07330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd20fd074b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd20fd07640"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd20fd077c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd20fd07950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd20fd07ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd20fd07c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd20fd07de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd20fd06020"/>
        <function-ref name="sync" scoped="" ref="0x7fd20fd061a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd20fd06430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd20fd065b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fd20fcf5b00" loc="47:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fd20fcf5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20fcf9670"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20fcf9ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fd20fd068b0" loc="46:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fd20fd068b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fd20fd06c00"/>
        <function-ref name="rfOff" scoped="" ref="0x7fd20fd06d88"/>
        <function-ref name="rxOn" scoped="" ref="0x7fd20fcfa020"/>
        <function-ref name="startVReg" scoped="" ref="0x7fd20fcfa1a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fd20fcfa330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fd20fcfa4b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fd20fcfa640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fd20fcfa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20fd0cdf8" loc="44:../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20fd0cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20fd08170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20fd082f8"/>
        <function-ref name="request" scoped="" ref="0x7fd20fd08480"/>
        <function-ref name="granted" scoped="" ref="0x7fd20fd08608"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20fd08790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fd20fcf1140" loc="46:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fd20fcf1140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd20fcf1490"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd20fcf1618"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd20fcf17a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd20fcf1928"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd20fcf1ab0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd20fcf1c38"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd20fcf1dc0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd20fcf0020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd20fcf01a8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd20fcf0330"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd20fcf04b8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd20fcf0640"/>
        <function-ref name="sync" scoped="" ref="0x7fd20fcf07c8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd20fcf0a50"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd20fcf0bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fd20fccb898" loc="66:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd20fccb898"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20fccbbe8"/>
        <function-ref name="write" scoped="" ref="0x7fd20fccbd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fd20fce95b0" loc="50:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd20fce95b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fd20fce9900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fd20fceb020" loc="52:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fd20fceb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20fce2690"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fcea6f8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd20fce2088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20fceab80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd20fce2b18"/>
        <function-ref name="start" scoped="" ref="0x7fd20fcebd70"/>
        <function-ref name="stop" scoped="" ref="0x7fd20fcea270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fd20fcce6e0" loc="64:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd20fcce6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20fccea30"/>
        <function-ref name="write" scoped="" ref="0x7fd20fccebb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fd20fcdf1b0" loc="54:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fd20fcdf1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fcdf500"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fcdf688"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fcdf810"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fcdf998"/>
        <function-ref name="get" scoped="" ref="0x7fd20fcdfb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fcdfca8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fcdfe30"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fcde020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fd20fcee308" loc="48:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fd20fcee308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20fceee50"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20fced2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fd20fcb90c0" loc="126:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fd20fcb90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20fcb9410"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20fcb9598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fd20fcca130" loc="67:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd20fcca130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20fcca480"/>
        <function-ref name="write" scoped="" ref="0x7fd20fcca608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fd20fcca9a0" loc="68:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd20fcca9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20fccacf0"/>
        <function-ref name="write" scoped="" ref="0x7fd20fccae78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fd20fccf5c0" loc="62:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd20fccf5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20fccf910"/>
        <function-ref name="write" scoped="" ref="0x7fd20fccfa98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fd20fcdb020" loc="57:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd20fcdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd20fcdb370"/>
        <function-ref name="changed" scoped="" ref="0x7fd20fcdb4f8"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd20fcdb680"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd20fcdb808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fd20fce0020" loc="53:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fd20fce0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fce0370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fce04f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fce0680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fce0808"/>
        <function-ref name="get" scoped="" ref="0x7fd20fce0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fce0b18"/>
        <function-ref name="set" scoped="" ref="0x7fd20fce0ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fce0e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fd20fcc8e60" loc="71:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd20fcc8e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20fcc73e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fd20fcde378" loc="55:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fd20fcde378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fcde6c8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fcde850"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fcde9d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fcdeb60"/>
        <function-ref name="get" scoped="" ref="0x7fd20fcdece8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fcdee70"/>
        <function-ref name="set" scoped="" ref="0x7fd20fcdd020"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fcdd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20fcf8dc8" loc="44:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20fcf8dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20fcf2170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fd20fccb020" loc="65:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20fccb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20fccb370"/>
        <function-ref name="write" scoped="" ref="0x7fd20fccb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fd20fcc7778" loc="72:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd20fcc7778"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20fcc7ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd20fcc7e58" loc="74:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fd20fcc7e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20fcc61e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20fcc6370"/>
        <function-ref name="request" scoped="" ref="0x7fd20fcc64f8"/>
        <function-ref name="granted" scoped="" ref="0x7fd20fcc6680"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20fcc6808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fd20fcc59e0" loc="76:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fd20fcc59e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20fcc5d30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20fcc4020"/>
        <function-ref name="request" scoped="" ref="0x7fd20fcc41a8"/>
        <function-ref name="granted" scoped="" ref="0x7fd20fcc4330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20fcc44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fd20fcef020" loc="47:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fd20fcef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fd20fcef370"/>
        <function-ref name="rfOff" scoped="" ref="0x7fd20fcef4f8"/>
        <function-ref name="rxOn" scoped="" ref="0x7fd20fcef680"/>
        <function-ref name="startVReg" scoped="" ref="0x7fd20fcef808"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fd20fcef990"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fd20fcefb18"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fd20fcefca0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fd20fcefe28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fd20fccfe30" loc="63:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd20fccfe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20fcce1a8"/>
        <function-ref name="write" scoped="" ref="0x7fd20fcce330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fd20fccdcd8" loc="61:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd20fccdcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20fccf0a0"/>
        <function-ref name="write" scoped="" ref="0x7fd20fccf228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fd20fcc8098" loc="69:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd20fcc8098"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20fcc83e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd20fcc4770" loc="78:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd20fcc4770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd20fcc4ac0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd20fcc4c48"/>
        <function-ref name="led1On" scoped="" ref="0x7fd20fcc4dd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd20fcc3020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd20fcc31a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fcc3330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd20fcc34b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd20fcc3ad8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fcc3640"/>
        <function-ref name="led0On" scoped="" ref="0x7fd20fcc37c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd20fcc3950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fd20fcba290" loc="125:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fd20fcba290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20fcba5e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20fcba768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20fcf2450" loc="45:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20fcf2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20fcf27a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20fcf2928"/>
        <function-ref name="request" scoped="" ref="0x7fd20fcf2ab0"/>
        <function-ref name="granted" scoped="" ref="0x7fd20fcf2c38"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20fcf2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fd20fcd77d0" loc="60:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd20fcd77d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20fcd7b20"/>
        <function-ref name="write" scoped="" ref="0x7fd20fcd7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fd20fcd0e08" loc="59:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd20fcd0e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20fcd72e8"/>
        <function-ref name="write" scoped="" ref="0x7fd20fcd7470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fd20fcd99b8" loc="56:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fd20fcd99b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd20fcd9d08"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fcdc020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd20fcdc1a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd20fcdc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fd20fcc6ba8" loc="75:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fd20fcc6ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20fcc5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20fcc51a8"/>
        <function-ref name="request" scoped="" ref="0x7fd20fcc5330"/>
        <function-ref name="granted" scoped="" ref="0x7fd20fcc54b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20fcc5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fd20fcc8770" loc="70:../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd20fcc8770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20fcc8ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20fc453c0" loc="45:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20fc453c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20fc45710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fd20fc45d38" loc="46:../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd20fc45d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20fc42410"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fc434a8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd20fc43db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20fc43930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd20fc42898"/>
        <function-ref name="start" scoped="" ref="0x7fd20fc44ac0"/>
        <function-ref name="stop" scoped="" ref="0x7fd20fc43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20fc3e7d8" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20fc3e7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20fc3eb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fd20fb53060" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd20fb53060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20fb50690"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fb52738"/>
        <function-ref name="startAt" scoped="" ref="0x7fd20fb50088"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20fb52bc0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd20fb50b18"/>
        <function-ref name="start" scoped="" ref="0x7fd20fb53db0"/>
        <function-ref name="stop" scoped="" ref="0x7fd20fb522b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd20e7d4848" loc="44:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd20e7d4848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20e7d1020"/>
        <function-ref name="fired" scoped="" ref="0x7fd20e7d2020"/>
        <function-ref name="startAt" scoped="" ref="0x7fd20e7d2930"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20e7d24a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd20e7d14a8"/>
        <function-ref name="start" scoped="" ref="0x7fd20e7d35e0"/>
        <function-ref name="stop" scoped="" ref="0x7fd20e7d3ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20e7d4060" loc="43:../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20e7d4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20e7d43b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd20e7b94b8" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd20e7b94b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20e7b6b18"/>
        <function-ref name="fired" scoped="" ref="0x7fd20e7b8b90"/>
        <function-ref name="startAt" scoped="" ref="0x7fd20e7b6510"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20e7b6088"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd20e7b5020"/>
        <function-ref name="start" scoped="" ref="0x7fd20e7b8230"/>
        <function-ref name="stop" scoped="" ref="0x7fd20e7b8708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20e7cfb88" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20e7cfb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20e7b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fd20e7a18c8" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20e7a18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd20e7a1c18"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd20e7a1da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd20e7a0020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd20e7a01a8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20e7a0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fd20e7a4020" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20e7a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20e7a4370"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd20e7a44f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd20e7a4680"/>
        <function-ref name="get" scoped="" ref="0x7fd20e7a4808"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd20e7a4990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20e7a4b18"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20e7a4ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20e7a4e28"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20e7a2020"/>
        <function-ref name="setMode" scoped="" ref="0x7fd20e7a21a8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd20e7a2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fd20e7a25b8" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20e7a25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd20e7a2908"/>
        <function-ref name="getControl" scoped="" ref="0x7fd20e7a2a90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd20e7a2c18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd20e7a2da0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd20e7a1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd20e7a11a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd20e7a1330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd20e7a14b8"/>
        <function-ref name="setControl" scoped="" ref="0x7fd20e7a1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fd20fc1d1c8" loc="52:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20fc1d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd20fc1d518"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd20fc1d6a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd20fc1d828"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd20fc1d9b0"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fc1db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fd20fc24b90" loc="50:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20fc24b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fc21020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd20fc211a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd20fc21330"/>
        <function-ref name="get" scoped="" ref="0x7fd20fc214b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd20fc21640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20fc217c8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20fc21950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20fc21ad8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20fc21c60"/>
        <function-ref name="setMode" scoped="" ref="0x7fd20fc21de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd20fc20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fd20fc20850" loc="51:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20fc20850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd20fc20ba0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd20fc20d28"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd20fc1e020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd20fc1e1a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd20fc1e330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd20fc1e4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd20fc1e640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd20fc1e7c8"/>
        <function-ref name="setControl" scoped="" ref="0x7fd20fc1e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fd20e7972a8" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20e7972a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd20e7975f8"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd20e797780"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd20e797908"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd20e797a90"/>
        <function-ref name="fired" scoped="" ref="0x7fd20e797c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fd20e79b8c0" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20e79b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20e79bc10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd20e79bd98"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd20e799020"/>
        <function-ref name="get" scoped="" ref="0x7fd20e7991a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd20e799330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20e7994b8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20e799640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20e7997c8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20e799950"/>
        <function-ref name="setMode" scoped="" ref="0x7fd20e799ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd20e799c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd20e79e848" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd20e79e848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20e79b020"/>
        <function-ref name="fired" scoped="" ref="0x7fd20e79c020"/>
        <function-ref name="startAt" scoped="" ref="0x7fd20e79c930"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20e79c4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd20e79b4a8"/>
        <function-ref name="start" scoped="" ref="0x7fd20e79d5e0"/>
        <function-ref name="stop" scoped="" ref="0x7fd20e79dab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20e79e020" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20e79e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20e79e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fd20e798020" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20e798020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd20e798370"/>
        <function-ref name="getControl" scoped="" ref="0x7fd20e7984f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd20e798680"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd20e798808"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd20e798990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd20e798b18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd20e798ca0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd20e798e28"/>
        <function-ref name="setControl" scoped="" ref="0x7fd20e797020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd20fbcb630" loc="43:../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd20fbcb630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20fbd03a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20fbd0cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20fbd0830"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20fbcf190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fd20fbc83e0" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fd20fbc83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20fbc6190"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20fbc6aa0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20fbc6618"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20fbc5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fd20fbb5928" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20fbb5928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fbb5c78"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd20fbb5e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd20fbb4020"/>
        <function-ref name="get" scoped="" ref="0x7fd20fbb41a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd20fbb4330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20fbb44b8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20fbb4640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20fbb47c8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20fbb4950"/>
        <function-ref name="setMode" scoped="" ref="0x7fd20fbb4ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd20fbb4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd20fbc4980" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd20fbc4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20fbc3730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20fbb5088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20fbc3bb8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20fbb5510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fd20fb94b10" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fd20fb94b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20fb938f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20fb91230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20fb93d80"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20fb916b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd20fbb0878" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd20fbb0878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20fb96660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20fb94020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20fb96ae8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20fb944a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd20e7b32d0" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd20e7b32d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20e7b1928"/>
        <function-ref name="fired" scoped="" ref="0x7fd20e7b29e8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd20e7b1320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20e7b2e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd20e7b1db0"/>
        <function-ref name="start" scoped="" ref="0x7fd20e7b2088"/>
        <function-ref name="stop" scoped="" ref="0x7fd20e7b2560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fd20e7ad688" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fd20e7ad688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20e7abcc0"/>
        <function-ref name="fired" scoped="" ref="0x7fd20e7acd60"/>
        <function-ref name="startAt" scoped="" ref="0x7fd20e7ab6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20e7ab230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd20e7a9190"/>
        <function-ref name="start" scoped="" ref="0x7fd20e7ac400"/>
        <function-ref name="stop" scoped="" ref="0x7fd20e7ac8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd20e7af410" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd20e7af410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20e7ae190"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20e7aeaa0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20e7ae618"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20e7ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fd20fb4a020" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fd20fb4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb4a370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb4a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb4a680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb4a808"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb4a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb4ab18"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb4aca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb4ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fd20fb491b8" loc="45:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fd20fb491b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb49508"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb49690"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb49818"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb499a0"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb49b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb49cb0"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb49e38"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fd20fb48378" loc="46:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fd20fb48378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb486c8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb48850"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb489d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb48b60"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb48ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb48e70"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb47020"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fd20fb4ce20" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fd20fb4ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb4b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb4b330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb4b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb4b640"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb4b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb4b950"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb4bad8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb4bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fd20fb46688" loc="48:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fd20fb46688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb469d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb46b60"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb46ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb46e70"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb45020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb451a8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb45330"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb454b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fd20fc46c10" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fd20fc46c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb4c020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb4c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb4c330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb4c4b8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb4c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb4c7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb4c950"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb4cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fd20fb474f0" loc="47:../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fd20fb474f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb47840"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb479c8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb47b50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb47cd8"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb47e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb46020"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb461a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb46330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd20fb43908" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fb43908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb43c58"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb43de0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fb42020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb421a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb42330"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fb424b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb42640"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb427c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fb42950"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fb42ad8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb42c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fb42de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fb41020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fb412a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb41430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd20fb447d0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fb447d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb44b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb44ca8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb44e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb43020"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb431a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb43330"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb434b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb43640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd20fb3d120" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fb3d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb3d470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb3d5f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fb3d780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb3d908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb3da90"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fb3dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb3dda0"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb3c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fb3c1a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fb3c330"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb3c4b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fb3c640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fb3c7c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fb3ca50"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb3cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd20fb3e020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fb3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb3e370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb3e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb3e680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb3e808"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb3e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb3eb18"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb3eca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb3ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd20fb39908" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fb39908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb39c58"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb39de0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fb38020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb381a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb38330"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fb384b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb38640"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb387c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fb38950"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fb38ad8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb38c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fb38de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fb37020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fb372a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb37430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd20fb3a720" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fb3a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb3aa70"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb3abf8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb3ad80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb39020"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb39330"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb394b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb39640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd20fb34120" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fb34120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb34470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb345f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fb34780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb34908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb34a90"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fb34c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb34da0"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb33020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fb331a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fb33330"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb334b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fb33640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fb337c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fb33a50"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb33bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd20fb35020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fb35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb35370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb354f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb35680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb35808"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb35990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb35b18"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb35ca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb35e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd20fb30908" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fb30908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb30c58"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb30de0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fb2f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb2f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb2f330"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fb2f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb2f640"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb2f7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fb2f950"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fb2fad8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb2fc60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fb2fde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fb2e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fb2e2a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb2e430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd20fb31720" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fb31720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb31a70"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb31bf8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb31d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb30020"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb301a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb30330"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb304b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb30640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd20fb2b120" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fb2b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb2b470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb2b5f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fb2b780"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb2b908"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb2ba90"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fb2bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb2bda0"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb29020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fb291a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fb29330"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb294b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fb29640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fb297c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fb29a50"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb29bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd20fb2c020" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fb2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb2c370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb2c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb2c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb2c808"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb2c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb2cb18"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb2cca0"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb2ce28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd20fb26908" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20fb26908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb26c58"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb26de0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20fb25020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb251a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb25330"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20fb254b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb25640"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb257c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20fb25950"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20fb25ad8"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb25c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20fb25de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20fb24020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20fb242a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb24430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd20fb27720" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd20fb27720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20fb27a70"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20fb27bf8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20fb27d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20fb26020"/>
        <function-ref name="get" scoped="" ref="0x7fd20fb261a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20fb26330"/>
        <function-ref name="set" scoped="" ref="0x7fd20fb264b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20fb26640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fd20fb13020" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fd20fb13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd20fb13370"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fb134f8"/>
        <function-ref name="captured" scoped="" ref="0x7fd20fb13680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd20fb13808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fd20fb13bd8" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fd20fb13bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd20fb12020"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fb121a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd20fb12330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd20fb124b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fd20fb12898" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd20fb12898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd20fb12be8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fb12d70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd20fb0e020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd20fb0e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fd20faf7d60" loc="42:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fd20faf7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd20faf60d8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd20faf6260"/>
        <function-ref name="captured" scoped="" ref="0x7fd20faf63e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20faf6570"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20faf66f8"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd20faf6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd20fb0a020" loc="40:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd20fb0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd20fb0a370"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fb0a4f8"/>
        <function-ref name="captured" scoped="" ref="0x7fd20fb0a680"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd20fb0a808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fd20fb0aa90" loc="41:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20fb0aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd20fb0ade0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd20faf7020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd20faf71a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd20faf7330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd20faf74b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd20faf7640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd20faf77c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd20faf7950"/>
        <function-ref name="setControl" scoped="" ref="0x7fd20faf7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fd20faf6b48" loc="43:../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd20faf6b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20faf5020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20faf51a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20faf5330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20faf54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20faf5640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20faf57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20faf5950"/>
        <function-ref name="get" scoped="" ref="0x7fd20faf5ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20faf5c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20faf5de8"/>
        <function-ref name="set" scoped="" ref="0x7fd20faf4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20faf41a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20faf4330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20faf45b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20faf4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fd20fae7568" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fd20fae7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fae78b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fae7a40"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fae7bc8"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fae7d50"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fae6020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fae61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fd20fadc568" loc="58:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fd20fadc568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fadc8b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fadca40"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fadcbc8"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fadcd50"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fadb020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fadb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fd20fae4568" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fd20fae4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fae48b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fae4a40"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fae4bc8"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fae4d50"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fae3020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fae31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fd20fae2568" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fd20fae2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fae28b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fae2a40"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fae2bc8"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fae2d50"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fae1020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fae11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fd20faed568" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fd20faed568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20faed8b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20faeda40"/>
        <function-ref name="disable" scoped="" ref="0x7fd20faedbc8"/>
        <function-ref name="edge" scoped="" ref="0x7fd20faedd50"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fae8020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fae81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fd20fade568" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fd20fade568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fade9b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fadeb40"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fadecc8"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fadee50"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fadd020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fadd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fd20fae6568" loc="47:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fd20fae6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fae68b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fae6a40"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fae6bc8"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fae6d50"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fae5020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fae51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fd20fadb568" loc="59:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fd20fadb568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fadb8b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fadba40"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fadbbc8"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fadbd50"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fada020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fada1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fd20fae9690" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fd20fae9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fae99e0"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fae9b68"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fae9cf0"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fae9e78"/>
        <function-ref name="enable" scoped="" ref="0x7fd20faee030"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20faee1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fd20fae1568" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fd20fae1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fae18b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fae1a40"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fae1bc8"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fae1d50"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fadf020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fadf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fd20fae8568" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fd20fae8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fae88b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fae8a40"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fae8bc8"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fae8d50"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fae7020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fae71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fd20fadd568" loc="57:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fd20fadd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fadd8b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fadda40"/>
        <function-ref name="disable" scoped="" ref="0x7fd20faddbc8"/>
        <function-ref name="edge" scoped="" ref="0x7fd20faddd50"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fadc020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fadc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fd20fae5568" loc="48:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fd20fae5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fae58b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fae5a40"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fae5bc8"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fae5d50"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fae4020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fae41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fd20fae3568" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fd20fae3568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fae38b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fae3a40"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fae3bc8"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fae3d50"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fae2020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fae21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fd20faee578" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fd20faee578"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20faee8c8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20faeea50"/>
        <function-ref name="disable" scoped="" ref="0x7fd20faeebd8"/>
        <function-ref name="edge" scoped="" ref="0x7fd20faeed60"/>
        <function-ref name="enable" scoped="" ref="0x7fd20faed020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20faed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fd20fadf568" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fd20fadf568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fadf8b8"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fadfa40"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fadfbc8"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fadfd50"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fade020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fade1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fd20fad2020" loc="43:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fd20fad2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fad2370"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fad24f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fad2680"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fad2808"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fad2990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fad2b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fd20fac8020" loc="55:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fd20fac8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fac8370"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fac84f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fac8680"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fac8808"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fac8990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fac8b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fd20facf020" loc="46:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fd20facf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20facf370"/>
        <function-ref name="fired" scoped="" ref="0x7fd20facf4f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20facf680"/>
        <function-ref name="edge" scoped="" ref="0x7fd20facf808"/>
        <function-ref name="enable" scoped="" ref="0x7fd20facf990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20facfb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fd20facd020" loc="50:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fd20facd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20facd370"/>
        <function-ref name="fired" scoped="" ref="0x7fd20facd4f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20facd680"/>
        <function-ref name="edge" scoped="" ref="0x7fd20facd808"/>
        <function-ref name="enable" scoped="" ref="0x7fd20facd990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20facdb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fd20fad4020" loc="41:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fd20fad4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fad4370"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fad44f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fad4680"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fad4808"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fad4990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fad4b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fd20faca020" loc="53:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fd20faca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20faca470"/>
        <function-ref name="fired" scoped="" ref="0x7fd20faca5f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20faca780"/>
        <function-ref name="edge" scoped="" ref="0x7fd20faca908"/>
        <function-ref name="enable" scoped="" ref="0x7fd20facaa90"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20facac18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fd20fad1020" loc="44:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fd20fad1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fad1370"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fad14f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fad1680"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fad1808"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fad1990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fad1b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fd20fac7020" loc="56:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fd20fac7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fac7370"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fac74f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fac7680"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fac7808"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fac7990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fac7b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fd20fad6020" loc="39:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fd20fad6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fad6370"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fad64f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fad6680"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fad6808"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fad6990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fad6b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fd20facc020" loc="51:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fd20facc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20facc370"/>
        <function-ref name="fired" scoped="" ref="0x7fd20facc4f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20facc680"/>
        <function-ref name="edge" scoped="" ref="0x7fd20facc808"/>
        <function-ref name="enable" scoped="" ref="0x7fd20facc990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20faccb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fd20fad3020" loc="42:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fd20fad3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fad3370"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fad34f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fad3680"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fad3808"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fad3990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fad3b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fd20fac9020" loc="54:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fd20fac9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fac9370"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fac94f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fac9680"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fac9808"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fac9990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fac9b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fd20fad0020" loc="45:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fd20fad0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fad0370"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fad04f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fad0680"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fad0808"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fad0990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fad0b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fd20face020" loc="49:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fd20face020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20face370"/>
        <function-ref name="fired" scoped="" ref="0x7fd20face4f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20face680"/>
        <function-ref name="edge" scoped="" ref="0x7fd20face808"/>
        <function-ref name="enable" scoped="" ref="0x7fd20face990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20faceb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fd20fad5020" loc="40:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fd20fad5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20fad5370"/>
        <function-ref name="fired" scoped="" ref="0x7fd20fad54f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20fad5680"/>
        <function-ref name="edge" scoped="" ref="0x7fd20fad5808"/>
        <function-ref name="enable" scoped="" ref="0x7fd20fad5990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20fad5b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fd20facb020" loc="52:../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fd20facb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20facb370"/>
        <function-ref name="fired" scoped="" ref="0x7fd20facb4f8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20facb680"/>
        <function-ref name="edge" scoped="" ref="0x7fd20facb808"/>
        <function-ref name="enable" scoped="" ref="0x7fd20facb990"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20facbb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fd20f9fc8d0" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fd20f9fc8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20f9fcc20"/>
        <function-ref name="fired" scoped="" ref="0x7fd20f9fcda8"/>
        <function-ref name="disable" scoped="" ref="0x7fd20f9ef020"/>
        <function-ref name="edge" scoped="" ref="0x7fd20f9ef1a8"/>
        <function-ref name="enable" scoped="" ref="0x7fd20f9ef330"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20f9ef4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fd20f9fddf8" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fd20f9fddf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd20f9fc170"/>
        <function-ref name="disable" scoped="" ref="0x7fd20f9fc2f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd20f9fc480"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd20f9fc608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fd20f9ed780" loc="46:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fd20f9ed780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20f9edad0"/>
        <function-ref name="fired" scoped="" ref="0x7fd20f9edc58"/>
        <function-ref name="disable" scoped="" ref="0x7fd20f9edde0"/>
        <function-ref name="edge" scoped="" ref="0x7fd20f9ec020"/>
        <function-ref name="enable" scoped="" ref="0x7fd20f9ec1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7fd20f9ec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fd20f9eebb8" loc="45:../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fd20f9eebb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd20f9ed020"/>
        <function-ref name="disable" scoped="" ref="0x7fd20f9ed1a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd20f9ed330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd20f9ed4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd20f5c9470" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd20f5c9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c99c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c9b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd20f5d49b8" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fd20f5d49b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5d4d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd20f5cd470" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd20f5cd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5cd7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5cd948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd20f5c8d98" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f5c8d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c7170"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c72f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fd20f5c0470" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fd20f5c0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c07c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c0948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd20f5c75c0" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fd20f5c75c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c7910"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c7a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd20f5b27c0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd20f5b27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5b2b10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd20f5b47c0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd20f5b47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5b4b10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd20f5d3c50" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd20f5d3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fd20f5bac10" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fd20f5bac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5b9020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd20f5b67c0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd20f5b67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5b6b10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b6c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd20f5cb470" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd20f5cb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5cb7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5cb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd20f5ca470" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd20f5ca470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5ca7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5ca948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fd20f5c2c10" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fd20f5c2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c1020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd20f5c3470" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fd20f5c3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c37c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd20f5c7d60" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd20f5c7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c60d8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c6260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd20f5d5430" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f5d5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd20f5d5780"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd20f5d5908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd20f5d5a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd20f5d0638" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd20f5d0638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5d0988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd20f5d0c50" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd20f5d0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5cf0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fd20f5b8060" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd20f5b8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5b83b0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b8538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd20f5cf3a0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fd20f5cf3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5cf6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd20f5b4020" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd20f5b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5b4370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd20f5d1900" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd20f5d1900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5d1c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fd20f5ba470" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fd20f5ba470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5ba7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5ba948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd20f5cbc10" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd20f5cbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5ca020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5ca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd20f5cdc10" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20f5cdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5cb020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5cb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd20f5d43a0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd20f5d43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5d46f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fd20f5bd470" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fd20f5bd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5bd7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5bd948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fd20f5c0c10" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fd20f5c0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5be020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5be1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fd20f5bdc10" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fd20f5bdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5ba020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5ba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd20f5b2020" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd20f5b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5b2370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd20f5b3020" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd20f5b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5b3370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd20f5c3c10" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fd20f5c3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c2020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fd20f5be470" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fd20f5be470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5be7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5be948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd20f5b6020" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fd20f5b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5b6370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd20f5c6cc8" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fd20f5c6cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c40a0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c4228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd20f5b1020" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd20f5b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd20f5b1370"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd20f5b14f8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b1680"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd20f5b1808"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20f5b1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd20f5d5d58" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd20f5d5d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5d40d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd20f5cec50" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fd20f5cec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5cd020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5cd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd20f5cac10" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd20f5cac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c9020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fd20f5c1470" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fd20f5c1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c17c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd20f5c6528" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd20f5c6528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c6878"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c6a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fd20f5c1c10" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fd20f5c1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c0020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd20f5c9e10" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd20f5c9e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c81a8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd20f5d3020" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd20f5d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5d3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd20f5c85f8" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f5c85f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c8948"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20f5d67d0" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20f5d67d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f5d6b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f5d6ca8"/>
        <function-ref name="request" scoped="" ref="0x7fd20f5d6e30"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f5d5020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f5d51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd20f5cf9b8" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd20f5cf9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5cfd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd20f5ce638" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fd20f5ce638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5ce988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd20f5b77c0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd20f5b77c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5b7b10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b7c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd20f5b7020" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd20f5b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5b7370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b74f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd20f5d0020" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd20f5d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5d0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd20f5b8800" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd20f5b8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5b8b50"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b8cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd20f5b37c0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fd20f5b37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5b3b10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b3c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd20f5c2470" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd20f5c2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c27c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fd20f5bec10" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fd20f5bec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5bd020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5bd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd20f5d3638" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd20f5d3638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5d3988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd20f5d12e8" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd20f5d12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5d1638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd20f5c44f0" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fd20f5c44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c4840"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c49c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd20f5ce020" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd20f5ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5ce370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd20f5c4c90" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fd20f5c4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5c3020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5c31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fd20f5b9470" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fd20f5b9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5b9bc0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b9d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd20f5b1c58" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd20f5b1c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd20f5b0020"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd20f5b01a8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5b0330"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd20f5b04b8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20f5b0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fd20f9aeb80" loc="41:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fd20f9aeb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd20f9ad020"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd20f9ad1a8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f9ad330"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd20f9ad4b8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20f9ad640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd20f9afb38" loc="40:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f9afb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd20f9ae020"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd20f9ae1a8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd20f9ae330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fd20f9ac020" loc="42:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fd20f9ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f9ac370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f9ac4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fd20f9acd60" loc="43:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fd20f9acd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f9ab0d8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f9ab260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20f9b2e78" loc="39:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20f9b2e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f9af1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f9af380"/>
        <function-ref name="request" scoped="" ref="0x7fd20f9af508"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f9af690"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f9af818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fd20f9abad8" loc="44:../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fd20f9abad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f9abe28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fd20f99d020" loc="55:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fd20f99d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f99d370"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f99d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fd20f9a5e50" loc="46:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fd20f9a5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd20f9a41e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd20f9a4370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f9a44f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd20f9a4680"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20f9a4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd20f9a9de0" loc="44:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f9a9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd20f9a6170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd20f9a62f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd20f9a6480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fd20f99fcf8" loc="54:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fd20f99fcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd20f99e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fd20f99d838" loc="56:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fd20f99d838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd20f99db88"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd20f99dd10"/>
        <function-ref name="isState" scoped="" ref="0x7fd20f99c020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd20f99c1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7fd20f99c330"/>
        <function-ref name="forceState" scoped="" ref="0x7fd20f99c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd20f9a01e8" loc="53:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fd20f9a01e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f9a0538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f9a06c0"/>
        <function-ref name="request" scoped="" ref="0x7fd20f9a0848"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f9a09d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f9a0b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fd20f9a3040" loc="47:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fd20f9a3040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f9a3390"/>
        <function-ref name="write" scoped="" ref="0x7fd20f9a3518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fd20f9a3d40" loc="48:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fd20f9a3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f9a10d8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f9a1260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd20f99c730" loc="57:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd20f99c730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd20f99ca80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd20f99cc08"/>
        <function-ref name="led1On" scoped="" ref="0x7fd20f99cd90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd20f996020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd20f9961a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20f996330"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd20f9964b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd20f996ad8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f996640"/>
        <function-ref name="led0On" scoped="" ref="0x7fd20f9967c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd20f996950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20f9a6c10" loc="45:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20f9a6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f9a5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f9a51a8"/>
        <function-ref name="request" scoped="" ref="0x7fd20f9a5330"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f9a54b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f9a5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fd20f9915d0" loc="88:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fd20f9915d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20f991920"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20f991aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fd20f9a1a98" loc="49:../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fd20f9a1a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f9a1de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd20f93a978" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd20f93a978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd20f93acc8"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd20f93ae50"/>
        <function-ref name="isState" scoped="" ref="0x7fd20f939020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd20f9391a8"/>
        <function-ref name="requestState" scoped="" ref="0x7fd20f939330"/>
        <function-ref name="forceState" scoped="" ref="0x7fd20f9394b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd20f935790" loc="66:../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd20f935790"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd20f935ae0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd20f935c68"/>
        <function-ref name="isState" scoped="" ref="0x7fd20f935df0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd20f934020"/>
        <function-ref name="requestState" scoped="" ref="0x7fd20f9341a8"/>
        <function-ref name="forceState" scoped="" ref="0x7fd20f934330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20f931438" loc="66:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20f931438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20f931788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd20f92f020" loc="67:../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd20f92f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd20f92f370"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd20f92f4f8"/>
        <function-ref name="isState" scoped="" ref="0x7fd20f92f680"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd20f92f808"/>
        <function-ref name="requestState" scoped="" ref="0x7fd20f92f990"/>
        <function-ref name="forceState" scoped="" ref="0x7fd20f92fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd20f5fa020" loc="44:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fd20f5fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f5fa370"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f5fa4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd20f918948" loc="43:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fd20f918948"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd20f918c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20f919cf0" loc="42:../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20f919cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f9180a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f918228"/>
        <function-ref name="request" scoped="" ref="0x7fd20f9183b0"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f918538"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f9186c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd20e6c5430" loc="82:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20e6c5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd20e6c5780"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20e6c5908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd20e6c4d18" loc="87:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fd20e6c4d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20e6c20a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20e6c2228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fd20e6c24b0" loc="89:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd20e6c24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd20e6c2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd20e6c5b90" loc="83:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fd20e6c5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd20e6c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20e6c67d0" loc="81:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20e6c67d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20e6c6b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20e6c6ca8"/>
        <function-ref name="request" scoped="" ref="0x7fd20e6c6e30"/>
        <function-ref name="granted" scoped="" ref="0x7fd20e6c5020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20e6c51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd20e6c42a8" loc="85:../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd20e6c42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd20e6c45f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd20e6c4780"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd20e6c4908"/>
        <function-ref name="write" scoped="" ref="0x7fd20e6c4a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fd20f8b4940" loc="74:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20f8b4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd20f8b4c90"/>
        <function-ref name="configure" scoped="" ref="0x7fd20f8b4e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd20f8b67f8" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fd20f8b67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f8b6b48"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f8b6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fd20f8b1850" loc="80:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd20f8b1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd20f8b1ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd20f8b7128" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fd20f8b7128"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd20f8b7478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fd20f8b25d8" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fd20f8b25d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f8b2928"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f8b2ab0"/>
        <function-ref name="request" scoped="" ref="0x7fd20f8b2c38"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f8b2dc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f8b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20f8b8020" loc="73:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20f8b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f8b8370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f8b84f8"/>
        <function-ref name="request" scoped="" ref="0x7fd20f8b8680"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f8b8808"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f8b8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd20f8b7770" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd20f8b7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd20f8b7ac0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd20f8b7c48"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd20f8b7dd0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f8b6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fd20f8ac688" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd20f8ac688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20f8ac9d8"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20f8acb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fd20f83f860" loc="76:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20f83f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd20f83fbd0"/>
        <function-ref name="configure" scoped="" ref="0x7fd20f83fd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd20f83c1e0" loc="79:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fd20f83c1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f83c550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f83c6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fd20f83b860" loc="82:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd20f83b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd20f83bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd20f83e020" loc="77:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fd20f83e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd20f83e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fd20f83a020" loc="83:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fd20f83a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd20f83a370"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd20f83a4f8"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd20f83a680"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd20f83a808"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd20f83a990"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd20f83ab18"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd20f83aca0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd20f83ae28"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd20f839020"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd20f8391a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd20f839330"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd20f8394b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd20f839640"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd20f8398c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd20f839a50"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd20f839bd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd20f839d60"/>
        <function-ref name="isUart" scoped="" ref="0x7fd20f838020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd20f8381a8"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd20f838330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd20f8384b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd20f838640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd20f8387c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd20f838950"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20f838ad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd20f838e60"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd20f837020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd20f8371a8"/>
        <function-ref name="tx" scoped="" ref="0x7fd20f837330"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd20f8374b8"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd20f837640"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd20f8377c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd20f837950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd20f837ad8"/>
        <function-ref name="rx" scoped="" ref="0x7fd20f837c60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd20f837de8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd20f836020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd20f8361a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd20f836330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd20f8364b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd20f835020" loc="85:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd20f835020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd20f835370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd20f8354f8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd20f835680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd20f835808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd20f835990"/>
        <function-ref name="get" scoped="" ref="0x7fd20f835b18"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd20f835ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd20f834330"/>
        <function-ref name="set" scoped="" ref="0x7fd20f834020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd20f835e28"/>
        <function-ref name="led0On" scoped="" ref="0x7fd20f8341a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fd20f83cac0" loc="81:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fd20f83cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f83ce30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f83b020"/>
        <function-ref name="request" scoped="" ref="0x7fd20f83b1a8"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f83b330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f83b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20f840ae8" loc="75:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20f840ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f840e58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f83f020"/>
        <function-ref name="request" scoped="" ref="0x7fd20f83f1a8"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f83f330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f83f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd20f83e5f8" loc="78:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd20f83e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd20f83e948"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd20f83ead0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd20f83ec58"/>
        <function-ref name="write" scoped="" ref="0x7fd20f83ede0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fd20f836780" loc="84:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd20f836780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20f836ad0"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20f836c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fd20f8345f8" loc="102:../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fd20f8345f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20f834948"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20f834ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fd20f825948" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fd20f825948"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd20f825c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fd20f828528" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd20f828528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20f828878"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20f828a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fd20f82fbc0" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd20f82fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd20f82c020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd20f82c1a8"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd20f82c330"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd20f82c4b8"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd20f82c640"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd20f82c7c8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd20f82c950"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd20f82cad8"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd20f82cc60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd20f82cde8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd20f82b020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd20f82b1a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd20f82b330"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd20f82b5b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd20f82b740"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd20f82b8c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd20f82ba50"/>
        <function-ref name="isUart" scoped="" ref="0x7fd20f82bbd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd20f82bd60"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd20f82a020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd20f82a1a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd20f82a330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd20f82a4b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd20f82a640"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20f82a7c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd20f82ab50"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd20f82acd8"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd20f82ae60"/>
        <function-ref name="tx" scoped="" ref="0x7fd20f829020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd20f8291a8"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd20f829330"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd20f8294b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd20f829640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd20f8297c8"/>
        <function-ref name="rx" scoped="" ref="0x7fd20f829950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd20f829ad8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd20f829c60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd20f829de8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd20f828020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd20f8281a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fd20f7ed558" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fd20f7ed558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f7ed8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f7eda30"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20f7edbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f7edd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f7ec020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20f7ec1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f7ec330"/>
        <function-ref name="get" scoped="" ref="0x7fd20f7ec4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20f7ec640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20f7ec7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f7ec950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20f7ecad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20f7ecc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20f7eb020"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f7eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fd20f81e8e0" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fd20f81e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20f81ec30"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20f81edb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fd20f7eb558" loc="83:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fd20f7eb558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f7eb8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f7eba30"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20f7ebbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f7ebd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f7ea020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20f7ea1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f7ea330"/>
        <function-ref name="get" scoped="" ref="0x7fd20f7ea4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20f7ea640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20f7ea7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f7ea950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20f7eaad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20f7eac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20f7e9020"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f7e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fd20f7e9558" loc="84:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fd20f7e9558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f7e98a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f7e9a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20f7e9bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f7e9d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f7e8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20f7e81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f7e8330"/>
        <function-ref name="get" scoped="" ref="0x7fd20f7e84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20f7e8640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20f7e87c8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f7e8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20f7e8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20f7e8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20f7e7020"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f7e71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fd20f822020" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fd20f822020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd20f822370"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd20f8224f8"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd20f822680"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd20f822808"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd20f822990"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd20f822b18"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd20f822ca0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd20f822e28"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd20f821020"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd20f8211a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd20f821330"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd20f8214b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd20f821640"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd20f8218c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd20f821a50"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd20f821bd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd20f821d60"/>
        <function-ref name="isUart" scoped="" ref="0x7fd20f820020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd20f8201a8"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd20f820330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd20f8204b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd20f820640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd20f8207c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd20f820950"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20f820ad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd20f820e60"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd20f81f020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd20f81f1a8"/>
        <function-ref name="tx" scoped="" ref="0x7fd20f81f330"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd20f81f4b8"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd20f81f640"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd20f81f7c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd20f81f950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd20f81fad8"/>
        <function-ref name="rx" scoped="" ref="0x7fd20f81fc60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd20f81fde8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd20f81e020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd20f81e1a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd20f81e330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd20f81e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fd20f7f6a48" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fd20f7f6a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fd20f7f6d98"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fd20f81c020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fd20f81c1a8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fd20f81c330"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fd20f81c4b8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fd20f81c640"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fd20f81c7c8"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fd20f81c950"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd20f81cad8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fd20f81cc60"/>
        <function-ref name="getData" scoped="" ref="0x7fd20f81cde8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fd20f81b020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fd20f81b1a8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fd20f81b430"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fd20f81b5b8"/>
        <function-ref name="getIV" scoped="" ref="0x7fd20f81b740"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fd20f81b8c8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fd20f81ba50"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fd20f81bbd8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fd20f81bd60"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fd20f7f5020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fd20f7f51a8"/>
        <function-ref name="isI2C" scoped="" ref="0x7fd20f7f5330"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fd20f7f54b8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fd20f7f5640"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fd20f7f59c8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fd20f7f5b50"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fd20f7f5cd8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fd20f7f5e60"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fd20f7f4020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fd20f7f41a8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fd20f7f4330"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fd20f7f44b8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fd20f7f4640"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fd20f7f47c8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fd20f7f4950"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fd20f7f4ad8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fd20f7f4c60"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fd20f7f4de8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fd20f7f3020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fd20f7f31a8"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fd20f7f3330"/>
        <function-ref name="setData" scoped="" ref="0x7fd20f7f34b8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fd20f7f3640"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fd20f7f37c8"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fd20f7f3950"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fd20f7f3ad8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fd20f7f3c60"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fd20f7f3de8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fd20f7f2420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fd20f7f25a8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fd20f7f2730"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fd20f7f28b8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fd20f7f2a40"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fd20f7f2bc8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fd20f7f2d50"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fd20f7f1020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fd20f7f11a8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fd20f7f1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fd20f7ef658" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fd20f7ef658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f7ef9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f7efb30"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20f7efcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f7efe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f7ee020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20f7ee1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f7ee330"/>
        <function-ref name="get" scoped="" ref="0x7fd20f7ee4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20f7ee640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20f7ee7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f7ee950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20f7eead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20f7eec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20f7ed020"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f7ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fd20f81d268" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd20f81d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd20f81d5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fd20f7f16e0" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fd20f7f16e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f7f1a30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f7f1bb8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20f7f1d40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f7f0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f7f01a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20f7f0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f7f04b8"/>
        <function-ref name="get" scoped="" ref="0x7fd20f7f0640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20f7f07c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20f7f0950"/>
        <function-ref name="set" scoped="" ref="0x7fd20f7f0ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20f7f0c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20f7f0de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20f7ef120"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f7ef2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd20e6bb8c8" loc="42:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20e6bb8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd20e6bbc18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20e6bbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fd20e6b5780" loc="46:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fd20e6b5780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd20e6b5ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd20e6ae8c8" loc="51:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20e6ae8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd20e6aec18"/>
        <function-ref name="configure" scoped="" ref="0x7fd20e6aeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fd20e6b5d58" loc="48:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fd20e6b5d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fd20e6b40d8"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fd20e6b4260"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fd20e6b43e8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fd20e6b4570"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fd20e6b46f8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fd20e6b4880"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fd20e6b4a08"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fd20e6b4b90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd20e6b4d18"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fd20e6b3020"/>
        <function-ref name="getData" scoped="" ref="0x7fd20e6b31a8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fd20e6b3330"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fd20e6b34b8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fd20e6b3740"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fd20e6b38c8"/>
        <function-ref name="getIV" scoped="" ref="0x7fd20e6b3a50"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fd20e6b3bd8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fd20e6b3d60"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fd20e6b2020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fd20e6b21a8"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fd20e6b2330"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fd20e6b24b8"/>
        <function-ref name="isI2C" scoped="" ref="0x7fd20e6b2640"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fd20e6b27c8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fd20e6b2950"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fd20e6b2cd8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fd20e6b2e60"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fd20e6b1020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fd20e6b11a8"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fd20e6b1330"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fd20e6b14b8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fd20e6b1640"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fd20e6b17c8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fd20e6b1950"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fd20e6b1ad8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fd20e6b1c60"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fd20e6b1de8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fd20e6b0020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fd20e6b01a8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fd20e6b0330"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fd20e6b04b8"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fd20e6b0640"/>
        <function-ref name="setData" scoped="" ref="0x7fd20e6b07c8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fd20e6b0950"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fd20e6b0ad8"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fd20e6b0c60"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fd20e6b0de8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fd20e6af020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fd20e6af1a8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fd20e6af730"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fd20e6af8b8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fd20e6afa40"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fd20e6afbc8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fd20e6afd50"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fd20e6ae020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fd20e6ae1a8"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fd20e6ae330"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fd20e6ae4b8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fd20e6ae640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fd20e6b5020" loc="45:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd20e6b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20e6b5370"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20e6b54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20e6bcb38" loc="41:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20e6bcb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20e6bb020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20e6bb1a8"/>
        <function-ref name="request" scoped="" ref="0x7fd20e6bb330"/>
        <function-ref name="granted" scoped="" ref="0x7fd20e6bb4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20e6bb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fd20e6ba7c0" loc="44:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd20e6ba7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd20e6bab10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd20e6bac98"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd20e6bae20"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd20e6b9020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd20e6b91a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd20e6b9330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd20e6b94b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd20e6b9640"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd20e6b97c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd20e6b9950"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd20e6b9ad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd20e6b9c60"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd20e6b9de8"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd20e6b8120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd20e6b82a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd20e6b8430"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd20e6b85b8"/>
        <function-ref name="isUart" scoped="" ref="0x7fd20e6b8740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd20e6b88c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd20e6b8a50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd20e6b8bd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd20e6b8d60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd20e6b7020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd20e6b71a8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20e6b7330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd20e6b76b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd20e6b7840"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd20e6b79c8"/>
        <function-ref name="tx" scoped="" ref="0x7fd20e6b7b50"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd20e6b7cd8"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd20e6b7e60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd20e6b6020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd20e6b61a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd20e6b6330"/>
        <function-ref name="rx" scoped="" ref="0x7fd20e6b64b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd20e6b6640"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd20e6b67c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd20e6b6950"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd20e6b6ad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd20e6b6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd20e6ba060" loc="43:../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20e6ba060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd20e6ba3b0"/>
        <function-ref name="userId" scoped="" ref="0x7fd20e6ba538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd20f74f660" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20f74f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd20f74f9b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20f74fb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd20f74db58" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20f74db58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd20f74c020"/>
        <function-ref name="configure" scoped="" ref="0x7fd20f74c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fd20f754a38" loc="39:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fd20f754a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20f754d88"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20f751020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20f750498" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20f750498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f7507e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f750970"/>
        <function-ref name="request" scoped="" ref="0x7fd20f750af8"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f750c80"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f750e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fd20f751940" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd20f751940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd20f751c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd20f74fe30" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20f74fe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd20f74d1a8"/>
        <function-ref name="userId" scoped="" ref="0x7fd20f74d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd20f7362a8" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20f7362a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd20f7365f8"/>
        <function-ref name="userId" scoped="" ref="0x7fd20f736780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fd20f748480" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fd20f748480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20f7487f0"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20f748978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fd20f738bd8" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fd20f738bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd20f736020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fd20f748d60" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd20f748d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd20f738170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fd20f738438" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fd20f738438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20f738788"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20f738910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd20f6c2d18" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20f6c2d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd20f6c10d8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20f6c1260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd20f6c0960" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20f6c0960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd20f6c0cd0"/>
        <function-ref name="configure" scoped="" ref="0x7fd20f6c0e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd20f6c14a8" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd20f6c14a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f6c17f8"/>
        <function-ref name="requested" scoped="" ref="0x7fd20f6c1980"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f6c1b08"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f6c1c90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20f6c1e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20f6c2020" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20f6c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f6c2390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f6c2518"/>
        <function-ref name="request" scoped="" ref="0x7fd20f6c26a0"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f6c2828"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f6c29b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd20f6c00e0" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20f6c00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd20f6c0430"/>
        <function-ref name="userId" scoped="" ref="0x7fd20f6c05b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20e6498e0" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20e6498e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20e649c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd20e648020" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd20e648020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd20e648370"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd20e6484f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd20e648680"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd20e648808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd20e646d58" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20e646d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd20e6450f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20e645278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd20e644980" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20e644980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd20e644cf0"/>
        <function-ref name="configure" scoped="" ref="0x7fd20e644e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd20e642130" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fd20e642130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd20e642480"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd20e642608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd20e642790"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd20e642918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd20e6454c0" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd20e6454c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20e645810"/>
        <function-ref name="requested" scoped="" ref="0x7fd20e645998"/>
        <function-ref name="granted" scoped="" ref="0x7fd20e645b20"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20e645ca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20e645e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd20e642b60" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd20e642b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd20e641020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd20e6411a8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd20e641330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd20e6414b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd20e641640"/>
        <function-ref name="get" scoped="" ref="0x7fd20e6417c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd20e641950"/>
        <function-ref name="led0On" scoped="" ref="0x7fd20e640020"/>
        <function-ref name="set" scoped="" ref="0x7fd20e641c60"/>
        <function-ref name="led2On" scoped="" ref="0x7fd20e641ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd20e641de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20e646060" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20e646060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20e6463d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20e646558"/>
        <function-ref name="request" scoped="" ref="0x7fd20e6466e0"/>
        <function-ref name="granted" scoped="" ref="0x7fd20e646868"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20e6469f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd20e6440e0" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20e6440e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd20e644430"/>
        <function-ref name="userId" scoped="" ref="0x7fd20e6445b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd20e6402e8" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fd20e6402e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20e640638"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20e6407c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fd20f6b7250" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fd20f6b7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fd20f6b75a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fd20f6b7728"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fd20f6b78b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fd20f6b7a38"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fd20f6b7bc0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fd20f6b7d48"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fd20f6b6020"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fd20f6b61a8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd20f6b6330"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fd20f6b64b8"/>
        <function-ref name="getData" scoped="" ref="0x7fd20f6b6640"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fd20f6b67c8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fd20f6b6950"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fd20f6b6bd8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fd20f6b6d60"/>
        <function-ref name="getIV" scoped="" ref="0x7fd20f6b5020"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fd20f6b51a8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fd20f6b5330"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fd20f6b54b8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fd20f6b5640"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fd20f6b57c8"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fd20f6b5950"/>
        <function-ref name="isI2C" scoped="" ref="0x7fd20f6b5ad8"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fd20f6b5c60"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fd20f6b5de8"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fd20f6b4220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fd20f6b43a8"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fd20f6b4530"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fd20f6b46b8"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fd20f6b4840"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fd20f6b49c8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fd20f6b4b50"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fd20f6b4cd8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fd20f6b4e60"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fd20f6b3020"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fd20f6b31a8"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fd20f6b3330"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fd20f6b34b8"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fd20f6b3640"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fd20f6b37c8"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fd20f6b3950"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fd20f6b3ad8"/>
        <function-ref name="setData" scoped="" ref="0x7fd20f6b3c60"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fd20f6b3de8"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fd20f6b2020"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fd20f6b21a8"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fd20f6b2330"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fd20f6b24b8"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fd20f6b2640"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fd20f6b2bc8"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fd20f6b2d50"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fd20f6b1020"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fd20f6b11a8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fd20f6b1330"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fd20f6b14b8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fd20f6b1640"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fd20f6b17c8"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fd20f6b1950"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fd20f6b1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fd20f6a76e0" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fd20f6a76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd20f6a7a30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd20f6a7bb8"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd20f6a7d40"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd20f6a5020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd20f6a51a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd20f6a5330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd20f6a54b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd20f6a5640"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd20f6a57c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd20f6a5950"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd20f6a5ad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd20f6a5c60"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd20f6a5de8"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd20f6a4120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd20f6a42a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd20f6a4430"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd20f6a45b8"/>
        <function-ref name="isUart" scoped="" ref="0x7fd20f6a4740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd20f6a48c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd20f6a4a50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd20f6a4bd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd20f6a4d60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd20f6a3020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd20f6a31a8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20f6a3330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd20f6a36b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd20f6a3840"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd20f6a39c8"/>
        <function-ref name="tx" scoped="" ref="0x7fd20f6a3b50"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd20f6a3cd8"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd20f6a3e60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd20f6a2020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd20f6a21a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd20f6a2330"/>
        <function-ref name="rx" scoped="" ref="0x7fd20f6a24b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd20f6a2640"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd20f6a27c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd20f6a2950"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd20f6a2ad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd20f6a2c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fd20f6a0e00" loc="43:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fd20f6a0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f69f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f69f330"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20f69f4b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f69f640"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f69f7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20f69f950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f69fad8"/>
        <function-ref name="get" scoped="" ref="0x7fd20f69fc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20f69fde8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20f69e020"/>
        <function-ref name="set" scoped="" ref="0x7fd20f69e1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20f69e330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20f69e4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20f69e740"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f69e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fd20f6b0b18" loc="39:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fd20f6b0b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fd20f6b0e68"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fd20f6ad020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fd20f6ad1a8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fd20f6ad330"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fd20f6ad4b8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fd20f6ad640"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fd20f6ad7c8"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fd20f6ad950"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd20f6adad8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fd20f6adc60"/>
        <function-ref name="getData" scoped="" ref="0x7fd20f6adde8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fd20f6ac020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fd20f6ac1a8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fd20f6ac430"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fd20f6ac5b8"/>
        <function-ref name="getIV" scoped="" ref="0x7fd20f6ac740"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fd20f6ac8c8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fd20f6aca50"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fd20f6acbd8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fd20f6acd60"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fd20f6ab020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fd20f6ab1a8"/>
        <function-ref name="isI2C" scoped="" ref="0x7fd20f6ab330"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fd20f6ab4b8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fd20f6ab640"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fd20f6ab9c8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fd20f6abb50"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fd20f6abcd8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fd20f6abe60"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fd20f6aa020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fd20f6aa1a8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fd20f6aa330"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fd20f6aa4b8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fd20f6aa640"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fd20f6aa7c8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fd20f6aa950"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fd20f6aaad8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fd20f6aac60"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fd20f6aade8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fd20f6a9020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fd20f6a91a8"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fd20f6a9330"/>
        <function-ref name="setData" scoped="" ref="0x7fd20f6a94b8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fd20f6a9640"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fd20f6a97c8"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fd20f6a9950"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fd20f6a9ad8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fd20f6a9c60"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fd20f6a9de8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fd20f6a8420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fd20f6a85a8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fd20f6a8730"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fd20f6a88b8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fd20f6a8a40"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fd20f6a8bc8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fd20f6a8d50"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fd20f6a7020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fd20f6a71a8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fd20f6a7330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fd20f6a1060" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fd20f6a1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f6a13b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f6a1538"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20f6a16c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f6a1848"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f6a19d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20f6a1b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f6a1ce0"/>
        <function-ref name="get" scoped="" ref="0x7fd20f6a1e68"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20f6a0020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20f6a01a8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f6a0330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20f6a04b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20f6a0640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20f6a08c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f6a0a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd20f599a88" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd20f599a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f597020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd20f5a2100" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fd20f5a2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5a2450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd20f59ca88" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd20f59ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f59cdd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f59b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd20f596470" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f596470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5967c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f596948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fd20f58fc10" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fd20f58fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f58e020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f58e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd20f596c10" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fd20f596c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f595020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd20f5822e8" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd20f5822e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f582638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5827c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd20f5852e8" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd20f5852e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f585638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5857c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd20f5a13a0" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd20f5a13a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5a16f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fd20f58b470" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fd20f58b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f58b7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f58b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd20f5862e8" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd20f5862e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f586638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5867c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd20f59ba88" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd20f59ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f59bdd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f59a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd20f59aa88" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd20f59aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f59add8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f599020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fd20f590470" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fd20f590470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5907c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f590948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd20f593c10" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fd20f593c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f592020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd20f595470" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd20f595470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5957c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f595948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd20f5a5a90" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f5a5a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd20f5a5de0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd20f5a3020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd20f5a31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd20f5a0c50" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd20f5a0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f59f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd20f59f2e8" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd20f59f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f59f738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fd20f589a38" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd20f589a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f589d88"/>
        <function-ref name="write" scoped="" ref="0x7fd20f588020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd20f59fa00" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fd20f59fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f59fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd20f586a88" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd20f586a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f586dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f585020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd20f5a0020" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd20f5a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5a0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fd20f58cc10" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fd20f58cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f58b020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f58b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd20f59a2e8" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd20f59a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f59a638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f59a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd20f59b2e8" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20f59b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f59b638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f59b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd20f5a3a88" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd20f5a3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5a3dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fd20f58dc10" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fd20f58dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f58c020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f58c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fd20f58e470" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fd20f58e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f58e7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f58e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fd20f58c470" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fd20f58c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f58c7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f58c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd20f584a88" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd20f584a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f584dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f582020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd20f585a88" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd20f585a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f585dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f584020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd20f592470" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fd20f592470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5927c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f592948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fd20f58ec10" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fd20f58ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f58d020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f58d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd20f587a88" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fd20f587a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f587dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f586020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd20f594470" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fd20f594470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5947c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f594948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd20f582a88" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd20f582a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd20f582dd8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd20f581020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5811a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd20f581330"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20f5814b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd20f5a3470" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd20f5a3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5a37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd20f59c2e8" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fd20f59c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f59c638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f59c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd20f5992e8" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd20f5992e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f599638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5997c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fd20f590c10" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fd20f590c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f58f020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f58f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd20f595c10" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd20f595c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f594020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fd20f58f470" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fd20f58f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f58f7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f58f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd20f597470" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd20f597470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5977c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f597948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd20f5a2718" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd20f5a2718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5a2a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd20f597c10" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f597c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f596020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20f5a6e60" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20f5a6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f5a51e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f5a5370"/>
        <function-ref name="request" scoped="" ref="0x7fd20f5a54f8"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f5a5680"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f5a5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd20f59d060" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd20f59d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f59d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd20f59dc90" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fd20f59dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f59c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd20f5872e8" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd20f5872e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f587638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5877c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd20f588a88" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd20f588a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f588dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f587020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd20f5a0638" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd20f5a0638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5a0988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd20f5882e8" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd20f5882e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f588638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5887c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd20f5842e8" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fd20f5842e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f584638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5847c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd20f592c10" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd20f592c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f590020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fd20f58d470" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fd20f58d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f58d7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f58d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd20f5a2d30" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd20f5a2d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5a10d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd20f5a19b8" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd20f5a19b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5a1d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd20f594c10" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fd20f594c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f593020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5931a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd20f59d678" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd20f59d678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f59d9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd20f593470" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fd20f593470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5937c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f593948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fd20f58bc10" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fd20f58bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5895e8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f589770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd20f581780" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd20f581780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd20f581ad0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd20f581c58"/>
        <function-ref name="write" scoped="" ref="0x7fd20f581de0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd20f580020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20f5801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd20f56c470" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd20f56c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f56c9c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f56cb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd20f577900" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fd20f577900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f577c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd20f570470" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd20f570470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5707c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f570948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd20f56bd98" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f56bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f56a170"/>
        <function-ref name="write" scoped="" ref="0x7fd20f56a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fd20f563470" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fd20f563470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5637c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f563948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd20f56a5c0" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fd20f56a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f56a910"/>
        <function-ref name="write" scoped="" ref="0x7fd20f56aa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd20f5577c0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd20f5577c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f557b10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f557c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd20f5597c0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd20f5597c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f559b10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f559c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd20f576c50" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd20f576c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f574020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fd20f55fc10" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fd20f55fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f55e020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f55e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd20f55a7c0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd20f55a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f55ab10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f55ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd20f56e470" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd20f56e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f56e7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f56e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd20f56d470" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd20f56d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f56d7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f56d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fd20f565c10" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fd20f565c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f564020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd20f566470" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fd20f566470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5667c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f566948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd20f56ad60" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd20f56ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5680d8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f568260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd20f5782a8" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f5782a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd20f5785f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd20f578780"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd20f578908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd20f573638" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd20f573638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f573988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd20f573c50" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd20f573c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5720d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fd20f55d060" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd20f55d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f55d3b0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f55d538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd20f5723a0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fd20f5723a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f5726f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd20f559020" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd20f559020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f559370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5594f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd20f574900" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd20f574900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f574c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fd20f55f470" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fd20f55f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f55f7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f55f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd20f56ec10" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd20f56ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f56d020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f56d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd20f570c10" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20f570c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f56e020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f56e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd20f5772e8" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd20f5772e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f577638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fd20f560470" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fd20f560470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5607c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f560948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fd20f563c10" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fd20f563c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f561020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fd20f560c10" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fd20f560c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f55f020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f55f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd20f557020" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd20f557020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f557370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5574f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd20f558020" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd20f558020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f558370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5584f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd20f566c10" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fd20f566c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f565020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fd20f561470" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fd20f561470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5617c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f561948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd20f55a020" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fd20f55a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f55a370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f55a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd20f568cc8" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fd20f568cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5670a0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f567228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd20f556020" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd20f556020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd20f556370"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd20f5564f8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f556680"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd20f556808"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20f556990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd20f578bd0" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd20f578bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f577020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd20f571c50" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fd20f571c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f570020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd20f56dc10" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd20f56dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f56c020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f56c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fd20f564470" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fd20f564470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5647c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f564948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd20f568528" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd20f568528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f568878"/>
        <function-ref name="write" scoped="" ref="0x7fd20f568a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fd20f564c10" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fd20f564c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f563020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd20f56ce10" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd20f56ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f56b1a8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f56b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd20f576020" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd20f576020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f576370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd20f56b5f8" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f56b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f56b948"/>
        <function-ref name="write" scoped="" ref="0x7fd20f56bad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20f579558" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20f579558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f5798a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f579a30"/>
        <function-ref name="request" scoped="" ref="0x7fd20f579bb8"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f579d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f578020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd20f5729b8" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd20f5729b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f572d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd20f571638" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fd20f571638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f571988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd20f55c7c0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd20f55c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f55cb10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f55cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd20f55c020" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd20f55c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f55c370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f55c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd20f573020" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd20f573020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f573370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd20f55d800" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd20f55d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f55db50"/>
        <function-ref name="write" scoped="" ref="0x7fd20f55dcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd20f5587c0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fd20f5587c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f558b10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f558c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd20f565470" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd20f565470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f5657c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f565948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fd20f561c10" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fd20f561c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f560020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd20f576638" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd20f576638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f576988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd20f5742e8" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd20f5742e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f574638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd20f5674f0" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fd20f5674f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f567840"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5679c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd20f571020" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd20f571020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f571370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd20f567c90" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fd20f567c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f566020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5661a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fd20f55e470" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fd20f55e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f55ebc0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f55ed48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd20f556c58" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd20f556c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd20f555020"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd20f5551a8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f555330"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd20f5554b8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20f555640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fd20f54c690" loc="54:../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd20f54c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd20f54c9e0"/>
        <function-ref name="changed" scoped="" ref="0x7fd20f54cb68"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd20f54ccf0"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd20f54ce78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fd20f54ecc0" loc="13:../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd20f54ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fd20f5370a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fd20f533190" loc="5:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd20f533190"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fd20f5334e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7fd20f530608" loc="8:../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fd20f530608"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f530958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fd20f536ab8" loc="8:../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fd20f536ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f536e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7fd20f51b360" loc="14:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fd20f51b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f51b6b0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f51b838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7fd20f51bba8" loc="15:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7fd20f51bba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd20f51f020"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f51f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fd20f521a58" loc="11:../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fd20f521a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f521da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fd20f524b88" loc="8:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fd20f524b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f50c020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f50c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fd20f50c530" loc="11:../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fd20f50c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f50c880"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f50ca08"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f50cb90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f50cd18"/>
        <function-ref name="get" scoped="" ref="0x7fd20f50b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f50b1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f50b330"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f50b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fd20f503748" loc="15:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fd20f503748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fded020"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd20fded378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fd20f506578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fd20f508108" loc="11:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fd20f508108"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f508458"/>
        <function-ref name="write" scoped="" ref="0x7fd20f5085e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fd20f508968" loc="14:../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fd20f508968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f508cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f508e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f507020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f5071a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20f507330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f5074b8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f507640"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f5077c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fd20f50ab60" loc="41:../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fd20f50ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fded020"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd20fded378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fd20f4e38f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fd20f4e1bc8" loc="54:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fd20f4e1bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fded020"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd20fded378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fd20f4d3948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd20f4d2020" loc="55:../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd20f4d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fded020"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd20fded378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f4d2d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20f4d16b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20f4d1230"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20f4d1b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7fd20f4cb3a8" loc="46:../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fd20f4cb3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fded020"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd20fded378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f4ca130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20f4caa40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20f4ca5b8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20f4c9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fd20f4c5928" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20f4c5928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20f4c5c78"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd20f4c5e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd20f4c4020"/>
        <function-ref name="get" scoped="" ref="0x7fd20f4c41a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd20f4c4330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20f4c44b8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20f4c4640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20f4c47c8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20f4c4950"/>
        <function-ref name="setMode" scoped="" ref="0x7fd20f4c4ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd20f4c4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd20f4c8980" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd20f4c8980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fded020"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd20fded378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f4c6730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20f4c5088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20f4c6bb8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20f4c5510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7fd20f50d360" loc="3:../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7fd20f50d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f50d6b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f50d838"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f50d9c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f50db48"/>
        <function-ref name="get" scoped="" ref="0x7fd20f50dcd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f50de58"/>
        <function-ref name="set" scoped="" ref="0x7fd20f4c0020"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f4c01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd20f4bd5f8" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd20f4bd5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f4bd948"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f4bdad0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20f4bdc58"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f4bdde0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f4bc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20f4bc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f4bc330"/>
        <function-ref name="get" scoped="" ref="0x7fd20f4bc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20f4bc640"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20f4bc7c8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f4bc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20f4bcad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20f4bcc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20f4bb020"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f4bb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd20f4bf4e0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd20f4bf4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f4bf830"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f4bf9b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f4bfb40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f4bfcc8"/>
        <function-ref name="get" scoped="" ref="0x7fd20f4bfe50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f4bd020"/>
        <function-ref name="set" scoped="" ref="0x7fd20f4bd1a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f4bd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd20f4b7020" loc="14:../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd20f4b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd20f4b7370"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f4b74f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd20f4a9140" loc="46:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd20f4a9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd20f4a9490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd20f4a9618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd20f4a97a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd20f4a9928"/>
        <function-ref name="setCca" scoped="" ref="0x7fd20f4a9ab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd20f4a9c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fd20f4a8ca8" loc="47:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd20f4a8ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd20f4a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fd20f4aa480" loc="45:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd20f4aa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f4aa7d0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f4aa958"/>
        <function-ref name="modify" scoped="" ref="0x7fd20f4aaae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f4aac68"/>
        <function-ref name="resend" scoped="" ref="0x7fd20f4aadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd20f4adc40" loc="44:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd20f4adc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd20f4aa020"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f4aa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fd20f4a73d8" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fd20f4a73d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd20f4a7728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd20f49c7c0" loc="51:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd20f49c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd20f49cb10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd20f49cc98"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd20f49ce20"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd20f49b020"/>
        <function-ref name="setCca" scoped="" ref="0x7fd20f49b1a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd20f49b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fd20f492460" loc="58:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd20f492460"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd20f491900"/>
        <function-ref name="clear" scoped="" ref="0x7fd20f490020"/>
        <function-ref name="isValid" scoped="" ref="0x7fd20f491220"/>
        <function-ref name="set" scoped="" ref="0x7fd20f490700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fd20f47dc58" loc="78:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f47dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f47c020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f47c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fd20f47c500" loc="79:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd20f47c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f47c850"/>
        <function-ref name="write" scoped="" ref="0x7fd20f47c9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fd20f49b738" loc="52:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd20f49b738"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd20f49ba88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fd20f47f3c0" loc="72:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd20f47f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f47f710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fd20f486cf8" loc="60:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fd20f486cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd20f48d0a0"/>
        <function-ref name="disable" scoped="" ref="0x7fd20f48d228"/>
        <function-ref name="captured" scoped="" ref="0x7fd20f48d3b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd20f48d538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fd20f49a820" loc="55:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fd20f49a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20f497020"/>
        <function-ref name="fired" scoped="" ref="0x7fd20f498020"/>
        <function-ref name="startAt" scoped="" ref="0x7fd20f498930"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20f4984a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd20f4974a8"/>
        <function-ref name="start" scoped="" ref="0x7fd20f499598"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f499a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd20f497940" loc="56:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f497940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd20f497c90"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd20f497e18"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd20f495020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd20f4951a8"/>
        <function-ref name="getPower" scoped="" ref="0x7fd20f495330"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd20f4954b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fd20f4813b0" loc="68:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd20f4813b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f481700"/>
        <function-ref name="write" scoped="" ref="0x7fd20f481888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fd20f481c20" loc="69:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd20f481c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f480020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f4801a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fd20f4755f0" loc="83:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fd20f4755f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f475940"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fd20f475ac8"/>
        <function-ref name="sfd" scoped="" ref="0x7fd20f475c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd20f49e9f8" loc="50:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd20f49e9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f49ed48"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f49c020"/>
        <function-ref name="modify" scoped="" ref="0x7fd20f49c1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f49c330"/>
        <function-ref name="resend" scoped="" ref="0x7fd20f49c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fd20f483b28" loc="66:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f483b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd20f483e78"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd20f482030"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd20f4821b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fd20f47fab0" loc="73:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd20f47fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f47fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fd20f48bb10" loc="62:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fd20f48bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f48be60"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f485020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f4851a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f485330"/>
        <function-ref name="get" scoped="" ref="0x7fd20f4854b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f485640"/>
        <function-ref name="set" scoped="" ref="0x7fd20f4857c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f485950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20f49fb28" loc="48:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20f49fb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20f49fe78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd20f4957e8" loc="57:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f4957e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f495b38"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd20f495cc0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd20f495e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fd20f486170" loc="59:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd20f486170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f4864c0"/>
        <function-ref name="isSet" scoped="" ref="0x7fd20f486648"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f4867d0"/>
        <function-ref name="set" scoped="" ref="0x7fd20f486958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fd20f47e1e8" loc="74:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20f47e1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f47e738"/>
        <function-ref name="write" scoped="" ref="0x7fd20f47e8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd20f484e68" loc="65:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fd20f484e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f4831e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f483370"/>
        <function-ref name="request" scoped="" ref="0x7fd20f4834f8"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f483680"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f483808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fd20f48d880" loc="61:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fd20f48d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f48dcd0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f48de58"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f48b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f48b1a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20f48b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f48b4b8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f48b640"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f48b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fd20f47cd30" loc="80:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd20f47cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f47b0d8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f47b260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fd20f47b5d0" loc="81:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd20f47b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f47b920"/>
        <function-ref name="write" scoped="" ref="0x7fd20f47baa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fd20f480520" loc="70:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd20f480520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f480870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fd20f485c98" loc="63:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fd20f485c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f484020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f4841a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f484330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f4844b8"/>
        <function-ref name="get" scoped="" ref="0x7fd20f484640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f4847c8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f484950"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f484ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd20f479020" loc="84:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd20f479020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd20f479370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd20f4794f8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd20f479680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd20f479808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd20f479990"/>
        <function-ref name="get" scoped="" ref="0x7fd20f479b18"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd20f479ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd20f478330"/>
        <function-ref name="set" scoped="" ref="0x7fd20f479e28"/>
        <function-ref name="led0On" scoped="" ref="0x7fd20f478020"/>
        <function-ref name="led2On" scoped="" ref="0x7fd20f4781a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fd20f47d3d0" loc="77:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f47d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f47d720"/>
        <function-ref name="write" scoped="" ref="0x7fd20f47d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd20f49e198" loc="49:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd20f49e198"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd20f49e4e8"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f49e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fd20f482528" loc="67:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd20f482528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd20f482878"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd20f482a00"/>
        <function-ref name="write" scoped="" ref="0x7fd20f482b88"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd20f482d10"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20f481020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fd20f480bf0" loc="71:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd20f480bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f47f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fd20f47ec48" loc="76:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd20f47ec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f47d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fd20f49be80" loc="53:../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fd20f49be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd20f49a1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd20f3e0470" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd20f3e0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3e09c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3e0b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd20f3eb9b8" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fd20f3eb9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3ebd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd20f3e4470" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd20f3e4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3e47c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3e4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd20f3dfd98" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f3dfd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3de170"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3de2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fd20f3d7470" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fd20f3d7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d77c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd20f3de5c0" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fd20f3de5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3de910"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3dea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd20f3cb7c0" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd20f3cb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3cbb10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3cbc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd20f3cd7c0" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd20f3cd7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3cdb10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3cdc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd20f3eac50" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd20f3eac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fd20f3d3c10" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fd20f3d3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d2020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd20f3ce7c0" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd20f3ce7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3ceb10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3cec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd20f3e2470" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd20f3e2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3e27c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3e2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd20f3e1470" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd20f3e1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3e17c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3e1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fd20f3d9c10" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fd20f3d9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d8020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd20f3da470" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fd20f3da470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3da7c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3da948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd20f3ded60" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd20f3ded60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3dc0d8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3dc260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd20f3ec430" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f3ec430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd20f3ec780"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd20f3ec908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd20f3eca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd20f3e7638" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd20f3e7638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3e7988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd20f3e7c50" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd20f3e7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3e60d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fd20f3d1060" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd20f3d1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d13b0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d1538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd20f3e63a0" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fd20f3e63a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3e66f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd20f3cd020" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd20f3cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3cd370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3cd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd20f3e8900" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd20f3e8900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3e8c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fd20f3d3470" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fd20f3d3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d37c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd20f3e2c10" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd20f3e2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3e1020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd20f3e4c10" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20f3e4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3e2020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3e21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd20f3eb3a0" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd20f3eb3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3eb6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fd20f3d4470" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fd20f3d4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d47c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d4948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fd20f3d7c10" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fd20f3d7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d5020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fd20f3d4c10" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fd20f3d4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d3020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd20f3cb020" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd20f3cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3cb370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3cb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd20f3cc020" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd20f3cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3cc370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3cc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd20f3dac10" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fd20f3dac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d9020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fd20f3d5470" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fd20f3d5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d57c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd20f3ce020" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fd20f3ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3ce370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3ce4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd20f3dccc8" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fd20f3dccc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3db0a0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3db228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd20f3ca020" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd20f3ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd20f3ca370"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd20f3ca4f8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3ca680"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd20f3ca808"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20f3ca990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd20f3ecd58" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd20f3ecd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3eb0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd20f3e5c50" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fd20f3e5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3e4020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3e41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd20f3e1c10" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd20f3e1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3e0020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3e01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fd20f3d8470" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fd20f3d8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d87c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd20f3dc528" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd20f3dc528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3dc878"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3dca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fd20f3d8c10" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fd20f3d8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d7020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd20f3e0e10" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd20f3e0e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3df1a8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3df330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd20f3ea020" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd20f3ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3ea370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd20f3df5f8" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f3df5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3df948"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3dfad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20f3ed7d0" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20f3ed7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f3edb20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f3edca8"/>
        <function-ref name="request" scoped="" ref="0x7fd20f3ede30"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f3ec020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f3ec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd20f3e69b8" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd20f3e69b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3e6d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd20f3e5638" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fd20f3e5638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3e5988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd20f3d07c0" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd20f3d07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d0b10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d0c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd20f3d0020" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd20f3d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d0370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd20f3e7020" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd20f3e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3e7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd20f3d1800" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd20f3d1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d1b50"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d1cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd20f3cc7c0" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fd20f3cc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3ccb10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3ccc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd20f3d9470" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd20f3d9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d97c0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fd20f3d5c10" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fd20f3d5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d4020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd20f3ea638" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd20f3ea638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3ea988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd20f3e82e8" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd20f3e82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3e8638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd20f3db4f0" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fd20f3db4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3db840"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3db9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd20f3e5020" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd20f3e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3e5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd20f3dbc90" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fd20f3dbc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3da020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3da1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fd20f3d2470" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fd20f3d2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3d2bc0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3d2d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd20f3cac58" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd20f3cac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd20f3c9020"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd20f3c91a8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3c9330"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd20f3c94b8"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20f3c9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fd20f3bc808" loc="42:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fd20f3bc808"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f3bcb58"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fd20f3bcce0"/>
        <function-ref name="sfd" scoped="" ref="0x7fd20f3bce68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd20f3ba168" loc="43:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd20f3ba168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f3ba4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fd20f3ba8c0" loc="44:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fd20f3ba8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd20f3bac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd20f3bc020" loc="41:../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd20f3bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd20f3bc370"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f3bc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fd20f3b3688" loc="54:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fd20f3b3688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f3b39d8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f3b3b60"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f3b3ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f3b3e70"/>
        <function-ref name="get" scoped="" ref="0x7fd20f3b2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f3b21a8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f3b2330"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f3b24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fd20f3acaf0" loc="64:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fd20f3acaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd20f3ace40"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd20f3ab020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd20f3ab1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd20f3ab330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd20f3ab4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd20f3ab640"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd20f3ab7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd20f3ab950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd20f3abad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd20f3abc60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd20f3abde8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd20f3aa020"/>
        <function-ref name="sync" scoped="" ref="0x7fd20f3aa1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd20f3aa430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd20f3aa5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fd20f396e38" loc="148:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fd20f396e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20f3941c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20f394348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fd20f3aab80" loc="65:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd20f3aab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd20f3a7020"/>
        <function-ref name="clear" scoped="" ref="0x7fd20f3a7700"/>
        <function-ref name="isValid" scoped="" ref="0x7fd20f3a98f8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f3a7de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fd20f3b2818" loc="55:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fd20f3b2818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f3b2b68"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f3b2cf0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f3b2e78"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f3b1030"/>
        <function-ref name="get" scoped="" ref="0x7fd20f3b11b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f3b1340"/>
        <function-ref name="set" scoped="" ref="0x7fd20f3b14c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f3b1650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fd20f3a56a8" loc="69:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f3a56a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3a59f8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3a5b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fd20f3a3020" loc="70:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd20f3a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3a3370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3a34f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fd20f3a2108" loc="72:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd20f3a2108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3a2458"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3a25e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd20f3ad328" loc="62:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f3ad328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd20f3ad678"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd20f3ad800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd20f3ad988"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd20f3adb10"/>
        <function-ref name="getPower" scoped="" ref="0x7fd20f3adc98"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd20f3ade20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fd20f3b6c48" loc="49:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fd20f3b6c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f3b5020"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fd20f3b51a8"/>
        <function-ref name="sfd" scoped="" ref="0x7fd20f3b5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fd20f3ae398" loc="60:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd20f3ae398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3ae6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fd20f3b4420" loc="53:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fd20f3b4420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20f3b4770"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20f3b48f8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20f3b4a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20f3b4c08"/>
        <function-ref name="get" scoped="" ref="0x7fd20f3b4d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20f3b3020"/>
        <function-ref name="set" scoped="" ref="0x7fd20f3b31a8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20f3b3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fd20f3a2970" loc="73:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd20f3a2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3a2cc0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3a2e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20f3b9de8" loc="47:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20f3b9de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20f3b6170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd20f3ac188" loc="63:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f3ac188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f3ac4d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd20f3ac660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd20f3ac7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd20f3b5600" loc="50:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd20f3b5600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f3b5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd20f3b06c0" loc="58:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fd20f3b06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f3b0a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f3b0b98"/>
        <function-ref name="request" scoped="" ref="0x7fd20f3b0d20"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f3af020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f3af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fd20f3a3850" loc="71:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd20f3a3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3a3ba0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3a3d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fd20f3af518" loc="59:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd20f3af518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd20f3af868"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd20f3af9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3afb78"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd20f3afd00"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20f3ae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fd20f3a1210" loc="74:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd20f3a1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3a1760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fd20f3b5d58" loc="51:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fd20f3b5d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd20f3b40d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd20f3a1a18" loc="76:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd20f3a1a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd20f3a1d68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd20f3a0020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd20f3a01a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd20f3a0330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd20f3a04b8"/>
        <function-ref name="get" scoped="" ref="0x7fd20f3a0640"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd20f3a07c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd20f3a0de8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f3a0950"/>
        <function-ref name="led0On" scoped="" ref="0x7fd20f3a0ad8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd20f3a0c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fd20f3a6dc8" loc="68:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f3a6dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f3a5170"/>
        <function-ref name="write" scoped="" ref="0x7fd20f3a52f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fd20f3a66c8" loc="67:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd20f3a66c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3a6a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fd20f3b1a30" loc="56:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd20f3b1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd20f3b1d80"/>
        <function-ref name="disable" scoped="" ref="0x7fd20f3b0020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd20f3b01a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd20f3b0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fd20f3aea88" loc="61:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd20f3aea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f3ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd20f3b6460" loc="48:../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd20f3b6460"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd20f3b67b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f3b6938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd20f3386b0" loc="44:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd20f3386b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd20f338a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd20f33c498" loc="41:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f33c498"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd20f33c7e8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd20f33c970"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd20f33caf8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd20f33cc80"/>
        <function-ref name="getPower" scoped="" ref="0x7fd20f33ce08"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd20f339020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd20f337130" loc="46:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd20f337130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd20f336588"/>
        <function-ref name="clear" scoped="" ref="0x7fd20f336c68"/>
        <function-ref name="isValid" scoped="" ref="0x7fd20f337e80"/>
        <function-ref name="set" scoped="" ref="0x7fd20f334380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fd20f339d08" loc="43:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f339d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f3380a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd20f338228"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd20f3383b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fd20f330ac8" loc="48:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd20f330ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f330e18"/>
        <function-ref name="isSet" scoped="" ref="0x7fd20f32f020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f32f1a8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f32f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd20f333020" loc="47:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd20f333020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd20f331478"/>
        <function-ref name="clear" scoped="" ref="0x7fd20f331b58"/>
        <function-ref name="isValid" scoped="" ref="0x7fd20f333d70"/>
        <function-ref name="set" scoped="" ref="0x7fd20f330278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd20f3393b8" loc="42:../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fd20f3393b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd20f339708"/>
        <function-ref name="noAck" scoped="" ref="0x7fd20f339890"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd20f339a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd20f32a630" loc="49:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd20f32a630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd20f32a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd20f32c2e8" loc="46:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f32c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd20f32c638"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd20f32c7c0"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd20f32c948"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd20f32cad0"/>
        <function-ref name="getPower" scoped="" ref="0x7fd20f32cc58"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd20f32cde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fd20f321618" loc="56:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd20f321618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20f321968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd20f321af0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f321c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f321e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd20f31f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd20f328060" loc="51:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd20f328060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd20f3274b8"/>
        <function-ref name="clear" scoped="" ref="0x7fd20f327b98"/>
        <function-ref name="isValid" scoped="" ref="0x7fd20f328db0"/>
        <function-ref name="set" scoped="" ref="0x7fd20f3262b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fd20f32bb60" loc="48:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f32bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f32a020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd20f32a1a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd20f32a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fd20f322ac8" loc="53:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd20f322ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f322e18"/>
        <function-ref name="isSet" scoped="" ref="0x7fd20f321020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f3211a8"/>
        <function-ref name="set" scoped="" ref="0x7fd20f321330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fd20f31c8b0" loc="57:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fd20f31c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f31e490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fd20f31eb20" loc="58:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fd20f31eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f31d728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd20f324020" loc="52:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd20f324020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd20f323478"/>
        <function-ref name="clear" scoped="" ref="0x7fd20f323b58"/>
        <function-ref name="isValid" scoped="" ref="0x7fd20f324d70"/>
        <function-ref name="set" scoped="" ref="0x7fd20f322278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd20f32b210" loc="47:../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fd20f32b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd20f32b560"/>
        <function-ref name="noAck" scoped="" ref="0x7fd20f32b6e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd20f32b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd20f2cf528" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fd20f2cf528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f2ce0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd20f2ce720" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd20f2ce720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f2c4578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20f2c3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20f2c4a00"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20f2c34a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fd20f2be1c8" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fd20f2be1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20f2b15f0"/>
        <function-ref name="fired" scoped="" ref="0x7fd20f2bdaf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd20f2b38c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd20f2b3470"/>
        <function-ref name="getdt" scoped="" ref="0x7fd20f2b0020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd20f2b1a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20f2b3020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd20f2bed10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd20f2b1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd20f2bd200"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f2bd6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd20f2b05e0" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fd20f2b05e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f2ae190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20f2bf080" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20f2bf080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20f2bf3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd20f2832d0" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd20f2832d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20f281928"/>
        <function-ref name="fired" scoped="" ref="0x7fd20f2829e8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd20f281320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20f282e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd20f281db0"/>
        <function-ref name="start" scoped="" ref="0x7fd20f282088"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f282560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20f2aca80" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20f2aca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20f2acdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd20e546d08" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd20e546d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20e543410"/>
        <function-ref name="fired" scoped="" ref="0x7fd20e5444a8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd20e544db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20e544930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd20e543898"/>
        <function-ref name="start" scoped="" ref="0x7fd20e545ac0"/>
        <function-ref name="stop" scoped="" ref="0x7fd20e544020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20e546520" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20e546520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20e546870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fd20e52e430" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20e52e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd20e52e780"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd20e52e908"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd20e52ea90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd20e52ec18"/>
        <function-ref name="fired" scoped="" ref="0x7fd20e52eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fd20e531a08" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20e531a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20e531d58"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd20e530020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd20e5301a8"/>
        <function-ref name="get" scoped="" ref="0x7fd20e530330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd20e5304b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20e530640"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20e5307c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20e530950"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20e530ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7fd20e530c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd20e530de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fd20e52f0c0" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20e52f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd20e52f410"/>
        <function-ref name="getControl" scoped="" ref="0x7fd20e52f598"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd20e52f720"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd20e52f8a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd20e52fa30"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd20e52fbb8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd20e52fd40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd20e52e020"/>
        <function-ref name="setControl" scoped="" ref="0x7fd20e52e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fd20e502a50" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fd20e502a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd20e502da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd20e501020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd20e5011a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd20e501330"/>
        <function-ref name="fired" scoped="" ref="0x7fd20e5014b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fd20e504200" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd20e504200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20e504550"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd20e5046d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd20e504860"/>
        <function-ref name="get" scoped="" ref="0x7fd20e5049e8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd20e504b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20e504cf8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20e504e80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20e503030"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20e5031b8"/>
        <function-ref name="setMode" scoped="" ref="0x7fd20e503340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd20e5034c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd20e52b270" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd20e52b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20e505918"/>
        <function-ref name="fired" scoped="" ref="0x7fd20e507980"/>
        <function-ref name="startAt" scoped="" ref="0x7fd20e505310"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20e507e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd20e505da0"/>
        <function-ref name="start" scoped="" ref="0x7fd20e507020"/>
        <function-ref name="stop" scoped="" ref="0x7fd20e5074f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20e52ca18" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20e52ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20e52cd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fd20e503750" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd20e503750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd20e503aa0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd20e503c28"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd20e503db0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd20e502020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd20e5021a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd20e502330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd20e5024b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd20e502640"/>
        <function-ref name="setControl" scoped="" ref="0x7fd20e5027c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd20f29e108" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd20f29e108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f29ee58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20f29d798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20f29d310"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20f29dc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fd20f297b10" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fd20f297b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f2958f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20f294230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20f295d80"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20f2946b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd20f299878" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd20f299878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f298660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20f297020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20f298ae8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20f2974a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd20e541c78" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd20e541c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20e53d410"/>
        <function-ref name="fired" scoped="" ref="0x7fd20e53e4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7fd20e53edb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20e53e930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd20e53d898"/>
        <function-ref name="start" scoped="" ref="0x7fd20e53f9f0"/>
        <function-ref name="stop" scoped="" ref="0x7fd20e53e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fd20e5391e8" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fd20e5391e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20e537918"/>
        <function-ref name="fired" scoped="" ref="0x7fd20e538980"/>
        <function-ref name="startAt" scoped="" ref="0x7fd20e537310"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20e538e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd20e537da0"/>
        <function-ref name="start" scoped="" ref="0x7fd20e538020"/>
        <function-ref name="stop" scoped="" ref="0x7fd20e5384f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd20e53c020" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd20e53c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20e53cd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20e53b6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20e53b230"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20e53bb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fd20f2505e8" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fd20f2505e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20f250938"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20f250ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fd20f254648" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd20f254648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20f251cc0"/>
        <function-ref name="fired" scoped="" ref="0x7fd20f252d50"/>
        <function-ref name="startAt" scoped="" ref="0x7fd20f2516b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20f251230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd20f250190"/>
        <function-ref name="start" scoped="" ref="0x7fd20f2523f0"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f2528c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd20f259290" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd20f259290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20f2555f0"/>
        <function-ref name="fired" scoped="" ref="0x7fd20f258ba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd20f2568c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd20f256470"/>
        <function-ref name="getdt" scoped="" ref="0x7fd20f254020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd20f255a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20f256020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd20f259dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd20f255020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd20f2582b8"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f258758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fd20f202618" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fd20f202618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20f202968"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20f202af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fd20f2075a0" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fd20f2075a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20f2038f0"/>
        <function-ref name="fired" scoped="" ref="0x7fd20f204020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd20f204d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd20f2048c0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd20f2021c0"/>
        <function-ref name="gett0" scoped="" ref="0x7fd20f203d40"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20f204470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd20f205118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd20f203320"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd20f2055b8"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f205a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd20f20d0c8" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd20f20d0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20f208610"/>
        <function-ref name="fired" scoped="" ref="0x7fd20f20ba48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd20f20a900"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd20f20a490"/>
        <function-ref name="getdt" scoped="" ref="0x7fd20f207020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd20f208a80"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20f20a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd20f20dc30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd20f208020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd20f20b118"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f20b5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd20f1ffc38" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fd20f1ffc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f1fe820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd20f1fee48" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd20f1fee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20f1fdbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20f1fc548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20f1fc0c0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20f1fc9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd20f1f5e28" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd20f1f5e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20f1e00c0"/>
        <function-ref name="fired" scoped="" ref="0x7fd20f1e3798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd20f1e14d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd20f1e1088"/>
        <function-ref name="getdt" scoped="" ref="0x7fd20f1e0960"/>
        <function-ref name="gett0" scoped="" ref="0x7fd20f1e0510"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20f1e3be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd20f1e49e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd20f1e1aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd20f1e4e80"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f1e3348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fd20f1efe18" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fd20f1efe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee020"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd20fdee378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd20f1e70c0"/>
        <function-ref name="fired" scoped="" ref="0x7fd20f1ea798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd20f1e94d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd20f1e9088"/>
        <function-ref name="getdt" scoped="" ref="0x7fd20f1e7960"/>
        <function-ref name="gett0" scoped="" ref="0x7fd20f1e7510"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd20f1eabe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd20f1eb9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd20f1e9aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd20f1ebe80"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f1ea348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd20f1d07c0" loc="69:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd20f1d07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1d0d10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd20f1dbcd0" loc="47:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fd20f1dbcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f1d90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd20f1d37c0" loc="63:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd20f1d37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1d3b10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1d3c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd20f1cd2e8" loc="72:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd20f1cd2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1cd638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1cd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fd20f1c6a88" loc="86:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fd20f1c6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1c6dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd20f1cda88" loc="73:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fd20f1cda88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1cddd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd20f1ba2e8" loc="108:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd20f1ba2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1ba638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1ba7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd20f1bc2e8" loc="104:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd20f1bc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1bc638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1bc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd20f1d8020" loc="50:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd20f1d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f1d8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fd20f1c22e8" loc="93:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fd20f1c22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1c2638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1c27c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd20f1bd2e8" loc="102:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd20f1bd2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1bd638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1bd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd20f1d27c0" loc="65:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd20f1d27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1d2b10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1d2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd20f1d17c0" loc="67:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd20f1d17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1d1b10"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1d1c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fd20f1c82e8" loc="83:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fd20f1c82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1c8638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1c87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd20f1caa88" loc="79:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fd20f1caa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1cadd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd20f1cc2e8" loc="74:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd20f1cc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1cc638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1cc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd20f1dc740" loc="42:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd20f1dc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd20f1dca90"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd20f1dcc18"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd20f1dcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd20f1d7900" loc="54:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd20f1d7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f1d7c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd20f1d6020" loc="55:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd20f1d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f1d6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fd20f1c1a38" loc="95:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd20f1c1a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1c1d88"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd20f1d6738" loc="56:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fd20f1d6738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f1d6a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd20f1bda88" loc="103:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd20f1bda88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1bddd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd20f1d8c50" loc="52:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd20f1d8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f1d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fd20f1c3a88" loc="92:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fd20f1c3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1c3dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd20f1d1020" loc="66:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd20f1d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1d1370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1d14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd20f1d2020" loc="64:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd20f1d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1d2370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1d24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd20f1db6b8" loc="46:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd20f1db6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f1dba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fd20f1c4a88" loc="90:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fd20f1c4a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1c4dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fd20f1c52e8" loc="87:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fd20f1c52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1c5638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1c57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fd20f1c32e8" loc="91:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fd20f1c32e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1c3638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1c37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd20f1bba88" loc="107:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd20f1bba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1bbdd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd20f1bca88" loc="105:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd20f1bca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1bcdd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd20f1c92e8" loc="80:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fd20f1c92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1c9638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1c97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fd20f1c5a88" loc="88:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fd20f1c5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1c5dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd20f1bea88" loc="101:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fd20f1bea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1bedd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd20f1cb2e8" loc="76:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fd20f1cb2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1cb638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1cb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd20f1baa88" loc="111:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd20f1baa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd20f1badd8"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd20f1b8020"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1b81a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd20f1b8330"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20f1b84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd20f1db0a0" loc="45:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd20f1db0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f1db3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd20f1d3020" loc="62:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fd20f1d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1d3370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1d34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd20f1d0020" loc="68:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd20f1d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1d0370"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1d04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fd20f1c8a88" loc="84:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fd20f1c8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1c8dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd20f1cca88" loc="75:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd20f1cca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1ccdd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fd20f1c62e8" loc="85:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fd20f1c62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1c6638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1c67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd20f1cf2e8" loc="70:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd20f1cf2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1cf638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1cf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd20f1d9368" loc="48:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd20f1d9368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f1d96b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd20f1cfa88" loc="71:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd20f1cfa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1cfdd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20f1dda10" loc="41:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20f1dda10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f1ddd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f1dc020"/>
        <function-ref name="request" scoped="" ref="0x7fd20f1dc1a8"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f1dc330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f1dc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd20f1d6d50" loc="57:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd20f1d6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f1d50d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd20f1d59b8" loc="59:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fd20f1d59b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f1d5d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd20f1be2e8" loc="100:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd20f1be2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1be638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1be7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd20f1bfa88" loc="99:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd20f1bfa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1bfdd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd20f1d72e8" loc="53:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd20f1d72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f1d7638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd20f1bf2e8" loc="96:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd20f1bf2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1bf638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1bf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd20f1bb2e8" loc="106:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fd20f1bb2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1bb638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1bb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd20f1c9a88" loc="81:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd20f1c9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1c9dd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fd20f1c42e8" loc="89:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fd20f1c42e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1c4638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1c47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd20f1d9980" loc="49:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd20f1d9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f1d9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd20f1d8638" loc="51:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd20f1d8638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f1d8988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd20f1cba88" loc="77:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fd20f1cba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1cbdd8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd20f1d53a0" loc="58:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd20f1d53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd20f1d56f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd20f1ca2e8" loc="78:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fd20f1ca2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1ca638"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1ca7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fd20f1c2a88" loc="94:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fd20f1c2a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd20f1c15e8"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1c1770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd20f1b8780" loc="112:../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd20f1b8780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd20f1b8ad0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd20f1b8c58"/>
        <function-ref name="write" scoped="" ref="0x7fd20f1b8de0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd20f1b7020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd20f1b71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fd20f192690" loc="46:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fd20f192690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd20f1929e0"/>
        <function-ref name="rand32" scoped="" ref="0x7fd20f192b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fd20f190668" loc="45:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fd20f190668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20f1921e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20f1968b8" loc="44:../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20f1968b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20f196c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fd20f18b4c8" loc="48:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fd20f18b4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd20f18b818"/>
        <function-ref name="rand32" scoped="" ref="0x7fd20f18b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fd20f18c3a0" loc="47:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fd20f18c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20f18b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20f18fb20" loc="46:../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20f18fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20f18fe70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd20f194bb0" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd20f194bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd20f18d020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd20f18d1a8"/>
        <function-ref name="isState" scoped="" ref="0x7fd20f18d330"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd20f18d4b8"/>
        <function-ref name="requestState" scoped="" ref="0x7fd20f18d640"/>
        <function-ref name="forceState" scoped="" ref="0x7fd20f18d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd20f172838" loc="44:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd20f172838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f172b88"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f172d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f171020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f1711a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f171330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd20f175a60" loc="40:../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd20f175a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f175db0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f172020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f1721a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f172330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f1724b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd20f16c578" loc="45:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd20f16c578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f16c8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f16ca50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f16cbd8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f16cd60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f16b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd20f16e298" loc="40:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd20f16e298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f16e5e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f16e770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f16e8f8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f16ea80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f16ec08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fd20f16a080" loc="47:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fd20f16a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd20f16a3d0"/>
        <function-ref name="rand32" scoped="" ref="0x7fd20f16a558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20f16ee80" loc="41:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20f16ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20f16c1f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd20f16a848" loc="48:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f16a848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f16ab98"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd20f16ad20"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd20f169020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fd20f16b2a0" loc="46:../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd20f16b2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd20f16b5f0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd20f16b778"/>
        <function-ref name="isState" scoped="" ref="0x7fd20f16b900"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd20f16ba88"/>
        <function-ref name="requestState" scoped="" ref="0x7fd20f16bc10"/>
        <function-ref name="forceState" scoped="" ref="0x7fd20f16bd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd20f16f468" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd20f16f468"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd20f16f7b8"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd20f16f940"/>
        <function-ref name="isState" scoped="" ref="0x7fd20f16fac8"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd20f16fc50"/>
        <function-ref name="requestState" scoped="" ref="0x7fd20f16fdd8"/>
        <function-ref name="forceState" scoped="" ref="0x7fd20f159020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd20f154e50" loc="47:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd20f154e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f1531e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd20f154080" loc="42:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd20f154080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f1543d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fd20f154748" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd20f154748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f154a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd20f14f728" loc="49:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd20f14f728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f14fa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20f14f020" loc="45:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20f14f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20f14f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd20f1502b0" loc="43:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd20f1502b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f150600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd20f14fd68" loc="50:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f14fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f14e0f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd20f14e278"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd20f14e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fd20f150978" loc="44:../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd20f150978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f150cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd20f121020" loc="75:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd20f121020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f121370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd20f121670" loc="76:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd20f121670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f1219c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f121b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f121cd0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f121e58"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f120020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd20f126a40" loc="65:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd20f126a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f126d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f124020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f1241a8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f124330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f1244b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fd20f124db8" loc="68:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fd20f124db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f123170"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f1232f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f123480"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f123608"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f123790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd20f124748" loc="66:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd20f124748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f124a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20f155e10" loc="64:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20f155e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f1261a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f126330"/>
        <function-ref name="request" scoped="" ref="0x7fd20f1264b8"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f126640"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f1267c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fd20f123ae8" loc="69:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fd20f123ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f123e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fd20f1221a8" loc="71:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fd20f1221a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20f1224f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd20f122680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f122808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f122990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd20f122b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd20f117528" loc="58:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd20f117528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f117878"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f117a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f117b88"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f117d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f116020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd20f116358" loc="59:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd20f116358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f1166a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fd20f0eaac0" loc="184:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fd20f0eaac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20f0eae10"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20f0e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd20f116970" loc="60:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f116970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd20f116cc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd20f116e48"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd20f115020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd20f1151a8"/>
        <function-ref name="getPower" scoped="" ref="0x7fd20f115330"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd20f1154b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fd20f11a490" loc="51:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fd20f11a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f11a7e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f11a968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f11aaf0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f11ac78"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f11ae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd20f1141c0" loc="62:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fd20f1141c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd20f114510"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd20f114698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd20f114820"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd20f1149a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd20f1157a8" loc="61:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f1157a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f115af8"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd20f115c80"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd20f115e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fd20f11bdc8" loc="49:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fd20f11bdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f11a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20f11c428" loc="46:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20f11c428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f11c778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f11c900"/>
        <function-ref name="request" scoped="" ref="0x7fd20f11ca88"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f11cc10"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f11cd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fd20f11b118" loc="48:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fd20f11b118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f11b468"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f11b5f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f11b778"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f11b900"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f11ba88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fd20f118188" loc="52:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fd20f118188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f1184d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fd20f118808" loc="54:../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fd20f118808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20f118b58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd20f118ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f118e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f117020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd20f1171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20f0cbc28" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20f0cbc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20f0ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd20f0ca2a8" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd20f0ca2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd20f0ca5f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd20f0ca780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd20f0ca908"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd20f0caa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd20f0c0dc8" loc="46:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd20f0c0dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd20f0be170"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd20f0be2f8"/>
        <function-ref name="start" scoped="" ref="0x7fd20f0be480"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f0be608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd20f0bd838" loc="51:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd20f0bd838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f0bdb88"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f0bdd10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f0bc020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f0bc1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f0bc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd20f0bc668" loc="52:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd20f0bc668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f0bc9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd20f0c1080" loc="43:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd20f0c1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f0c13d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f0c1558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f0c16e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f0c1868"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f0c19f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd20f0c0318" loc="45:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd20f0c0318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd20f0c0668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd20f0c07f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd20f0c0978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd20f0c0b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fd20f0be928" loc="47:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fd20f0be928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd20f0bec78"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd20f0bee00"/>
        <function-ref name="isState" scoped="" ref="0x7fd20f0bd020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd20f0bd1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7fd20f0bd330"/>
        <function-ref name="forceState" scoped="" ref="0x7fd20f0bd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fd20f0bcd28" loc="53:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fd20f0bcd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd20f0bb0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd20f0bb228"/>
        <function-ref name="start" scoped="" ref="0x7fd20f0bb3b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd20f0bb538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd20f0c1c80" loc="44:../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd20f0c1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f0c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd20f0b8170" loc="41:../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd20f0b8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd20f0b84c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd20f0b8648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd20f0b87d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd20f0b8958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd20f0bad50" loc="67:../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd20f0bad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd20f0b90d8"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd20f0b9260"/>
        <function-ref name="isState" scoped="" ref="0x7fd20f0b93e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd20f0b9570"/>
        <function-ref name="requestState" scoped="" ref="0x7fd20f0b96f8"/>
        <function-ref name="forceState" scoped="" ref="0x7fd20f0b9880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd20f0ab020" loc="45:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd20f0ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f0ab370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f0ab4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f0ab680"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f0ab808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f0ab990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd20f0af5b8" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd20f0af5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f0af908"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f0afa90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f0afc18"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f0afda0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f0ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd20f0ac2d0" loc="41:../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fd20f0ac2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd20f0ac620"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd20f0ac7a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd20f0ac930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd20f0acab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd20f0acc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fd20f0a73c8" loc="44:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd20f0a73c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd20f0a7718"/>
        <function-ref name="noAck" scoped="" ref="0x7fd20f0a78a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd20f0a7a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd20f0aa530" loc="40:../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fd20f0aa530"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd20f0aa880"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd20f0aaa08"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd20f0aab90"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd20f0aad18"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd20f0a7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd20f089cc8" loc="59:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd20f089cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f0880a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd20f089020" loc="58:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd20f089020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f089370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f0894f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f089680"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f089808"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f089990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fd20f087ab0" loc="62:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fd20f087ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd20f087e00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd20f086020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd20f0861a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd20f086330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd20f0864b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd20f086640"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd20f0867c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd20f086950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd20f086ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd20f086c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd20f086de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd20f085020"/>
        <function-ref name="sync" scoped="" ref="0x7fd20f0851a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd20f085430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd20f0855b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd20f08a020" loc="54:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd20f08a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd20f08a370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd20f08a4f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd20f08a680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd20f08a808"/>
        <function-ref name="setCca" scoped="" ref="0x7fd20f08a990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd20f08ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd20f08c400" loc="53:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fd20f08c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd20f08c750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fd20f0846a0" loc="64:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fd20f0846a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd20f0849f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd20f084b78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd20f084d00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd20f083020"/>
        <function-ref name="setCca" scoped="" ref="0x7fd20f0831a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd20f083330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd20f08d2a8" loc="52:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd20f08d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20f08d5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd20f08d780"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f08d908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f08da90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd20f08dc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd20f091938" loc="48:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd20f091938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20f091c88"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f091e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20f090020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20f0901a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20f090330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd20f08f628" loc="50:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fd20f08f628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f08f978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd20f088368" loc="60:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd20f088368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd20f0886b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd20f088840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd20f0889c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd20f088b50"/>
        <function-ref name="getPower" scoped="" ref="0x7fd20f088cd8"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd20f088e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fd20f0858d0" loc="63:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd20f0858d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd20f085d20"/>
        <function-ref name="changed" scoped="" ref="0x7fd20f084020"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd20f0841a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd20f084330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd20f087188" loc="61:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd20f087188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd20f0874d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd20f087660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd20f0877e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd20f090ab0" loc="49:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd20f090ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20f090e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd20f0822a8" loc="67:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd20f0822a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd20f0825f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd20f082780"/>
        <function-ref name="led1On" scoped="" ref="0x7fd20f082908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd20f082a90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd20f082c18"/>
        <function-ref name="get" scoped="" ref="0x7fd20f082da0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd20f081020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd20f081640"/>
        <function-ref name="set" scoped="" ref="0x7fd20f0811a8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd20f081330"/>
        <function-ref name="led2On" scoped="" ref="0x7fd20f0814b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd20f08fc18" loc="51:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd20f08fc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd20f08e020"/>
        <function-ref name="source" scoped="" ref="0x7fd20f08e1a8"/>
        <function-ref name="address" scoped="" ref="0x7fd20f08e330"/>
        <function-ref name="destination" scoped="" ref="0x7fd20f08e4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fd20f08e640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd20f08e7c8"/>
        <function-ref name="type" scoped="" ref="0x7fd20f08e950"/>
        <function-ref name="setType" scoped="" ref="0x7fd20f08ead8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd20f08ec60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd20f08ede8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd20f08d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fd20f083698" loc="66:../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7fd20f083698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20f0839e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20f083b70"/>
        <function-ref name="request" scoped="" ref="0x7fd20f083cf8"/>
        <function-ref name="granted" scoped="" ref="0x7fd20f083e80"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20f082030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd20effe748" loc="46:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd20effe748"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd20effea98"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd20effec20"/>
        <function-ref name="start" scoped="" ref="0x7fd20effeda8"/>
        <function-ref name="stop" scoped="" ref="0x7fd20effb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd20effb798" loc="47:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd20effb798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20effbae8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20effbc70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20effbdf8"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20effa020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20effa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd20eff9020" loc="49:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd20eff9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20eff9370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd20eff94f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20eff9680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20eff9808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd20eff9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd20effa928" loc="48:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd20effa928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20effac78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd20eff7c80" loc="53:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd20eff7c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd20eff5020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd20eff51a8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd20eff5330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd20eff54b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd20eff5640"/>
        <function-ref name="get" scoped="" ref="0x7fd20eff57c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd20eff5950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd20eff4020"/>
        <function-ref name="set" scoped="" ref="0x7fd20eff5ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd20eff5c60"/>
        <function-ref name="led2On" scoped="" ref="0x7fd20eff5de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd20eff7348" loc="51:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd20eff7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd20eff7698"/>
        <function-ref name="noAck" scoped="" ref="0x7fd20eff7820"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd20eff79a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd20eff9c30" loc="50:../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd20eff9c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd20eff8020"/>
        <function-ref name="source" scoped="" ref="0x7fd20eff81a8"/>
        <function-ref name="address" scoped="" ref="0x7fd20eff8330"/>
        <function-ref name="destination" scoped="" ref="0x7fd20eff84b8"/>
        <function-ref name="setSource" scoped="" ref="0x7fd20eff8640"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd20eff87c8"/>
        <function-ref name="type" scoped="" ref="0x7fd20eff8950"/>
        <function-ref name="setType" scoped="" ref="0x7fd20eff8ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd20eff8c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd20eff8de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd20eff7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd20ef9b308" loc="54:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd20ef9b308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20ef9b658"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20ef9b7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20ef9b968"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20ef9baf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20ef9bc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd20ef9a020" loc="55:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd20ef9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20ef9a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd20eff2460" loc="47:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd20eff2460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20eff27d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20eff2958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20eff2ae0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20eff2c68"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20eff2df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd20ef9dd20" loc="50:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd20ef9dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd20ef9c0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd20ef9c228"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20ef9c3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20ef9c538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd20ef9c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd20ef9e180" loc="48:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd20ef9e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20ef9e4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd20ef9c908" loc="51:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd20ef9c908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd20ef9cc58"/>
        <function-ref name="noAck" scoped="" ref="0x7fd20ef9cde0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd20ef9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd20ef9e738" loc="49:../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd20ef9e738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd20ef9ea88"/>
        <function-ref name="source" scoped="" ref="0x7fd20ef9ec10"/>
        <function-ref name="address" scoped="" ref="0x7fd20ef9ed98"/>
        <function-ref name="destination" scoped="" ref="0x7fd20ef9d020"/>
        <function-ref name="setSource" scoped="" ref="0x7fd20ef9d1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd20ef9d330"/>
        <function-ref name="type" scoped="" ref="0x7fd20ef9d4b8"/>
        <function-ref name="setType" scoped="" ref="0x7fd20ef9d640"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd20ef9d7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd20ef9d950"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd20ef9dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd20ef96728" loc="50:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd20ef96728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd20ef96a78"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd20ef96c00"/>
        <function-ref name="start" scoped="" ref="0x7fd20ef96d88"/>
        <function-ref name="stop" scoped="" ref="0x7fd20ef95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd20ef94208" loc="52:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd20ef94208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fd2101a1808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20ef94558"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20ef946e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20ef94868"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20ef949f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20ef94b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20ef96110" loc="49:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20ef96110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20ef96460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd20ef95760" loc="51:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd20ef95760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fd2101a1808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20ef95ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd20ef918f8" loc="56:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd20ef918f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd20ef91c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd20ef91dd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd20ef8d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd20ef8d1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd20ef8d330"/>
        <function-ref name="get" scoped="" ref="0x7fd20ef8d4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd20ef8d640"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd20ef8dc60"/>
        <function-ref name="set" scoped="" ref="0x7fd20ef8d7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd20ef8d950"/>
        <function-ref name="led2On" scoped="" ref="0x7fd20ef8dad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7fd20ef91020" loc="55:../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fd20ef91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fd2101a1808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fd20ef91370"/>
        <function-ref name="offset" scoped="" ref="0x7fd20ef914f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fd20ef91680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd20ef8cce8" loc="66:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd20ef8cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd20ef890a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd20ef89228"/>
        <function-ref name="start" scoped="" ref="0x7fd20ef893b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd20ef89538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7fd20ef27830" loc="332:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7fd20ef27830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20ef27b80"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20ef27d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fd20ef79398" loc="74:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fd20ef79398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd20ef796e8"/>
        <function-ref name="stop" scoped="" ref="0x7fd20ef79870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7fd20ef5ed70" loc="191:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7fd20ef5ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20ef5c0f0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20ef5c278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20ef8c6d0" loc="65:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20ef8c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20ef8ca20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7fd20ef76e40" loc="75:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7fd20ef76e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7fd20ef781c0"/>
        <function-ref name="flush" scoped="" ref="0x7fd20ef78348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7fd20ef2a020" loc="322:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7fd20ef2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20ef2a370"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20ef2a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7fd20ef7ab38" loc="72:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fd20ef7ab38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fd20ef83020"/>
        <function-ref name="resetSend" scoped="" ref="0x7fd20ef831a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fd20ef83330"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fd20ef834b8"/>
        <function-ref name="putData" scoped="" ref="0x7fd20ef83640"/>
        <function-ref name="putDone" scoped="" ref="0x7fd20ef837c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fd20ef83950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd20ef83bc8" loc="73:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd20ef83bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd20ef7f020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd20ef7f1a8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd20ef7f330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd20ef7f4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd20ef7f640"/>
        <function-ref name="get" scoped="" ref="0x7fd20ef7f7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd20ef7f950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd20ef79020"/>
        <function-ref name="set" scoped="" ref="0x7fd20ef7fad8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd20ef7fc60"/>
        <function-ref name="led2On" scoped="" ref="0x7fd20ef7fde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7fd20ef24918" loc="341:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fd20ef24918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20ef24c68"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20ef24df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7fd20ef84898" loc="67:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fd20ef84898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fd20ef84be8"/>
        <function-ref name="nextByte" scoped="" ref="0x7fd20ef84d70"/>
        <function-ref name="startSend" scoped="" ref="0x7fd20ef88020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fd20ef881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7fd20ef80b48" loc="68:../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fd20ef80b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fd20ef87020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fd20ef871a8"/>
        <function-ref name="endPacket" scoped="" ref="0x7fd20ef87330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7fd20ee60100" loc="275:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7fd20ee60100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20ee60450"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20ee605d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd20ee64020" loc="51:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd20ee64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fd2101a1808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20ee64390"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd20ee64518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd20ee646a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd20ee64828"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20ee649b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7fd20ee608a0" loc="158:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7fd20ee608a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20ee60bf0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20ee60d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd20ee65868" loc="50:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd20ee65868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fd2101a1808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd20ee65bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7fd20ee64db8" loc="54:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7fd20ee64db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fd2101a1808"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fd20ee63170"/>
        <function-ref name="offset" scoped="" ref="0x7fd20ee632f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fd20ee63480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd20ee62a50" loc="57:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd20ee62a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd20ee62da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd20ee61020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd20ee611a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd20ee61330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd20ee614b8"/>
        <function-ref name="get" scoped="" ref="0x7fd20ee61640"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd20ee617c8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd20ee61de8"/>
        <function-ref name="set" scoped="" ref="0x7fd20ee61ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd20ee61950"/>
        <function-ref name="led0On" scoped="" ref="0x7fd20ee61c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7fd20ee62020" loc="56:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fd20ee62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fd20ee62370"/>
        <function-ref name="nextByte" scoped="" ref="0x7fd20ee624f8"/>
        <function-ref name="startSend" scoped="" ref="0x7fd20ee62680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fd20ee62808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7fd20ee636c8" loc="55:../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fd20ee636c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fd20ee63a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fd20ee63ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x7fd20ee63d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7fd20ee4d448" loc="50:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fd20ee4d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20ee4d798"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fd20ee4d920"/>
        <function-ref name="receive" scoped="" ref="0x7fd20ee4daa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fd20ee4dc30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fd20ee4ddb8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fd20ee59020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20ee591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7fd20ee5eb20" loc="48:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fd20ee5eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fd20ee5ee70"/>
        <function-ref name="resetSend" scoped="" ref="0x7fd20ee5a020"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fd20ee5a1a8"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fd20ee5a330"/>
        <function-ref name="putData" scoped="" ref="0x7fd20ee5a4b8"/>
        <function-ref name="putDone" scoped="" ref="0x7fd20ee5a640"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fd20ee5a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd20ee59420" loc="51:../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd20ee59420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd20ee59770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd20ee598f8"/>
        <function-ref name="led1On" scoped="" ref="0x7fd20ee59a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd20ee59c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd20ee59d90"/>
        <function-ref name="get" scoped="" ref="0x7fd20ee58020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd20ee581a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd20ee587c8"/>
        <function-ref name="set" scoped="" ref="0x7fd20ee58330"/>
        <function-ref name="led0On" scoped="" ref="0x7fd20ee584b8"/>
        <function-ref name="led2On" scoped="" ref="0x7fd20ee58640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fd20ee2b210" loc="6:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fd20ee2b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20ee2b560"/>
        <function-ref name="receive" scoped="" ref="0x7fd20ee2b6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fd20ee31020" loc="5:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fd20ee31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20ee31370"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fd20ee314f8"/>
        <function-ref name="receive" scoped="" ref="0x7fd20ee31680"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fd20ee31808"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fd20ee31990"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fd20ee31b18"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20ee31ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd20ee5c7d0" loc="4:../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd20ee5c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd20ee5cb20"/>
        <function-ref name="stop" scoped="" ref="0x7fd20ee5cca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd20ecbba68" loc="45:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20ecbba68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd20ecbbdb8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20ecba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fd20ecb92a8" loc="47:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fd20ecb92a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20ecb95f8"/>
        <function-ref name="receive" scoped="" ref="0x7fd20ecb9780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fd20ecb9a08" loc="49:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd20ecb9a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd20ecb9d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fd20ecba2a8" loc="46:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fd20ecba2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20ecba5f8"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fd20ecba780"/>
        <function-ref name="receive" scoped="" ref="0x7fd20ecba908"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fd20ecbaa90"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fd20ecbac18"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fd20ecbada0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20ecb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20ecbce40" loc="44:../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20ecbce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20ecbb1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20ecbb348"/>
        <function-ref name="request" scoped="" ref="0x7fd20ecbb4d0"/>
        <function-ref name="granted" scoped="" ref="0x7fd20ecbb658"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20ecbb7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fd20ee21208" loc="42:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20ee21208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd20ee21558"/>
        <function-ref name="configure" scoped="" ref="0x7fd20ee216e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fd20ee1e498" loc="44:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fd20ee1e498"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20ee1e7e8"/>
        <function-ref name="receive" scoped="" ref="0x7fd20ee1e970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fd20ee1c498" loc="47:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd20ee1c498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd20ee1c7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fd20ee1f020" loc="43:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fd20ee1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20ee1f370"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fd20ee1f4f8"/>
        <function-ref name="receive" scoped="" ref="0x7fd20ee1f680"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fd20ee1f808"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fd20ee1f990"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fd20ee1fb18"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20ee1fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fd20ee1d270" loc="46:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fd20ee1d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20ee1d5c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20ee1d748"/>
        <function-ref name="request" scoped="" ref="0x7fd20ee1d8d0"/>
        <function-ref name="granted" scoped="" ref="0x7fd20ee1da58"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20ee1dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20ee22020" loc="41:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20ee22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20ee22370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20ee224f8"/>
        <function-ref name="request" scoped="" ref="0x7fd20ee22680"/>
        <function-ref name="granted" scoped="" ref="0x7fd20ee22808"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20ee22990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fd20ee1a1c8" loc="48:../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd20ee1a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20ee1a518"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20ee1a6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fd20edb9e00" loc="44:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20edb9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd20edb71a8"/>
        <function-ref name="configure" scoped="" ref="0x7fd20edb7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fd20edb6860" loc="46:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fd20edb6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20edb6bd0"/>
        <function-ref name="receive" scoped="" ref="0x7fd20edb6d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fd20edb4020" loc="49:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd20edb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd20edb4390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fd20edb4658" loc="50:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fd20edb4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd20edb49a8"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd20edb4b30"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd20edb4cb8"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd20edb4e40"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd20edb3020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd20edb31a8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd20edb3330"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd20edb34b8"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd20edb3640"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd20edb37c8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd20edb3950"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd20edb3ad8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd20edb3c60"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd20edb2020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd20edb21a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd20edb2330"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd20edb24b8"/>
        <function-ref name="isUart" scoped="" ref="0x7fd20edb2640"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd20edb27c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd20edb2950"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd20edb2ad8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd20edb2c60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd20edb2de8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd20edb1020"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20edb11a8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd20edb1530"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd20edb16b8"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd20edb1840"/>
        <function-ref name="tx" scoped="" ref="0x7fd20edb19c8"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd20edb1b50"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd20edb1cd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd20edb1e60"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd20edb0020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd20edb01a8"/>
        <function-ref name="rx" scoped="" ref="0x7fd20edb0330"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd20edb04b8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd20edb0640"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd20edb07c8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd20edb0950"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd20edb0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fd20edb76d8" loc="45:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fd20edb76d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd20edb7a48"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fd20edb7bd0"/>
        <function-ref name="receive" scoped="" ref="0x7fd20edb7d58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fd20edb6020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fd20edb61a8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fd20edb6330"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd20edb64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd20edaf9b0" loc="52:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd20edaf9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20edae730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20edad088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20edaebb8"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20edad510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fd20edb5180" loc="48:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fd20edb5180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20edb54f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20edb5678"/>
        <function-ref name="request" scoped="" ref="0x7fd20edb5800"/>
        <function-ref name="granted" scoped="" ref="0x7fd20edb5988"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20edb5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20edb90c8" loc="43:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20edb90c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20edb9438"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20edb95c0"/>
        <function-ref name="request" scoped="" ref="0x7fd20edb9748"/>
        <function-ref name="granted" scoped="" ref="0x7fd20edb98d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20edb9a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fd20edaf020" loc="51:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd20edaf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20edaf390"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20edaf518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd20edad928" loc="53:../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd20edad928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd20edadc78"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd20edade00"/>
        <function-ref name="led1On" scoped="" ref="0x7fd20edab020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd20edab1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd20edab330"/>
        <function-ref name="get" scoped="" ref="0x7fd20edab4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd20edab640"/>
        <function-ref name="led2On" scoped="" ref="0x7fd20edabc60"/>
        <function-ref name="set" scoped="" ref="0x7fd20edab950"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd20edab7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7fd20edabad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fd20ed9d528" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd20ed9d528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20ed9d878"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20ed9da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fd20eda0448" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd20eda0448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd20eda0798"/>
        <function-ref name="stop" scoped="" ref="0x7fd20eda0920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fd20eda0c38" loc="77:../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd20eda0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd20eda3020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd20eda31a8"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd20eda3330"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd20eda34b8"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd20eda3640"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd20eda37c8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd20eda3950"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd20eda3ad8"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd20eda3c60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd20eda3de8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd20eda2020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd20eda21a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd20eda2330"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd20eda25b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd20eda2740"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd20eda28c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd20eda2a50"/>
        <function-ref name="isUart" scoped="" ref="0x7fd20eda2bd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd20eda2d60"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd20ed9f020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd20ed9f1a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd20ed9f330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd20ed9f4b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd20ed9f640"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20ed9f7c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd20ed9fb50"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd20ed9fcd8"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd20ed9fe60"/>
        <function-ref name="tx" scoped="" ref="0x7fd20ed9e020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd20ed9e1a8"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd20ed9e330"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd20ed9e4b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd20ed9e640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd20ed9e7c8"/>
        <function-ref name="rx" scoped="" ref="0x7fd20ed9e950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd20ed9ead8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd20ed9ec60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd20ed9ede8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd20ed9d020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd20ed9d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fd20ed91e00" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fd20ed91e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ed901a8"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ed90330"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ed904b8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ed90640"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ed907c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ed90950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ed90ad8"/>
        <function-ref name="get" scoped="" ref="0x7fd20ed90c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ed90de8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ed8f020"/>
        <function-ref name="set" scoped="" ref="0x7fd20ed8f1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ed8f330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ed8f4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ed8f740"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ed8f8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fd20ed958e0" loc="76:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fd20ed958e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20ed95c30"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20ed95db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fd20ed8fc78" loc="81:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fd20ed8fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ed8e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ed8e1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ed8e330"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ed8e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ed8e640"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ed8e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ed8e950"/>
        <function-ref name="get" scoped="" ref="0x7fd20ed8ead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ed8ec60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ed8ede8"/>
        <function-ref name="set" scoped="" ref="0x7fd20ed8d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ed8d1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ed8d330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ed8d5b8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ed8d740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fd20ed8daf0" loc="82:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fd20ed8daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ed8de40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ed8c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ed8c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ed8c330"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ed8c4b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ed8c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ed8c7c8"/>
        <function-ref name="get" scoped="" ref="0x7fd20ed8c950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ed8cad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ed8cc60"/>
        <function-ref name="set" scoped="" ref="0x7fd20ed8cde8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ed8b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ed8b1a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ed8b430"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ed8b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fd20ed99060" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fd20ed99060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd20ed993b0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd20ed99538"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd20ed996c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd20ed99848"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd20ed999d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd20ed99b58"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd20ed99ce0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd20ed99e68"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd20ed98020"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd20ed981a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd20ed98330"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd20ed984b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd20ed98640"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd20ed988c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd20ed98a50"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd20ed98bd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd20ed98d60"/>
        <function-ref name="isUart" scoped="" ref="0x7fd20ed97020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd20ed971a8"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd20ed97330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd20ed974b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd20ed97640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd20ed977c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd20ed97950"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20ed97ad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd20ed97e60"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd20ed96020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd20ed961a8"/>
        <function-ref name="tx" scoped="" ref="0x7fd20ed96330"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd20ed964b8"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd20ed96640"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd20ed967c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd20ed96950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd20ed96ad8"/>
        <function-ref name="rx" scoped="" ref="0x7fd20ed96c60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd20ed96de8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd20ed95020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd20ed951a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd20ed95330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd20ed954b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fd20ed9c7c0" loc="74:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd20ed9c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd20ed9cb10"/>
        <function-ref name="stop" scoped="" ref="0x7fd20ed9cc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fd20ed92020" loc="79:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fd20ed92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ed92370"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ed924f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ed92680"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ed92808"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ed92990"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ed92b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ed92ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd20ed92e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ed91020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ed911a8"/>
        <function-ref name="set" scoped="" ref="0x7fd20ed91330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ed914b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ed91640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ed918c8"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ed91a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fd20ed941e8" loc="78:../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fd20ed941e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd20ed94538"/>
        <function-ref name="isInput" scoped="" ref="0x7fd20ed946c0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd20ed94848"/>
        <function-ref name="toggle" scoped="" ref="0x7fd20ed949d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd20ed94b58"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd20ed94ce0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd20ed94e68"/>
        <function-ref name="get" scoped="" ref="0x7fd20ed93020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd20ed931a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd20ed93330"/>
        <function-ref name="set" scoped="" ref="0x7fd20ed934b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd20ed93640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd20ed937c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd20ed93a50"/>
        <function-ref name="clr" scoped="" ref="0x7fd20ed93bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd20ed10020" loc="43:../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd20ed10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd20fdee788"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd20fdeeae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd20ed10d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd20ed0f6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd20ed0f230"/>
        <function-ref name="overflow" scoped="" ref="0x7fd20ed0fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd20e3dc5b8" loc="43:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20e3dc5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd20e3dc908"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20e3dca90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd20e3d6430" loc="48:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20e3d6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd20e3d6780"/>
        <function-ref name="configure" scoped="" ref="0x7fd20e3d6908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fd20e3d7bd8" loc="46:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd20e3d7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20e3d6020"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20e3d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20e3dd928" loc="42:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20e3dd928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20e3ddc78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20e3dde00"/>
        <function-ref name="request" scoped="" ref="0x7fd20e3dc020"/>
        <function-ref name="granted" scoped="" ref="0x7fd20e3dc1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20e3dc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fd20e3db4b0" loc="45:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd20e3db4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd20e3db800"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd20e3db988"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd20e3dbb10"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd20e3dbc98"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd20e3dbe20"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd20e3da020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd20e3da1a8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd20e3da330"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd20e3da4b8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd20e3da640"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd20e3da7c8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd20e3da950"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd20e3daad8"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd20e3dad60"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd20e3d9020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd20e3d91a8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd20e3d9330"/>
        <function-ref name="isUart" scoped="" ref="0x7fd20e3d94b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd20e3d9640"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd20e3d97c8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd20e3d9950"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd20e3d9ad8"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd20e3d9c60"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd20e3d9de8"/>
        <function-ref name="getMode" scoped="" ref="0x7fd20e3d8020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd20e3d83a8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd20e3d8530"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd20e3d86b8"/>
        <function-ref name="tx" scoped="" ref="0x7fd20e3d8840"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd20e3d89c8"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd20e3d8b50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd20e3d8cd8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd20e3d8e60"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd20e3d7020"/>
        <function-ref name="rx" scoped="" ref="0x7fd20e3d71a8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd20e3d7330"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd20e3d74b8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd20e3d7640"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd20e3d77c8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd20e3d7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd20e3dcd18" loc="44:../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20e3dcd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd20e3db0a0"/>
        <function-ref name="userId" scoped="" ref="0x7fd20e3db228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd20ecf74d0" loc="42:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20ecf74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd20ecf7820"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20ecf79a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd20ecf69d0" loc="45:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20ecf69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd20ecf6d20"/>
        <function-ref name="configure" scoped="" ref="0x7fd20ecf5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fd20ecfa618" loc="40:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fd20ecfa618"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20ecfa968"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20ecfaaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20ecf8300" loc="41:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20ecf8300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20ecf8650"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20ecf87d8"/>
        <function-ref name="request" scoped="" ref="0x7fd20ecf8960"/>
        <function-ref name="granted" scoped="" ref="0x7fd20ecf8ae8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20ecf8c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd20ecf7ca0" loc="43:../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20ecf7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd20ecf6020"/>
        <function-ref name="userId" scoped="" ref="0x7fd20ecf61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd20ecf3e18" loc="43:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20ecf3e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd20ecf11a8"/>
        <function-ref name="userId" scoped="" ref="0x7fd20ecf1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fd20ecf4140" loc="39:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fd20ecf4140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20ecf44b0"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20ecf4638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fd20ecf3840" loc="42:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fd20ecf3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd20ecf3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fd20ecf4a20" loc="40:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd20ecf4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd20ecf4d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fd20ecf30a0" loc="41:../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fd20ecf30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd20ecf33f0"/>
        <function-ref name="txDone" scoped="" ref="0x7fd20ecf3578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd20ecee698" loc="92:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20ecee698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd20eceea08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20eceeb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd20ecec3c8" loc="96:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20ecec3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd20ecec738"/>
        <function-ref name="configure" scoped="" ref="0x7fd20ecec8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd20eceedd8" loc="93:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd20eceedd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20eced170"/>
        <function-ref name="requested" scoped="" ref="0x7fd20eced2f8"/>
        <function-ref name="granted" scoped="" ref="0x7fd20eced480"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20eced608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20eced790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20ecef908" loc="91:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20ecef908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20ecefc78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20ecefe00"/>
        <function-ref name="request" scoped="" ref="0x7fd20ecee020"/>
        <function-ref name="granted" scoped="" ref="0x7fd20ecee1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20ecee330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd20eced9d8" loc="94:../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20eced9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd20ecedd28"/>
        <function-ref name="userId" scoped="" ref="0x7fd20ecec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd20e370498" loc="44:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd20e370498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd20e3707e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd20e370a70" loc="45:../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd20e370a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd20e370dc0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd20e36f020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd20e36f1a8"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd20e36f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd20e36d9a8" loc="55:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd20e36d9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd20e36dd18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20e36c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd20e36a6f8" loc="60:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd20e36a6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd20e36aa68"/>
        <function-ref name="configure" scoped="" ref="0x7fd20e36abf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd20e36ae78" loc="61:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fd20e36ae78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd20e3691f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd20e369380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd20e369508"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd20e369690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd20e36c268" loc="56:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd20e36c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20e36c5b8"/>
        <function-ref name="requested" scoped="" ref="0x7fd20e36c740"/>
        <function-ref name="granted" scoped="" ref="0x7fd20e36c8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20e36ca50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20e36cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd20e3698d8" loc="62:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd20e3698d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd20e369c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd20e369db0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd20e368020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd20e3681a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd20e368330"/>
        <function-ref name="get" scoped="" ref="0x7fd20e3684b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd20e368640"/>
        <function-ref name="led0On" scoped="" ref="0x7fd20e368c60"/>
        <function-ref name="set" scoped="" ref="0x7fd20e368950"/>
        <function-ref name="led2On" scoped="" ref="0x7fd20e3687c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd20e368ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd20e36ebb8" loc="54:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20e36ebb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20e36d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20e36d1a8"/>
        <function-ref name="request" scoped="" ref="0x7fd20e36d330"/>
        <function-ref name="granted" scoped="" ref="0x7fd20e36d4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20e36d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd20e36ce20" loc="57:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20e36ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd20e36a1a8"/>
        <function-ref name="userId" scoped="" ref="0x7fd20e36a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd20e367020" loc="75:../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fd20e367020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd20e367370"/>
        <function-ref name="runTask" scoped="" ref="0x7fd20e3674f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd20ece8780" loc="72:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd20ece8780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd20ece8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd20ece8d18" loc="73:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd20ece8d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20ecd20a0"/>
        <function-ref name="requested" scoped="" ref="0x7fd20ecd2228"/>
        <function-ref name="granted" scoped="" ref="0x7fd20ecd23b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20ecd2538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20ecd26c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fd20ece8060" loc="70:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd20ece8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd20ece83b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd20ece8538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd20ecd2908" loc="74:../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20ecd2908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd20ecd2c58"/>
        <function-ref name="userId" scoped="" ref="0x7fd20ecd2de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd20e3395b8" loc="62:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd20e3395b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd20e339908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd20e339b50" loc="63:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd20e339b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20e337020"/>
        <function-ref name="requested" scoped="" ref="0x7fd20e3371a8"/>
        <function-ref name="granted" scoped="" ref="0x7fd20e337330"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20e3374b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd20e337640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fd20e33be50" loc="60:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd20e33be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd20e3391e8"/>
        <function-ref name="stop" scoped="" ref="0x7fd20e339370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd20e337888" loc="64:../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd20e337888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd20e337bd8"/>
        <function-ref name="userId" scoped="" ref="0x7fd20e337d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7fd20ecb4080" loc="3:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd20ecb4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd20ecb43d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd20ecb46b0" loc="4:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd20ecb46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd20ecb4a00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd20ecb4b88"/>
        <function-ref name="request" scoped="" ref="0x7fd20ecb4d10"/>
        <function-ref name="granted" scoped="" ref="0x7fd20ecb3020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd20ecb31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd20ecb7800" loc="2:../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd20ecb7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd20ecb7b50"/>
        <function-ref name="stop" scoped="" ref="0x7fd20ecb7cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7fd20eca0020" loc="47:../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7fd20eca0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fd20eca0370"/>
        <function-ref name="offset" scoped="" ref="0x7fd20eca04f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fd20eca0680"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd210369c98" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fd21036a998" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fd21033a6e8" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fd21033dac8" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fd21033a020" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fd21033d448" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fd21033b258" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fd21033e6e8" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fd21033ed68" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fd21033b920" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fd210419830" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fd210730450"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fd2102ea410" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fd2102ea1a0" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fd2102f7a40" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd210333dd8"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fd210332d28"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fd2102eac18" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fd2102e9a50" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fd2102eca48" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fd2102e9328" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fd2102ed1d8" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fd2102ed900" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fd2102ec338" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd210333dd8"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fd210332d28"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd2102ec0c8" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd210333dd8"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fd210332d28"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fd2102e0e30" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fd2102da290" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fd2102da020" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fd2102dada0" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd2102dab30" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd2102db800" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd2102db070" loc="63:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fd2102dd788" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fd2102dd518" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fd2102e4470" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fd2102e4d78" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd2102e4b08" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fd2102e2728" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fd2102e24b8" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fd2102e10a8" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fd2102e2e08" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd2102e1730" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fd2102f3450" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fd2102f2bd8" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fd2102f2968" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fd2102f3b20" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd2102f98e8" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fd2102f2258" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd2102f5748" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fd2102f4d70" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd2102f5070" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd2102f5df0" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fd2102f46d8" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd2102f4468" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fd2102f05d8" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fd2102f0368" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fd2102b7750" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fd2103a01d8" loc="85:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fd2103a08b0" loc="86:../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fd2103a3a28" loc="79:../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fd2104e91d8" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd2107e2020" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fd2107e1020" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fd2107e2718" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fd2107d7ba0" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fd2107d63e0" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fd210193a80" loc="113:../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd210193810" loc="113:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fd210192e70" loc="138:../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd210192c00" loc="138:../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd210196e68" loc="104:../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd210192290" loc="130:../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fd210144a00" loc="78:../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
              <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd210144100" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fd210144428" loc="78:../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd210144738" loc="78:../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fd21012bc60" loc="177:../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd2101a2020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd21012b9f0" loc="177:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fd210134d18" loc="88:../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd2101a23d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd210134aa8" loc="88:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fd210137290" loc="68:../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd2101a23d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fd210137ce8" loc="78:../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd2101a23d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd210137a78" loc="78:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fd2101325d8" loc="121:../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd2101a23d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd210132020" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd210132358" loc="121:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd2101a23d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fd2101350b8" loc="103:../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd2101a23d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd210133a98" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd210133dd0" loc="103:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd2101a23d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fd21012e8c8" loc="147:../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd21012e658" loc="147:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fd21012cb70" loc="162:../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd21012c5f0" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fd21012c8f0" loc="162:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd2101a3b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fd210130788" loc="136:../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd210130518" loc="136:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fd21012d0b8" loc="187:../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd2101a2020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd21012aa80" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fd21012adb0" loc="187:../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd2101a2020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fd21012de20" loc="195:../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd2101a2020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fd210140838" loc="65:../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2101405c8" loc="65:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fd21013f830" loc="78:../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd21013f5c0" loc="78:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd21013d948" loc="126:../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd21013d380" loc="126:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd21013d690" loc="126:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd21013bab8" loc="106:../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fd21013cbd0" loc="94:../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd21013c640" loc="94:../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd21013c950" loc="94:../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fd21011d428" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fd21011db60" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fd21011c328" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fd21011b1d8" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fd210119810" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd210118020" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fd21011ca40" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd210118b20" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fd2101188b0" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fd21011ecd8" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fd21011b948" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fd2101190d8" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7fd21014d2f0" loc="80:../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd2101a23d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fd21014f990" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd2101a23d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fd21014fcf0" loc="80:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd21014d060" loc="80:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd210149628" loc="135:../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd210149060" loc="135:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd210149370" loc="135:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd210148828" loc="123:../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd21014c5b8" loc="96:../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd21014c348" loc="96:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd21014ba00" loc="110:../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd21014b458" loc="110:../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd21014b780" loc="110:../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fd2100bdab0" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fd2100bc1d8" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fd2100bed20" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fd2100ba020" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd2100bd400" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fd2100bc890" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd2100be020" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fd2100be690" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fd210093020" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fd210093708" loc="80:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fd21008fc50" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd21008f9e0" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fd2100958a0" loc="58:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fd210091510" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fd21008e508" loc="117:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fd210093de0" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd2100947b8" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fd210090a90" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fd210094020" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd210098b00" loc="48:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fd210091c28" loc="92:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fd21008f1d8" loc="101:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fd2100903a0" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fd2100951d8" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fd20fde5738" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd20fde5738"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd20fde5968" loc="35:../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20fde5968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fd20fddb670" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20fde5968"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fddb400" loc="63:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fd20fdda750" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fdda4e0" loc="70:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fd20fddc4e8" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fddc278" loc="49:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd20fdd8980" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20fde5968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fdd83c0" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fd20fdd8700" loc="78:../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20fde5968"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fd20fdcd728" loc="65:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fdcd140" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fd20fdcd4a8" loc="65:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fd20fdcb7e8" loc="71:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fdcb578" loc="71:../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fd20fdce978" loc="57:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fd20fdce020" loc="52:../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fd20fdd1cf0" loc="52:../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fd20fde6b70" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fde6900" loc="59:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fd20fde2cb0" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fde2a40" loc="71:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fd20fde0020" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fde3c38" loc="85:../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fd20fda69f8" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fda6788" loc="95:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fd20fda8dd0" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fda8b60" loc="81:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fd20fdaa640" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fd20fdaa3d0" loc="66:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fd20fdacb60" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fd20fdac8f0" loc="60:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fd20fda8020" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fd20fdaad88" loc="73:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fd20fda7c30" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fda79c0" loc="88:../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fd20fd9ad18" loc="59:../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd2101a23d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fd20fd9a738" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd2101a23d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fd20fd9aa98" loc="59:../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fd20fdb5d50" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd20fdb57a8" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fd20fdb5ad0" loc="56:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fd20fdb0118" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd20fdb1b18" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fd20fdb1e68" loc="77:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fd20fdb47d8" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fd210e4f728"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd20fdb4568" loc="64:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fd20fdb1108" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd20fdb2e30" loc="75:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fd20fdb5020" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd20fdb8c48" loc="47:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fd20fdb22d0" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd20fdb2060" loc="72:../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fd20fd9e800" loc="65:../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fd9e590" loc="65:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fd20fda2ac0" loc="46:../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fda24d8" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fd20fda2840" loc="46:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fd20fd9f8a0" loc="59:../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fd9f630" loc="59:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fd20fda0e48" loc="53:../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fda0860" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fd20fda0bc8" loc="53:../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fd20fd9d728" loc="71:../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fd9d4b8" loc="71:../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fd20fdad9e0" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fdad770" loc="47:../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../tos/interfaces/Send.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd20fd8d808" loc="75:../../tos/interfaces/Send.nc">
        <documentation loc="57:../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fd8d278" loc="75:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd20fd8d588" loc="75:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd20fd88a68" loc="125:../../tos/interfaces/Send.nc">
        <documentation loc="115:../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fd884a0" loc="125:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd20fd887b0" loc="125:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd20fd89c70" loc="112:../../tos/interfaces/Send.nc">
        <documentation loc="102:../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd20fd8ba50" loc="89:../../tos/interfaces/Send.nc">
        <documentation loc="77:../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fd8b7e0" loc="89:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd20fd8ae28" loc="100:../../tos/interfaces/Send.nc">
        <documentation loc="91:../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fd8a880" loc="100:../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd20fd8aba8" loc="100:../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fd20fd91808" loc="120:../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fd20fd92910" loc="97:../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fd20fd92020" loc="88:../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fd20fd910d8" loc="102:../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fd20fd90258" loc="128:../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd20fd697d8" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd20fd69240" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fd20fd69558" loc="51:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd20fd68a58" loc="65:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fd20fd640c8" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fd20fd65318" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fd20fd65af0" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd20fd65e00" loc="84:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd20fd67b00" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd20fd67558" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd20fd67880" loc="73:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fd20fd68290" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fd20fd68020" loc="58:../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../tos/interfaces/Random.nc">
      <documentation loc="34:../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fd20fd61178" loc="52:../../tos/interfaces/Random.nc">
        <documentation loc="48:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fd20fd6a9b8" loc="46:../../tos/interfaces/Random.nc">
        <documentation loc="42:../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fd20fd6b020" loc="95:../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd20fd6b7c0" loc="105:../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fd20fd5b020" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fd5ccf8" loc="49:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fd20fd5c570" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7fd21018dd08"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fd21018a648"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fd5c288" loc="42:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fd20fd59308" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7fd210189168"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fd210188948"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20fd59020" loc="53:../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fd20fd70020" loc="71:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fd20fd6e020" loc="97:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fd20fd6f780" loc="90:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fd20fd73700" loc="51:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fd20fd71768" loc="63:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fd20fd70828" loc="76:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fd20fd6f020" loc="83:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fd20fd71020" loc="56:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../tos/interfaces/State.nc">
      <documentation loc="33:../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fd20fd54470" loc="71:../../tos/interfaces/State.nc">
        <documentation loc="68:../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fd20fd57c30" loc="56:../../tos/interfaces/State.nc">
        <documentation loc="53:../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fd20fd56cf0" loc="66:../../tos/interfaces/State.nc">
        <documentation loc="63:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fd20fd56a80" loc="66:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fd20fd56360" loc="61:../../tos/interfaces/State.nc">
        <documentation loc="58:../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fd20fd5eac0" loc="45:../../tos/interfaces/State.nc">
        <documentation loc="40:../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fd20fd5e850" loc="45:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fd20fd57520" loc="51:../../tos/interfaces/State.nc">
        <documentation loc="47:../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fd20fd572b0" loc="51:../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fd20fcfc680" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fd20fcfc0c8" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fd20fcfc400" loc="106:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fd20fcfe178" loc="93:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fd20fcff840" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fd20fcff200" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fd20fcff5c0" loc="87:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fd20fd040a8" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd20fd05e00" loc="55:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fd20fcfe980" loc="98:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fd20fd01960" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fd20fd016f0" loc="72:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fd20fd03108" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fd20fd04e40" loc="61:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fd20fcfb828" loc="117:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fd20fd009f8" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fd20fd00788" loc="78:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fd20fcfb070" loc="112:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fd20fd03828" loc="66:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fd20fdcf930"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fd20fdc8088"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fd20fd01020" loc="71:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fd20fd056d0" loc="54:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fd20fd04790" loc="60:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fd20fd000d8" loc="77:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../tos/interfaces/Read.nc">
      <documentation loc="33:../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fd20fcf70a0" loc="49:../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd20fcf70a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fd20fcf78d8" loc="55:../../tos/interfaces/Read.nc">
        <documentation loc="50:../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fd20fcf55a0" loc="63:../../tos/interfaces/Read.nc">
        <documentation loc="57:../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd20fcf70a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fd20fcf5020" loc="63:../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fd20fcf5320" loc="63:../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd20fcf70a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fd20fcd4e58" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd21018e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20fcd4be8" loc="55:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd20fccd8f0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd21018e020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20fccd680" loc="63:../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fd20fce9290" loc="48:../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fd20fdcf930"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fd20fdc8088"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd20fce83e8" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd20fce83e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd20fce8618" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20fce8618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd20fce3020" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20fce8618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd20fce6070" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fd20fce55c0" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20fce8618"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20fce8618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd20fce5020" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20fce8618"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fd20fce5340" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20fce8618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd20fce67b8" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fd20fce37a0" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20fce8618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd20fce7108" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20fce8618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd20fce8e68" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20fce8618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd20fce78d8" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fd20fcd6db8" loc="50:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd2101a23d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fd20fcd5c48" loc="60:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fd20fcd5558" loc="55:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd2101a2020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fd20fcd65d8" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd2101a2020"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd2101a23d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fd20fcd6020" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd2101a2020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd20fcd6358" loc="45:../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd2101a23d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fd20fcc9c28" loc="53:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd21018e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fd20fcd1358" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd21018e020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fd20fcd3508" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd20fcd3d10" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd20fcd10c8" loc="52:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd20fcd09a8" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd21018e020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fd20fcd1ba8" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd20fcd03e8" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd20fcd0718" loc="63:../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fd20fcd95b0" loc="68:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd20fcdadf0" loc="61:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fd20fcda6f0" loc="54:../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fd20fcdde80" loc="53:../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd20fbd3c68" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd20fbd3c68"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd20fbce020" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20fbce020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd20fbce8b8" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20fbce020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd20fbcd900" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd20fbcd110" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd20fbcb020" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fd20fb11b60" loc="54:../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd20fb10bf0" loc="66:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fd20fb104b8" loc="61:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd20fb10248" loc="61:../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fd20fb11378" loc="53:../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fd20faec978" loc="52:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd20fae9328" loc="72:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd20faec290" loc="47:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fd20faeaae8" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fd20faea878" loc="67:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fd20faefb50" loc="42:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fd20faea110" loc="59:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fd20f9e08c8" loc="24:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fd20f9df0d8" loc="31:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fd20f9df8a8" loc="39:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fd20f9b92a0" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20f9babb0" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd20f9b9020" loc="62:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fd20f9b42b0" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20f9b5908" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd20f9b5c38" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd20f9b4020" loc="91:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd20f9b6bd0" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd21018e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20f9b6620" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd20f9b6950" loc="82:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fd20f9bbe58" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd21018e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20f9bb8a8" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd20f9bbbd8" loc="51:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fd20f9b8908" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20f9b8020" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd20f9b8350" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd20f9b8678" loc="71:../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../../tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd20f99b930" loc="70:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fd20f99b020" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fd20f99b380" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd20f99b6a0" loc="70:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd20f999cc8" loc="82:../../tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fd20f999060" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fd20f9993c0" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd20f9996e0" loc="82:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd20f999a28" loc="83:../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fd20f99f990" loc="45:../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fd20f99f720" loc="45:../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fd20f8c2360" loc="53:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fd20f8c2c28" loc="61:../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fd20f8c0c08" loc="39:../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fd20f8f5d50"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fd20f8f4188"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fd20f8c4d50" loc="62:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20f8c4ae0" loc="62:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fd20f8be020" loc="74:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20f8bfd58" loc="74:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fd20f8bf5b0" loc="68:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd20f8be9c0" loc="81:../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20f8be750" loc="81:../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fd20f8b40d8" loc="65:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fd20f8b58f8" loc="59:../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fd20f8ac2d0" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20f8ac060" loc="54:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fd20f8b08f8" loc="49:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fd20f8897a8" loc="213:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fd20f894b78" loc="143:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fd20f8a0290" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd20f910bc0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fd20f90f438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd20f8a0020" loc="50:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd20f910bc0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fd20f90f438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fd20f897e58" loc="123:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fd20f89d540" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd20f90c8f0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fd20f90a178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd20f89d2d0" loc="70:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd20f90c8f0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fd20f90a178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fd20f88edb0" loc="180:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fd20f88a258" loc="197:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fd20f89fb48" loc="65:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd20f90e978"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fd20f90d178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fd20f89dcc8" loc="75:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd20f90c8f0"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fd20f90a178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fd20f89a790" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fd20f89a520" loc="97:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fd20f89be40" loc="95:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fd20f88e6e0" loc="179:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fd20f89f3c0" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd20f90e978"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fd20f90d178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd20f89f150" loc="60:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd20f90e978"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fd20f90d178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fd20f89cd70" loc="85:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fd20f88d4d0" loc="181:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fd20f89b700" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fd20f89b490" loc="90:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fd20f897020" loc="113:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fd20f897738" loc="118:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fd20f88f7c8" loc="177:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fd20f892878" loc="163:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fd20f896cc8" loc="133:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fd20f88e020" loc="178:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fd20f893328" loc="148:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fd20f88db88" loc="182:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fd20f898020" loc="103:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fd20f916cf0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fd20f9123b8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fd20f88b328" loc="187:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fd20f889070" loc="207:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fd20f89c630" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fd20f89c3c0" loc="80:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fd20f888108" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20f889e60" loc="224:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fd20f8a09f8" loc="55:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd20f910bc0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fd20f90f438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fd20f8965a8" loc="128:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fd20f893a18" loc="153:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fd20f88f020" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fd20f8e25b8"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fd20f8e29c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fd20f891d20" loc="174:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fd20f8e25b8"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fd20f8e29c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fd20f891338" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fd20f8f5d50"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fd20f8f4188"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fd20f8910c8" loc="168:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fd20f8f5d50"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fd20f8f4188"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fd20f888950" loc="231:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fd20f88baa8" loc="192:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fd20f898768" loc="108:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fd20f88a950" loc="202:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fd20f892178" loc="158:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fd20f894468" loc="138:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fd20f8256b0" loc="39:../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fd20f7ffae0" loc="80:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fd20f810070" loc="31:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fd20f806b20" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fd20f8068b0" loc="62:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fd20f819a30" loc="11:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fd20f802020" loc="71:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fd20f80be70" loc="49:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fd20f811258" loc="28:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fd20f810e28" loc="34:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fd20f813290" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fd20f813020" loc="25:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fd20f8157b0" loc="21:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fd20f80da28" loc="41:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fd20f804990" loc="66:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fd20f7ff3e0" loc="78:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fd20f8061d8" loc="61:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fd20f7fa1d8" loc="91:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fd20f7f6710" loc="100:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fd20f818828" loc="14:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fd20f80d328" loc="38:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fd20f80cac0" loc="45:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fd20f813af0" loc="27:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fd20f81a8a8" loc="7:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fd20f807a10" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fd20f8077a0" loc="58:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fd20f81a1d8" loc="6:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fd20f8037d8" loc="69:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fd20f7fe258" loc="81:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fd20f7f9828" loc="94:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fd20f7f6020" loc="97:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fd20f802e40" loc="74:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fd20f7fe928" loc="83:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fd20f804290" loc="65:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fd20f7fb2a8" loc="87:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fd20f816020" loc="15:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fd20f808020" loc="53:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fd20f7fd750" loc="86:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fd20f801ca8" loc="77:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fd20f80b708" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fd20f80b498" loc="46:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fd20f7f8020" loc="95:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fd20f8070d8" loc="57:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fd20f802730" loc="72:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fd20f819338" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fd20f8cfaa0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fd20f8ce020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fd20f8190c8" loc="8:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fd20f8cfaa0"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fd20f8ce020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fd20f80fc00" loc="37:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fd20f8150a8" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd20f816db8" loc="19:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fd20f80c338" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20f80c0c8" loc="42:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fd20f7fba18" loc="90:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fd20f814830" loc="24:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fd20f816730" loc="18:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fd20f808960" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fd20f8086f0" loc="54:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fd20f818178" loc="12:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fd20f7fd020" loc="84:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fd20f8015a0" loc="75:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fd20f8030d8" loc="68:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fd20f80a7f8" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fd20f80a588" loc="50:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fd20f80f510" loc="35:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fd20f811938" loc="29:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fd20f7f8730" loc="96:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fd20f814108" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd20f815e50" loc="22:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fd20f7fa938" loc="92:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fd20f810740" loc="32:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fd20f7f90d8" loc="93:../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fd20f7620d8" loc="90:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fd20f7628c8" loc="98:../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fd20f72b020" loc="56:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fd20f72a020" loc="73:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fd20f72d750" loc="46:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fd20f72b820" loc="65:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fd20f72a8e8" loc="81:../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fd20f720c80" loc="79:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd20f726020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd20f720a10" loc="79:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd20f726020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fd20f724e00" loc="53:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fd20f7218f0" loc="62:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd20f726020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd20f721680" loc="62:../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd20f726020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fd20f7201d8" loc="70:../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fd20f726020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fd20f530370" loc="13:../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd20f530100" loc="13:../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fd20f51d358" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7fd20f520a00" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fd20f520d48" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd20f51d0c8" loc="10:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd20f51b020" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fd20f51da30" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd20f51dd40" loc="11:../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd20f504420" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd20f504420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd20f504650" loc="59:../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20f504650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fd20f503118" loc="66:../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20f504650"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd20f504e78" loc="66:../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd20f504650"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fd20f4a88b8" loc="43:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fd20f4752a0" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fd20f4768b8" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fd20f475020" loc="63:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fd20f476178" loc="55:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fd20f47a9c8" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd20f47a758" loc="49:../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fd20f48aa68" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20f48a7f8" loc="58:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fd20f48eb48" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20f48e8d8" loc="50:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd20f4878f8" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20f487688" loc="72:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd20f4889c0" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20f488750" loc="65:../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd20f31fa50" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd20f31fa50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd20f31c328" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd20f2bfda0" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd20f2bfda0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd20f2b5760" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd20f2b91d8" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fd20f2b8da8" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd20f2b8810" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd20f2b8b28" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fd20f2b80d8" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fd20f2b46b0" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fd20f2b5e80" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd20f2b9908" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd2107e51d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fd20f2bc8f0" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd20f2bc680" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fd20f2b7d28" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd20f2b7790" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd20f2b7aa8" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fd20f2bb378" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd20f2bb108" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd210e4d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd20f2bbb20" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fd20f193480" loc="53:../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd20f193480"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fd20f190020" loc="64:../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd20f193480"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fd20f193cb8" loc="64:../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd20f193480"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7fd20ef8e640" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20ef8e060" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7fd20ef8e3c0" loc="31:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7fd20ef92940" loc="15:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7fd20ef8f760" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd20ef8f198" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd210151c58"/>
                <typename><typedef-ref name="message_t" ref="0x7fd21014f228"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7fd20ef8f4e0" loc="23:../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7fd20ef76b60" loc="54:../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7fd20ef76450" loc="49:../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7fd20ef7e1d8" loc="56:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7fd20ef7d528" loc="72:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7fd20ef7a020" loc="94:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20ef7ccf0" loc="94:../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7fd20ef7dd40" loc="79:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7fd20ef7ecc8" loc="65:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20ef7ea58" loc="65:../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7fd20ef7a818" loc="100:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7fd20ef7c5b8" loc="85:../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7fd20ef85020" loc="71:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7fd20ef858d8" loc="81:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7fd20ef866c8" loc="62:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7fd20ef86458" loc="62:../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7fd20ef84430" loc="91:../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd20ef841c0" loc="91:../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7fd20ef82020" loc="62:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7fd20ef82bc8" loc="69:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd20ef82958" loc="69:../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7fd20ef80640" loc="80:../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fd20ef803d0" loc="80:../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd20ee57988" loc="48:../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fd20ee573e8" loc="48:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd20ee57708" loc="48:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7fd20ee524a8" loc="79:../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fd20ee52238" loc="79:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fd20ee512a0" loc="90:../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fd20ee52c20" loc="90:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd20ee51020" loc="90:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7fd20ee541d8" loc="65:../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7fd20ee50a38" loc="99:../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fd20ee50160" loc="99:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd20ee50480" loc="99:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd20ee507a8" loc="99:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7fd20ee54a50" loc="72:../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd20ee562b0" loc="57:../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fd20ee55880" loc="57:../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd20ee55ba0" loc="57:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd210e4eb20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd20ee56020" loc="57:../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:../../tos/interfaces/UartByte.nc">
      <documentation loc="32:../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd20ee30ad0" loc="46:../../tos/interfaces/UartByte.nc">
        <documentation loc="39:../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fd20ee30860" loc="46:../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fd20ee2d8f8" loc="56:../../tos/interfaces/UartByte.nc">
        <documentation loc="48:../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fd20ee2d340" loc="56:../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7fd20ee2d678" loc="56:../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd210e4e790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fd20ee27c20" loc="39:../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fd20f8e25b8"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fd20f8e29c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fd20eda1830" loc="95:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd20eda0030" loc="105:../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2107dd780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fd20ece6c08" loc="62:../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
